Terminals unused in grammar

   UPON
   CHANGES
   INCREASES
   DECREASES
   WHENEVER
   DOES
   DIVIDE
   EMPOWER
   REMIND


Grammar

    0 $accept: programm $end

    1 programm: statements

    2 statements: statement
    3           | statements statement

    4 statement: expression
    5          | declaration
    6          | struct_decl
    7          | assign
    8          | output
    9          | if_statement
   10          | while_statement
   11          | for_statement
   12          | flow_break
   13          | function_decl

   14 complex_identifier: ID
   15                   | ID FROM complex_identifier

   16 var_type: INT_TYPE
   17         | STR_TYPE
   18         | BOOLEAN_TYPE
   19         | ID

   20 assign: LET complex_identifier BE expression
   21       | LET complex_identifier ASCEND
   22       | LET complex_identifier DESCEND
   23       | LET THERE BE expression ADDED BOOL_TO complex_identifier
   24       | LET THERE BE expression CONSPIRED FROM complex_identifier
   25       | LET THERE BE expression DIVIDING complex_identifier
   26       | LET THERE BE expression EMPOWERING complex_identifier
   27       | LET THERE BE expression REMINDING complex_identifier

   28 declaration: ENTER var_type ID
   29            | ENTER FIXED var_type ID
   30            | ENTER var_type ID TELLING expression
   31            | ENTER FIXED var_type ID TELLING expression

   32 decl_list: declaration
   33          | decl_list ',' declaration

   34 struct_decl: PROCLAIM ID '<' decl_list '>'

   35 expression: '<' expression '>'
   36           | expression ADDING expression
   37           | expression CONSPIRING expression
   38           | expression DIVIDING expression
   39           | expression REMINDING expression
   40           | expression EMPOWERING expression
   41           | expression BOOL_IS expression
   42           | expression BOOL_IS NOT expression
   43           | expression BOOL_LOWER BOOL_THAN expression
   44           | expression BOOL_GREATER BOOL_THAN expression
   45           | expression BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   47           | complex_identifier
   48           | NONE
   49           | ONE
   50           | NUMBER
   51           | STRING
   52           | BOOL_FALSE
   53           | BOOL_TRUE
   54           | input
   55           | function_call

   56 output: QUOTE '<' expression '>'

   57 input: SUMMON '<' complex_identifier '>'

   58 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>'
   59             | ASK WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE '<' statements '>'

   60 while_statement: SINCE expression '<' statements '>'

   61 for_statement: FOR assign ',' expression ',' assign '<' statements '>'

   62 flow_break: EXEUNT expression '!'
   63           | EXEUNT '!'
   64           | FLOW_BREAK FLOW_FREE
   65           | FLOW_CONTINUE

   66 function_decl_item: var_type ID

   67 function_decl_list: function_decl_item
   68                   | function_decl_list ',' function_decl_item

   69 function_decl: DESCRIBE ID AS var_type ADVENTURE OF '<' function_decl_list '>' '<' statements '>'

   70 function_call: CRY FOR ID '<' expression_list '>'

   71 expression_list: expression
   72                | expression_list ',' expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 62 63
',' (44) 33 61 68 72
'<' (60) 34 35 56 57 58 59 60 61 69 70
'>' (62) 34 35 56 57 58 59 60 61 69 70
error (256)
UPON (258)
NOT (259) 42
SINCE (260) 60
FROM (261) 15 24
THEN (262) 58 59
CHANGES (263)
INCREASES (264)
DECREASES (265)
WHENEVER (266)
DOES (267)
ID (268) 14 15 19 28 29 30 31 34 66 69 70
TELLING (269) 30 31
FIXED (270) 29 31
INT_TYPE (271) 16
STR_TYPE (272) 17
BOOLEAN_TYPE (273) 18
NONE (274) 48
ONE (275) 49
NUMBER (276) 50
STRING (277) 51
BOOL_TRUE (278) 53
BOOL_FALSE (279) 52
QUOTE (280) 56
SUMMON (281) 57
DIVIDING (282) 25 38
REMINDING (283) 27 39
ADDING (284) 36
CONSPIRING (285) 37
EMPOWERING (286) 26 40
DIVIDE (287)
ADDED (288) 23
EMPOWER (289)
CONSPIRED (290) 24
REMIND (291)
ASCEND (292) 21
DESCEND (293) 22
BOOL_IS (294) 41 42
BOOL_UP (295) 45
BOOL_TO (296) 23 45 46
BOOL_DOWN (297) 46
BOOL_LOWER (298) 43 45
BOOL_GREATER (299) 44 46
BOOL_THAN (300) 43 44 45 46
FLOW_BREAK (301) 64
FLOW_FREE (302) 64
FLOW_CONTINUE (303) 65
EXEUNT (304) 62 63
DESCRIBE (305) 69
ADVENTURE (306) 69
AS (307) 69
OF (308) 69
CRY (309) 70
FOR (310) 61 70
ASK (311) 58 59
WHETHER (312) 58 59
OTHERWISE (313) 59
BE (314) 20 23 24 25 26 27
ENTER (315) 28 29 30 31
PROCLAIM (316) 34
LET (317) 20 21 22 23 24 25 26 27
THERE (318) 23 24 25 26 27


Nonterminals, with rules where they appear

$accept (68)
    on left: 0
programm (69)
    on left: 1, on right: 0
statements (70)
    on left: 2 3, on right: 1 3 58 59 60 61 69
statement (71)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 3
complex_identifier (72)
    on left: 14 15, on right: 15 20 21 22 23 24 25 26 27 47 57
var_type (73)
    on left: 16 17 18 19, on right: 28 29 30 31 66 69
assign (74)
    on left: 20 21 22 23 24 25 26 27, on right: 7 61
declaration (75)
    on left: 28 29 30 31, on right: 5 32 33
decl_list (76)
    on left: 32 33, on right: 33 34
struct_decl (77)
    on left: 34, on right: 6
expression (78)
    on left: 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
    53 54 55, on right: 4 20 23 24 25 26 27 30 31 35 36 37 38 39 40
    41 42 43 44 45 46 56 58 59 60 61 62 71 72
output (79)
    on left: 56, on right: 8
input (80)
    on left: 57, on right: 54
if_statement (81)
    on left: 58 59, on right: 9
while_statement (82)
    on left: 60, on right: 10
for_statement (83)
    on left: 61, on right: 11
flow_break (84)
    on left: 62 63 64 65, on right: 12
function_decl_item (85)
    on left: 66, on right: 67 68
function_decl_list (86)
    on left: 67 68, on right: 68 69
function_decl (87)
    on left: 69, on right: 13
function_call (88)
    on left: 70, on right: 55
expression_list (89)
    on left: 71 72, on right: 70 72


State 0

    0 $accept: . programm $end

    SINCE          shift, and go to state 1
    ID             shift, and go to state 2
    NONE           shift, and go to state 3
    ONE            shift, and go to state 4
    NUMBER         shift, and go to state 5
    STRING         shift, and go to state 6
    BOOL_TRUE      shift, and go to state 7
    BOOL_FALSE     shift, and go to state 8
    QUOTE          shift, and go to state 9
    SUMMON         shift, and go to state 10
    FLOW_BREAK     shift, and go to state 11
    FLOW_CONTINUE  shift, and go to state 12
    EXEUNT         shift, and go to state 13
    DESCRIBE       shift, and go to state 14
    CRY            shift, and go to state 15
    FOR            shift, and go to state 16
    ASK            shift, and go to state 17
    ENTER          shift, and go to state 18
    PROCLAIM       shift, and go to state 19
    LET            shift, and go to state 20
    '<'            shift, and go to state 21

    programm            go to state 22
    statements          go to state 23
    statement           go to state 24
    complex_identifier  go to state 25
    assign              go to state 26
    declaration         go to state 27
    struct_decl         go to state 28
    expression          go to state 29
    output              go to state 30
    input               go to state 31
    if_statement        go to state 32
    while_statement     go to state 33
    for_statement       go to state 34
    flow_break          go to state 35
    function_decl       go to state 36
    function_call       go to state 37


State 1

   60 while_statement: SINCE . expression '<' statements '>'

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 25
    expression          go to state 38
    input               go to state 31
    function_call       go to state 37


State 2

   14 complex_identifier: ID .
   15                   | ID . FROM complex_identifier

    FROM  shift, and go to state 39

    $default  reduce using rule 14 (complex_identifier)


State 3

   48 expression: NONE .

    $default  reduce using rule 48 (expression)


State 4

   49 expression: ONE .

    $default  reduce using rule 49 (expression)


State 5

   50 expression: NUMBER .

    $default  reduce using rule 50 (expression)


State 6

   51 expression: STRING .

    $default  reduce using rule 51 (expression)


State 7

   53 expression: BOOL_TRUE .

    $default  reduce using rule 53 (expression)


State 8

   52 expression: BOOL_FALSE .

    $default  reduce using rule 52 (expression)


State 9

   56 output: QUOTE . '<' expression '>'

    '<'  shift, and go to state 40


State 10

   57 input: SUMMON . '<' complex_identifier '>'

    '<'  shift, and go to state 41


State 11

   64 flow_break: FLOW_BREAK . FLOW_FREE

    FLOW_FREE  shift, and go to state 42


State 12

   65 flow_break: FLOW_CONTINUE .

    $default  reduce using rule 65 (flow_break)


State 13

   62 flow_break: EXEUNT . expression '!'
   63           | EXEUNT . '!'

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21
    '!'         shift, and go to state 43

    complex_identifier  go to state 25
    expression          go to state 44
    input               go to state 31
    function_call       go to state 37


State 14

   69 function_decl: DESCRIBE . ID AS var_type ADVENTURE OF '<' function_decl_list '>' '<' statements '>'

    ID  shift, and go to state 45


State 15

   70 function_call: CRY . FOR ID '<' expression_list '>'

    FOR  shift, and go to state 46


State 16

   61 for_statement: FOR . assign ',' expression ',' assign '<' statements '>'

    LET  shift, and go to state 20

    assign  go to state 47


State 17

   58 if_statement: ASK . WHETHER '<' expression '>' THEN '<' statements '>'
   59             | ASK . WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE '<' statements '>'

    WHETHER  shift, and go to state 48


State 18

   28 declaration: ENTER . var_type ID
   29            | ENTER . FIXED var_type ID
   30            | ENTER . var_type ID TELLING expression
   31            | ENTER . FIXED var_type ID TELLING expression

    ID            shift, and go to state 49
    FIXED         shift, and go to state 50
    INT_TYPE      shift, and go to state 51
    STR_TYPE      shift, and go to state 52
    BOOLEAN_TYPE  shift, and go to state 53

    var_type  go to state 54


State 19

   34 struct_decl: PROCLAIM . ID '<' decl_list '>'

    ID  shift, and go to state 55


State 20

   20 assign: LET . complex_identifier BE expression
   21       | LET . complex_identifier ASCEND
   22       | LET . complex_identifier DESCEND
   23       | LET . THERE BE expression ADDED BOOL_TO complex_identifier
   24       | LET . THERE BE expression CONSPIRED FROM complex_identifier
   25       | LET . THERE BE expression DIVIDING complex_identifier
   26       | LET . THERE BE expression EMPOWERING complex_identifier
   27       | LET . THERE BE expression REMINDING complex_identifier

    ID     shift, and go to state 2
    THERE  shift, and go to state 56

    complex_identifier  go to state 57


State 21

   35 expression: '<' . expression '>'

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 25
    expression          go to state 58
    input               go to state 31
    function_call       go to state 37


State 22

    0 $accept: programm . $end

    $end  shift, and go to state 59


State 23

    1 programm: statements .
    3 statements: statements . statement

    SINCE          shift, and go to state 1
    ID             shift, and go to state 2
    NONE           shift, and go to state 3
    ONE            shift, and go to state 4
    NUMBER         shift, and go to state 5
    STRING         shift, and go to state 6
    BOOL_TRUE      shift, and go to state 7
    BOOL_FALSE     shift, and go to state 8
    QUOTE          shift, and go to state 9
    SUMMON         shift, and go to state 10
    FLOW_BREAK     shift, and go to state 11
    FLOW_CONTINUE  shift, and go to state 12
    EXEUNT         shift, and go to state 13
    DESCRIBE       shift, and go to state 14
    CRY            shift, and go to state 15
    FOR            shift, and go to state 16
    ASK            shift, and go to state 17
    ENTER          shift, and go to state 18
    PROCLAIM       shift, and go to state 19
    LET            shift, and go to state 20
    '<'            shift, and go to state 21

    $default  reduce using rule 1 (programm)

    statement           go to state 60
    complex_identifier  go to state 25
    assign              go to state 26
    declaration         go to state 27
    struct_decl         go to state 28
    expression          go to state 29
    output              go to state 30
    input               go to state 31
    if_statement        go to state 32
    while_statement     go to state 33
    for_statement       go to state 34
    flow_break          go to state 35
    function_decl       go to state 36
    function_call       go to state 37


State 24

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 25

   47 expression: complex_identifier .

    $default  reduce using rule 47 (expression)


State 26

    7 statement: assign .

    $default  reduce using rule 7 (statement)


State 27

    5 statement: declaration .

    $default  reduce using rule 5 (statement)


State 28

    6 statement: struct_decl .

    $default  reduce using rule 6 (statement)


State 29

    4 statement: expression .
   36 expression: expression . ADDING expression
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 61
    REMINDING     shift, and go to state 62
    ADDING        shift, and go to state 63
    CONSPIRING    shift, and go to state 64
    EMPOWERING    shift, and go to state 65
    BOOL_IS       shift, and go to state 66
    BOOL_UP       shift, and go to state 67
    BOOL_DOWN     shift, and go to state 68
    BOOL_LOWER    shift, and go to state 69
    BOOL_GREATER  shift, and go to state 70

    $default  reduce using rule 4 (statement)


State 30

    8 statement: output .

    $default  reduce using rule 8 (statement)


State 31

   54 expression: input .

    $default  reduce using rule 54 (expression)


State 32

    9 statement: if_statement .

    $default  reduce using rule 9 (statement)


State 33

   10 statement: while_statement .

    $default  reduce using rule 10 (statement)


State 34

   11 statement: for_statement .

    $default  reduce using rule 11 (statement)


State 35

   12 statement: flow_break .

    $default  reduce using rule 12 (statement)


State 36

   13 statement: function_decl .

    $default  reduce using rule 13 (statement)


State 37

   55 expression: function_call .

    $default  reduce using rule 55 (expression)


State 38

   36 expression: expression . ADDING expression
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   60 while_statement: SINCE expression . '<' statements '>'

    DIVIDING      shift, and go to state 61
    REMINDING     shift, and go to state 62
    ADDING        shift, and go to state 63
    CONSPIRING    shift, and go to state 64
    EMPOWERING    shift, and go to state 65
    BOOL_IS       shift, and go to state 66
    BOOL_UP       shift, and go to state 67
    BOOL_DOWN     shift, and go to state 68
    BOOL_LOWER    shift, and go to state 69
    BOOL_GREATER  shift, and go to state 70
    '<'           shift, and go to state 71


State 39

   15 complex_identifier: ID FROM . complex_identifier

    ID  shift, and go to state 2

    complex_identifier  go to state 72


State 40

   56 output: QUOTE '<' . expression '>'

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 25
    expression          go to state 73
    input               go to state 31
    function_call       go to state 37


State 41

   57 input: SUMMON '<' . complex_identifier '>'

    ID  shift, and go to state 2

    complex_identifier  go to state 74


State 42

   64 flow_break: FLOW_BREAK FLOW_FREE .

    $default  reduce using rule 64 (flow_break)


State 43

   63 flow_break: EXEUNT '!' .

    $default  reduce using rule 63 (flow_break)


State 44

   36 expression: expression . ADDING expression
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   62 flow_break: EXEUNT expression . '!'

    DIVIDING      shift, and go to state 61
    REMINDING     shift, and go to state 62
    ADDING        shift, and go to state 63
    CONSPIRING    shift, and go to state 64
    EMPOWERING    shift, and go to state 65
    BOOL_IS       shift, and go to state 66
    BOOL_UP       shift, and go to state 67
    BOOL_DOWN     shift, and go to state 68
    BOOL_LOWER    shift, and go to state 69
    BOOL_GREATER  shift, and go to state 70
    '!'           shift, and go to state 75


State 45

   69 function_decl: DESCRIBE ID . AS var_type ADVENTURE OF '<' function_decl_list '>' '<' statements '>'

    AS  shift, and go to state 76


State 46

   70 function_call: CRY FOR . ID '<' expression_list '>'

    ID  shift, and go to state 77


State 47

   61 for_statement: FOR assign . ',' expression ',' assign '<' statements '>'

    ','  shift, and go to state 78


State 48

   58 if_statement: ASK WHETHER . '<' expression '>' THEN '<' statements '>'
   59             | ASK WHETHER . '<' expression '>' THEN '<' statements '>' OTHERWISE '<' statements '>'

    '<'  shift, and go to state 79


State 49

   19 var_type: ID .

    $default  reduce using rule 19 (var_type)


State 50

   29 declaration: ENTER FIXED . var_type ID
   31            | ENTER FIXED . var_type ID TELLING expression

    ID            shift, and go to state 49
    INT_TYPE      shift, and go to state 51
    STR_TYPE      shift, and go to state 52
    BOOLEAN_TYPE  shift, and go to state 53

    var_type  go to state 80


State 51

   16 var_type: INT_TYPE .

    $default  reduce using rule 16 (var_type)


State 52

   17 var_type: STR_TYPE .

    $default  reduce using rule 17 (var_type)


State 53

   18 var_type: BOOLEAN_TYPE .

    $default  reduce using rule 18 (var_type)


State 54

   28 declaration: ENTER var_type . ID
   30            | ENTER var_type . ID TELLING expression

    ID  shift, and go to state 81


State 55

   34 struct_decl: PROCLAIM ID . '<' decl_list '>'

    '<'  shift, and go to state 82


State 56

   23 assign: LET THERE . BE expression ADDED BOOL_TO complex_identifier
   24       | LET THERE . BE expression CONSPIRED FROM complex_identifier
   25       | LET THERE . BE expression DIVIDING complex_identifier
   26       | LET THERE . BE expression EMPOWERING complex_identifier
   27       | LET THERE . BE expression REMINDING complex_identifier

    BE  shift, and go to state 83


State 57

   20 assign: LET complex_identifier . BE expression
   21       | LET complex_identifier . ASCEND
   22       | LET complex_identifier . DESCEND

    ASCEND   shift, and go to state 84
    DESCEND  shift, and go to state 85
    BE       shift, and go to state 86


State 58

   35 expression: '<' expression . '>'
   36           | expression . ADDING expression
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 61
    REMINDING     shift, and go to state 62
    ADDING        shift, and go to state 63
    CONSPIRING    shift, and go to state 64
    EMPOWERING    shift, and go to state 65
    BOOL_IS       shift, and go to state 66
    BOOL_UP       shift, and go to state 67
    BOOL_DOWN     shift, and go to state 68
    BOOL_LOWER    shift, and go to state 69
    BOOL_GREATER  shift, and go to state 70
    '>'           shift, and go to state 87


State 59

    0 $accept: programm $end .

    $default  accept


State 60

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 61

   38 expression: expression DIVIDING . expression

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 25
    expression          go to state 88
    input               go to state 31
    function_call       go to state 37


State 62

   39 expression: expression REMINDING . expression

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 25
    expression          go to state 89
    input               go to state 31
    function_call       go to state 37


State 63

   36 expression: expression ADDING . expression

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 25
    expression          go to state 90
    input               go to state 31
    function_call       go to state 37


State 64

   37 expression: expression CONSPIRING . expression

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 25
    expression          go to state 91
    input               go to state 31
    function_call       go to state 37


State 65

   40 expression: expression EMPOWERING . expression

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 25
    expression          go to state 92
    input               go to state 31
    function_call       go to state 37


State 66

   41 expression: expression BOOL_IS . expression
   42           | expression BOOL_IS . NOT expression

    NOT         shift, and go to state 93
    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 25
    expression          go to state 94
    input               go to state 31
    function_call       go to state 37


State 67

   45 expression: expression BOOL_UP . BOOL_TO BOOL_LOWER BOOL_THAN expression

    BOOL_TO  shift, and go to state 95


State 68

   46 expression: expression BOOL_DOWN . BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_TO  shift, and go to state 96


State 69

   43 expression: expression BOOL_LOWER . BOOL_THAN expression

    BOOL_THAN  shift, and go to state 97


State 70

   44 expression: expression BOOL_GREATER . BOOL_THAN expression

    BOOL_THAN  shift, and go to state 98


State 71

   60 while_statement: SINCE expression '<' . statements '>'

    SINCE          shift, and go to state 1
    ID             shift, and go to state 2
    NONE           shift, and go to state 3
    ONE            shift, and go to state 4
    NUMBER         shift, and go to state 5
    STRING         shift, and go to state 6
    BOOL_TRUE      shift, and go to state 7
    BOOL_FALSE     shift, and go to state 8
    QUOTE          shift, and go to state 9
    SUMMON         shift, and go to state 10
    FLOW_BREAK     shift, and go to state 11
    FLOW_CONTINUE  shift, and go to state 12
    EXEUNT         shift, and go to state 13
    DESCRIBE       shift, and go to state 14
    CRY            shift, and go to state 15
    FOR            shift, and go to state 16
    ASK            shift, and go to state 17
    ENTER          shift, and go to state 18
    PROCLAIM       shift, and go to state 19
    LET            shift, and go to state 20
    '<'            shift, and go to state 21

    statements          go to state 99
    statement           go to state 24
    complex_identifier  go to state 25
    assign              go to state 26
    declaration         go to state 27
    struct_decl         go to state 28
    expression          go to state 29
    output              go to state 30
    input               go to state 31
    if_statement        go to state 32
    while_statement     go to state 33
    for_statement       go to state 34
    flow_break          go to state 35
    function_decl       go to state 36
    function_call       go to state 37


State 72

   15 complex_identifier: ID FROM complex_identifier .

    $default  reduce using rule 15 (complex_identifier)


State 73

   36 expression: expression . ADDING expression
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   56 output: QUOTE '<' expression . '>'

    DIVIDING      shift, and go to state 61
    REMINDING     shift, and go to state 62
    ADDING        shift, and go to state 63
    CONSPIRING    shift, and go to state 64
    EMPOWERING    shift, and go to state 65
    BOOL_IS       shift, and go to state 66
    BOOL_UP       shift, and go to state 67
    BOOL_DOWN     shift, and go to state 68
    BOOL_LOWER    shift, and go to state 69
    BOOL_GREATER  shift, and go to state 70
    '>'           shift, and go to state 100


State 74

   57 input: SUMMON '<' complex_identifier . '>'

    '>'  shift, and go to state 101


State 75

   62 flow_break: EXEUNT expression '!' .

    $default  reduce using rule 62 (flow_break)


State 76

   69 function_decl: DESCRIBE ID AS . var_type ADVENTURE OF '<' function_decl_list '>' '<' statements '>'

    ID            shift, and go to state 49
    INT_TYPE      shift, and go to state 51
    STR_TYPE      shift, and go to state 52
    BOOLEAN_TYPE  shift, and go to state 53

    var_type  go to state 102


State 77

   70 function_call: CRY FOR ID . '<' expression_list '>'

    '<'  shift, and go to state 103


State 78

   61 for_statement: FOR assign ',' . expression ',' assign '<' statements '>'

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 25
    expression          go to state 104
    input               go to state 31
    function_call       go to state 37


State 79

   58 if_statement: ASK WHETHER '<' . expression '>' THEN '<' statements '>'
   59             | ASK WHETHER '<' . expression '>' THEN '<' statements '>' OTHERWISE '<' statements '>'

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 25
    expression          go to state 105
    input               go to state 31
    function_call       go to state 37


State 80

   29 declaration: ENTER FIXED var_type . ID
   31            | ENTER FIXED var_type . ID TELLING expression

    ID  shift, and go to state 106


State 81

   28 declaration: ENTER var_type ID .
   30            | ENTER var_type ID . TELLING expression

    TELLING  shift, and go to state 107

    $default  reduce using rule 28 (declaration)


State 82

   34 struct_decl: PROCLAIM ID '<' . decl_list '>'

    ENTER  shift, and go to state 18

    declaration  go to state 108
    decl_list    go to state 109


State 83

   23 assign: LET THERE BE . expression ADDED BOOL_TO complex_identifier
   24       | LET THERE BE . expression CONSPIRED FROM complex_identifier
   25       | LET THERE BE . expression DIVIDING complex_identifier
   26       | LET THERE BE . expression EMPOWERING complex_identifier
   27       | LET THERE BE . expression REMINDING complex_identifier

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 25
    expression          go to state 110
    input               go to state 31
    function_call       go to state 37


State 84

   21 assign: LET complex_identifier ASCEND .

    $default  reduce using rule 21 (assign)


State 85

   22 assign: LET complex_identifier DESCEND .

    $default  reduce using rule 22 (assign)


State 86

   20 assign: LET complex_identifier BE . expression

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 25
    expression          go to state 111
    input               go to state 31
    function_call       go to state 37


State 87

   35 expression: '<' expression '>' .

    $default  reduce using rule 35 (expression)


State 88

   36 expression: expression . ADDING expression
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   38           | expression DIVIDING expression .
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       shift, and go to state 66
    BOOL_UP       shift, and go to state 67
    BOOL_DOWN     shift, and go to state 68
    BOOL_LOWER    shift, and go to state 69
    BOOL_GREATER  shift, and go to state 70

    $default  reduce using rule 38 (expression)


State 89

   36 expression: expression . ADDING expression
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   39           | expression REMINDING expression .
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       shift, and go to state 66
    BOOL_UP       shift, and go to state 67
    BOOL_DOWN     shift, and go to state 68
    BOOL_LOWER    shift, and go to state 69
    BOOL_GREATER  shift, and go to state 70

    $default  reduce using rule 39 (expression)


State 90

   36 expression: expression . ADDING expression
   36           | expression ADDING expression .
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 61
    REMINDING     shift, and go to state 62
    EMPOWERING    shift, and go to state 65
    BOOL_IS       shift, and go to state 66
    BOOL_UP       shift, and go to state 67
    BOOL_DOWN     shift, and go to state 68
    BOOL_LOWER    shift, and go to state 69
    BOOL_GREATER  shift, and go to state 70

    $default  reduce using rule 36 (expression)


State 91

   36 expression: expression . ADDING expression
   37           | expression . CONSPIRING expression
   37           | expression CONSPIRING expression .
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 61
    REMINDING     shift, and go to state 62
    EMPOWERING    shift, and go to state 65
    BOOL_IS       shift, and go to state 66
    BOOL_UP       shift, and go to state 67
    BOOL_DOWN     shift, and go to state 68
    BOOL_LOWER    shift, and go to state 69
    BOOL_GREATER  shift, and go to state 70

    $default  reduce using rule 37 (expression)


State 92

   36 expression: expression . ADDING expression
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   40           | expression EMPOWERING expression .
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       shift, and go to state 66
    BOOL_UP       shift, and go to state 67
    BOOL_DOWN     shift, and go to state 68
    BOOL_LOWER    shift, and go to state 69
    BOOL_GREATER  shift, and go to state 70

    $default  reduce using rule 40 (expression)


State 93

   42 expression: expression BOOL_IS NOT . expression

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 25
    expression          go to state 112
    input               go to state 31
    function_call       go to state 37


State 94

   36 expression: expression . ADDING expression
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   41           | expression BOOL_IS expression .
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_DOWN     error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 41 (expression)


State 95

   45 expression: expression BOOL_UP BOOL_TO . BOOL_LOWER BOOL_THAN expression

    BOOL_LOWER  shift, and go to state 113


State 96

   46 expression: expression BOOL_DOWN BOOL_TO . BOOL_GREATER BOOL_THAN expression

    BOOL_GREATER  shift, and go to state 114


State 97

   43 expression: expression BOOL_LOWER BOOL_THAN . expression

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 25
    expression          go to state 115
    input               go to state 31
    function_call       go to state 37


State 98

   44 expression: expression BOOL_GREATER BOOL_THAN . expression

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 25
    expression          go to state 116
    input               go to state 31
    function_call       go to state 37


State 99

    3 statements: statements . statement
   60 while_statement: SINCE expression '<' statements . '>'

    SINCE          shift, and go to state 1
    ID             shift, and go to state 2
    NONE           shift, and go to state 3
    ONE            shift, and go to state 4
    NUMBER         shift, and go to state 5
    STRING         shift, and go to state 6
    BOOL_TRUE      shift, and go to state 7
    BOOL_FALSE     shift, and go to state 8
    QUOTE          shift, and go to state 9
    SUMMON         shift, and go to state 10
    FLOW_BREAK     shift, and go to state 11
    FLOW_CONTINUE  shift, and go to state 12
    EXEUNT         shift, and go to state 13
    DESCRIBE       shift, and go to state 14
    CRY            shift, and go to state 15
    FOR            shift, and go to state 16
    ASK            shift, and go to state 17
    ENTER          shift, and go to state 18
    PROCLAIM       shift, and go to state 19
    LET            shift, and go to state 20
    '<'            shift, and go to state 21
    '>'            shift, and go to state 117

    statement           go to state 60
    complex_identifier  go to state 25
    assign              go to state 26
    declaration         go to state 27
    struct_decl         go to state 28
    expression          go to state 29
    output              go to state 30
    input               go to state 31
    if_statement        go to state 32
    while_statement     go to state 33
    for_statement       go to state 34
    flow_break          go to state 35
    function_decl       go to state 36
    function_call       go to state 37


State 100

   56 output: QUOTE '<' expression '>' .

    $default  reduce using rule 56 (output)


State 101

   57 input: SUMMON '<' complex_identifier '>' .

    $default  reduce using rule 57 (input)


State 102

   69 function_decl: DESCRIBE ID AS var_type . ADVENTURE OF '<' function_decl_list '>' '<' statements '>'

    ADVENTURE  shift, and go to state 118


State 103

   70 function_call: CRY FOR ID '<' . expression_list '>'

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 25
    expression          go to state 119
    input               go to state 31
    function_call       go to state 37
    expression_list     go to state 120


State 104

   36 expression: expression . ADDING expression
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   61 for_statement: FOR assign ',' expression . ',' assign '<' statements '>'

    DIVIDING      shift, and go to state 61
    REMINDING     shift, and go to state 62
    ADDING        shift, and go to state 63
    CONSPIRING    shift, and go to state 64
    EMPOWERING    shift, and go to state 65
    BOOL_IS       shift, and go to state 66
    BOOL_UP       shift, and go to state 67
    BOOL_DOWN     shift, and go to state 68
    BOOL_LOWER    shift, and go to state 69
    BOOL_GREATER  shift, and go to state 70
    ','           shift, and go to state 121


State 105

   36 expression: expression . ADDING expression
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   58 if_statement: ASK WHETHER '<' expression . '>' THEN '<' statements '>'
   59             | ASK WHETHER '<' expression . '>' THEN '<' statements '>' OTHERWISE '<' statements '>'

    DIVIDING      shift, and go to state 61
    REMINDING     shift, and go to state 62
    ADDING        shift, and go to state 63
    CONSPIRING    shift, and go to state 64
    EMPOWERING    shift, and go to state 65
    BOOL_IS       shift, and go to state 66
    BOOL_UP       shift, and go to state 67
    BOOL_DOWN     shift, and go to state 68
    BOOL_LOWER    shift, and go to state 69
    BOOL_GREATER  shift, and go to state 70
    '>'           shift, and go to state 122


State 106

   29 declaration: ENTER FIXED var_type ID .
   31            | ENTER FIXED var_type ID . TELLING expression

    TELLING  shift, and go to state 123

    $default  reduce using rule 29 (declaration)


State 107

   30 declaration: ENTER var_type ID TELLING . expression

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 25
    expression          go to state 124
    input               go to state 31
    function_call       go to state 37


State 108

   32 decl_list: declaration .

    $default  reduce using rule 32 (decl_list)


State 109

   33 decl_list: decl_list . ',' declaration
   34 struct_decl: PROCLAIM ID '<' decl_list . '>'

    ','  shift, and go to state 125
    '>'  shift, and go to state 126


State 110

   23 assign: LET THERE BE expression . ADDED BOOL_TO complex_identifier
   24       | LET THERE BE expression . CONSPIRED FROM complex_identifier
   25       | LET THERE BE expression . DIVIDING complex_identifier
   26       | LET THERE BE expression . EMPOWERING complex_identifier
   27       | LET THERE BE expression . REMINDING complex_identifier
   36 expression: expression . ADDING expression
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 127
    REMINDING     shift, and go to state 128
    ADDING        shift, and go to state 63
    CONSPIRING    shift, and go to state 64
    EMPOWERING    shift, and go to state 129
    ADDED         shift, and go to state 130
    CONSPIRED     shift, and go to state 131
    BOOL_IS       shift, and go to state 66
    BOOL_UP       shift, and go to state 67
    BOOL_DOWN     shift, and go to state 68
    BOOL_LOWER    shift, and go to state 69
    BOOL_GREATER  shift, and go to state 70


State 111

   20 assign: LET complex_identifier BE expression .
   36 expression: expression . ADDING expression
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 61
    REMINDING     shift, and go to state 62
    ADDING        shift, and go to state 63
    CONSPIRING    shift, and go to state 64
    EMPOWERING    shift, and go to state 65
    BOOL_IS       shift, and go to state 66
    BOOL_UP       shift, and go to state 67
    BOOL_DOWN     shift, and go to state 68
    BOOL_LOWER    shift, and go to state 69
    BOOL_GREATER  shift, and go to state 70

    $default  reduce using rule 20 (assign)


State 112

   36 expression: expression . ADDING expression
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   42           | expression BOOL_IS NOT expression .
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_DOWN     error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 42 (expression)


State 113

   45 expression: expression BOOL_UP BOOL_TO BOOL_LOWER . BOOL_THAN expression

    BOOL_THAN  shift, and go to state 132


State 114

   46 expression: expression BOOL_DOWN BOOL_TO BOOL_GREATER . BOOL_THAN expression

    BOOL_THAN  shift, and go to state 133


State 115

   36 expression: expression . ADDING expression
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   43           | expression BOOL_LOWER BOOL_THAN expression .
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_DOWN     error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 43 (expression)


State 116

   36 expression: expression . ADDING expression
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   44           | expression BOOL_GREATER BOOL_THAN expression .
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_DOWN     error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 44 (expression)


State 117

   60 while_statement: SINCE expression '<' statements '>' .

    $default  reduce using rule 60 (while_statement)


State 118

   69 function_decl: DESCRIBE ID AS var_type ADVENTURE . OF '<' function_decl_list '>' '<' statements '>'

    OF  shift, and go to state 134


State 119

   36 expression: expression . ADDING expression
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   71 expression_list: expression .

    DIVIDING      shift, and go to state 61
    REMINDING     shift, and go to state 62
    ADDING        shift, and go to state 63
    CONSPIRING    shift, and go to state 64
    EMPOWERING    shift, and go to state 65
    BOOL_IS       shift, and go to state 66
    BOOL_UP       shift, and go to state 67
    BOOL_DOWN     shift, and go to state 68
    BOOL_LOWER    shift, and go to state 69
    BOOL_GREATER  shift, and go to state 70

    $default  reduce using rule 71 (expression_list)


State 120

   70 function_call: CRY FOR ID '<' expression_list . '>'
   72 expression_list: expression_list . ',' expression

    ','  shift, and go to state 135
    '>'  shift, and go to state 136


State 121

   61 for_statement: FOR assign ',' expression ',' . assign '<' statements '>'

    LET  shift, and go to state 20

    assign  go to state 137


State 122

   58 if_statement: ASK WHETHER '<' expression '>' . THEN '<' statements '>'
   59             | ASK WHETHER '<' expression '>' . THEN '<' statements '>' OTHERWISE '<' statements '>'

    THEN  shift, and go to state 138


State 123

   31 declaration: ENTER FIXED var_type ID TELLING . expression

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 25
    expression          go to state 139
    input               go to state 31
    function_call       go to state 37


State 124

   30 declaration: ENTER var_type ID TELLING expression .
   36 expression: expression . ADDING expression
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 61
    REMINDING     shift, and go to state 62
    ADDING        shift, and go to state 63
    CONSPIRING    shift, and go to state 64
    EMPOWERING    shift, and go to state 65
    BOOL_IS       shift, and go to state 66
    BOOL_UP       shift, and go to state 67
    BOOL_DOWN     shift, and go to state 68
    BOOL_LOWER    shift, and go to state 69
    BOOL_GREATER  shift, and go to state 70

    $default  reduce using rule 30 (declaration)


State 125

   33 decl_list: decl_list ',' . declaration

    ENTER  shift, and go to state 18

    declaration  go to state 140


State 126

   34 struct_decl: PROCLAIM ID '<' decl_list '>' .

    $default  reduce using rule 34 (struct_decl)


State 127

   25 assign: LET THERE BE expression DIVIDING . complex_identifier
   38 expression: expression DIVIDING . expression

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 141
    expression          go to state 88
    input               go to state 31
    function_call       go to state 37


State 128

   27 assign: LET THERE BE expression REMINDING . complex_identifier
   39 expression: expression REMINDING . expression

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 142
    expression          go to state 89
    input               go to state 31
    function_call       go to state 37


State 129

   26 assign: LET THERE BE expression EMPOWERING . complex_identifier
   40 expression: expression EMPOWERING . expression

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 143
    expression          go to state 92
    input               go to state 31
    function_call       go to state 37


State 130

   23 assign: LET THERE BE expression ADDED . BOOL_TO complex_identifier

    BOOL_TO  shift, and go to state 144


State 131

   24 assign: LET THERE BE expression CONSPIRED . FROM complex_identifier

    FROM  shift, and go to state 145


State 132

   45 expression: expression BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN . expression

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 25
    expression          go to state 146
    input               go to state 31
    function_call       go to state 37


State 133

   46 expression: expression BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN . expression

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 25
    expression          go to state 147
    input               go to state 31
    function_call       go to state 37


State 134

   69 function_decl: DESCRIBE ID AS var_type ADVENTURE OF . '<' function_decl_list '>' '<' statements '>'

    '<'  shift, and go to state 148


State 135

   72 expression_list: expression_list ',' . expression

    ID          shift, and go to state 2
    NONE        shift, and go to state 3
    ONE         shift, and go to state 4
    NUMBER      shift, and go to state 5
    STRING      shift, and go to state 6
    BOOL_TRUE   shift, and go to state 7
    BOOL_FALSE  shift, and go to state 8
    SUMMON      shift, and go to state 10
    CRY         shift, and go to state 15
    '<'         shift, and go to state 21

    complex_identifier  go to state 25
    expression          go to state 149
    input               go to state 31
    function_call       go to state 37


State 136

   70 function_call: CRY FOR ID '<' expression_list '>' .

    $default  reduce using rule 70 (function_call)


State 137

   61 for_statement: FOR assign ',' expression ',' assign . '<' statements '>'

    '<'  shift, and go to state 150


State 138

   58 if_statement: ASK WHETHER '<' expression '>' THEN . '<' statements '>'
   59             | ASK WHETHER '<' expression '>' THEN . '<' statements '>' OTHERWISE '<' statements '>'

    '<'  shift, and go to state 151


State 139

   31 declaration: ENTER FIXED var_type ID TELLING expression .
   36 expression: expression . ADDING expression
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 61
    REMINDING     shift, and go to state 62
    ADDING        shift, and go to state 63
    CONSPIRING    shift, and go to state 64
    EMPOWERING    shift, and go to state 65
    BOOL_IS       shift, and go to state 66
    BOOL_UP       shift, and go to state 67
    BOOL_DOWN     shift, and go to state 68
    BOOL_LOWER    shift, and go to state 69
    BOOL_GREATER  shift, and go to state 70

    $default  reduce using rule 31 (declaration)


State 140

   33 decl_list: decl_list ',' declaration .

    $default  reduce using rule 33 (decl_list)


State 141

   25 assign: LET THERE BE expression DIVIDING complex_identifier .
   47 expression: complex_identifier .

    DIVIDING      reduce using rule 47 (expression)
    REMINDING     reduce using rule 47 (expression)
    ADDING        reduce using rule 47 (expression)
    CONSPIRING    reduce using rule 47 (expression)
    EMPOWERING    reduce using rule 47 (expression)
    ADDED         reduce using rule 47 (expression)
    CONSPIRED     reduce using rule 47 (expression)
    BOOL_IS       reduce using rule 47 (expression)
    BOOL_UP       reduce using rule 47 (expression)
    BOOL_DOWN     reduce using rule 47 (expression)
    BOOL_LOWER    reduce using rule 47 (expression)
    BOOL_GREATER  reduce using rule 47 (expression)
    $default      reduce using rule 25 (assign)


State 142

   27 assign: LET THERE BE expression REMINDING complex_identifier .
   47 expression: complex_identifier .

    DIVIDING      reduce using rule 47 (expression)
    REMINDING     reduce using rule 47 (expression)
    ADDING        reduce using rule 47 (expression)
    CONSPIRING    reduce using rule 47 (expression)
    EMPOWERING    reduce using rule 47 (expression)
    ADDED         reduce using rule 47 (expression)
    CONSPIRED     reduce using rule 47 (expression)
    BOOL_IS       reduce using rule 47 (expression)
    BOOL_UP       reduce using rule 47 (expression)
    BOOL_DOWN     reduce using rule 47 (expression)
    BOOL_LOWER    reduce using rule 47 (expression)
    BOOL_GREATER  reduce using rule 47 (expression)
    $default      reduce using rule 27 (assign)


State 143

   26 assign: LET THERE BE expression EMPOWERING complex_identifier .
   47 expression: complex_identifier .

    DIVIDING      reduce using rule 47 (expression)
    REMINDING     reduce using rule 47 (expression)
    ADDING        reduce using rule 47 (expression)
    CONSPIRING    reduce using rule 47 (expression)
    EMPOWERING    reduce using rule 47 (expression)
    ADDED         reduce using rule 47 (expression)
    CONSPIRED     reduce using rule 47 (expression)
    BOOL_IS       reduce using rule 47 (expression)
    BOOL_UP       reduce using rule 47 (expression)
    BOOL_DOWN     reduce using rule 47 (expression)
    BOOL_LOWER    reduce using rule 47 (expression)
    BOOL_GREATER  reduce using rule 47 (expression)
    $default      reduce using rule 26 (assign)


State 144

   23 assign: LET THERE BE expression ADDED BOOL_TO . complex_identifier

    ID  shift, and go to state 2

    complex_identifier  go to state 152


State 145

   24 assign: LET THERE BE expression CONSPIRED FROM . complex_identifier

    ID  shift, and go to state 2

    complex_identifier  go to state 153


State 146

   36 expression: expression . ADDING expression
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   45           | expression BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression .
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_DOWN     error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 45 (expression)


State 147

   36 expression: expression . ADDING expression
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   46           | expression BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression .

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_DOWN     error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 46 (expression)


State 148

   69 function_decl: DESCRIBE ID AS var_type ADVENTURE OF '<' . function_decl_list '>' '<' statements '>'

    ID            shift, and go to state 49
    INT_TYPE      shift, and go to state 51
    STR_TYPE      shift, and go to state 52
    BOOLEAN_TYPE  shift, and go to state 53

    var_type            go to state 154
    function_decl_item  go to state 155
    function_decl_list  go to state 156


State 149

   36 expression: expression . ADDING expression
   37           | expression . CONSPIRING expression
   38           | expression . DIVIDING expression
   39           | expression . REMINDING expression
   40           | expression . EMPOWERING expression
   41           | expression . BOOL_IS expression
   42           | expression . BOOL_IS NOT expression
   43           | expression . BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_GREATER BOOL_THAN expression
   45           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   46           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   72 expression_list: expression_list ',' expression .

    DIVIDING      shift, and go to state 61
    REMINDING     shift, and go to state 62
    ADDING        shift, and go to state 63
    CONSPIRING    shift, and go to state 64
    EMPOWERING    shift, and go to state 65
    BOOL_IS       shift, and go to state 66
    BOOL_UP       shift, and go to state 67
    BOOL_DOWN     shift, and go to state 68
    BOOL_LOWER    shift, and go to state 69
    BOOL_GREATER  shift, and go to state 70

    $default  reduce using rule 72 (expression_list)


State 150

   61 for_statement: FOR assign ',' expression ',' assign '<' . statements '>'

    SINCE          shift, and go to state 1
    ID             shift, and go to state 2
    NONE           shift, and go to state 3
    ONE            shift, and go to state 4
    NUMBER         shift, and go to state 5
    STRING         shift, and go to state 6
    BOOL_TRUE      shift, and go to state 7
    BOOL_FALSE     shift, and go to state 8
    QUOTE          shift, and go to state 9
    SUMMON         shift, and go to state 10
    FLOW_BREAK     shift, and go to state 11
    FLOW_CONTINUE  shift, and go to state 12
    EXEUNT         shift, and go to state 13
    DESCRIBE       shift, and go to state 14
    CRY            shift, and go to state 15
    FOR            shift, and go to state 16
    ASK            shift, and go to state 17
    ENTER          shift, and go to state 18
    PROCLAIM       shift, and go to state 19
    LET            shift, and go to state 20
    '<'            shift, and go to state 21

    statements          go to state 157
    statement           go to state 24
    complex_identifier  go to state 25
    assign              go to state 26
    declaration         go to state 27
    struct_decl         go to state 28
    expression          go to state 29
    output              go to state 30
    input               go to state 31
    if_statement        go to state 32
    while_statement     go to state 33
    for_statement       go to state 34
    flow_break          go to state 35
    function_decl       go to state 36
    function_call       go to state 37


State 151

   58 if_statement: ASK WHETHER '<' expression '>' THEN '<' . statements '>'
   59             | ASK WHETHER '<' expression '>' THEN '<' . statements '>' OTHERWISE '<' statements '>'

    SINCE          shift, and go to state 1
    ID             shift, and go to state 2
    NONE           shift, and go to state 3
    ONE            shift, and go to state 4
    NUMBER         shift, and go to state 5
    STRING         shift, and go to state 6
    BOOL_TRUE      shift, and go to state 7
    BOOL_FALSE     shift, and go to state 8
    QUOTE          shift, and go to state 9
    SUMMON         shift, and go to state 10
    FLOW_BREAK     shift, and go to state 11
    FLOW_CONTINUE  shift, and go to state 12
    EXEUNT         shift, and go to state 13
    DESCRIBE       shift, and go to state 14
    CRY            shift, and go to state 15
    FOR            shift, and go to state 16
    ASK            shift, and go to state 17
    ENTER          shift, and go to state 18
    PROCLAIM       shift, and go to state 19
    LET            shift, and go to state 20
    '<'            shift, and go to state 21

    statements          go to state 158
    statement           go to state 24
    complex_identifier  go to state 25
    assign              go to state 26
    declaration         go to state 27
    struct_decl         go to state 28
    expression          go to state 29
    output              go to state 30
    input               go to state 31
    if_statement        go to state 32
    while_statement     go to state 33
    for_statement       go to state 34
    flow_break          go to state 35
    function_decl       go to state 36
    function_call       go to state 37


State 152

   23 assign: LET THERE BE expression ADDED BOOL_TO complex_identifier .

    $default  reduce using rule 23 (assign)


State 153

   24 assign: LET THERE BE expression CONSPIRED FROM complex_identifier .

    $default  reduce using rule 24 (assign)


State 154

   66 function_decl_item: var_type . ID

    ID  shift, and go to state 159


State 155

   67 function_decl_list: function_decl_item .

    $default  reduce using rule 67 (function_decl_list)


State 156

   68 function_decl_list: function_decl_list . ',' function_decl_item
   69 function_decl: DESCRIBE ID AS var_type ADVENTURE OF '<' function_decl_list . '>' '<' statements '>'

    ','  shift, and go to state 160
    '>'  shift, and go to state 161


State 157

    3 statements: statements . statement
   61 for_statement: FOR assign ',' expression ',' assign '<' statements . '>'

    SINCE          shift, and go to state 1
    ID             shift, and go to state 2
    NONE           shift, and go to state 3
    ONE            shift, and go to state 4
    NUMBER         shift, and go to state 5
    STRING         shift, and go to state 6
    BOOL_TRUE      shift, and go to state 7
    BOOL_FALSE     shift, and go to state 8
    QUOTE          shift, and go to state 9
    SUMMON         shift, and go to state 10
    FLOW_BREAK     shift, and go to state 11
    FLOW_CONTINUE  shift, and go to state 12
    EXEUNT         shift, and go to state 13
    DESCRIBE       shift, and go to state 14
    CRY            shift, and go to state 15
    FOR            shift, and go to state 16
    ASK            shift, and go to state 17
    ENTER          shift, and go to state 18
    PROCLAIM       shift, and go to state 19
    LET            shift, and go to state 20
    '<'            shift, and go to state 21
    '>'            shift, and go to state 162

    statement           go to state 60
    complex_identifier  go to state 25
    assign              go to state 26
    declaration         go to state 27
    struct_decl         go to state 28
    expression          go to state 29
    output              go to state 30
    input               go to state 31
    if_statement        go to state 32
    while_statement     go to state 33
    for_statement       go to state 34
    flow_break          go to state 35
    function_decl       go to state 36
    function_call       go to state 37


State 158

    3 statements: statements . statement
   58 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements . '>'
   59             | ASK WHETHER '<' expression '>' THEN '<' statements . '>' OTHERWISE '<' statements '>'

    SINCE          shift, and go to state 1
    ID             shift, and go to state 2
    NONE           shift, and go to state 3
    ONE            shift, and go to state 4
    NUMBER         shift, and go to state 5
    STRING         shift, and go to state 6
    BOOL_TRUE      shift, and go to state 7
    BOOL_FALSE     shift, and go to state 8
    QUOTE          shift, and go to state 9
    SUMMON         shift, and go to state 10
    FLOW_BREAK     shift, and go to state 11
    FLOW_CONTINUE  shift, and go to state 12
    EXEUNT         shift, and go to state 13
    DESCRIBE       shift, and go to state 14
    CRY            shift, and go to state 15
    FOR            shift, and go to state 16
    ASK            shift, and go to state 17
    ENTER          shift, and go to state 18
    PROCLAIM       shift, and go to state 19
    LET            shift, and go to state 20
    '<'            shift, and go to state 21
    '>'            shift, and go to state 163

    statement           go to state 60
    complex_identifier  go to state 25
    assign              go to state 26
    declaration         go to state 27
    struct_decl         go to state 28
    expression          go to state 29
    output              go to state 30
    input               go to state 31
    if_statement        go to state 32
    while_statement     go to state 33
    for_statement       go to state 34
    flow_break          go to state 35
    function_decl       go to state 36
    function_call       go to state 37


State 159

   66 function_decl_item: var_type ID .

    $default  reduce using rule 66 (function_decl_item)


State 160

   68 function_decl_list: function_decl_list ',' . function_decl_item

    ID            shift, and go to state 49
    INT_TYPE      shift, and go to state 51
    STR_TYPE      shift, and go to state 52
    BOOLEAN_TYPE  shift, and go to state 53

    var_type            go to state 154
    function_decl_item  go to state 164


State 161

   69 function_decl: DESCRIBE ID AS var_type ADVENTURE OF '<' function_decl_list '>' . '<' statements '>'

    '<'  shift, and go to state 165


State 162

   61 for_statement: FOR assign ',' expression ',' assign '<' statements '>' .

    $default  reduce using rule 61 (for_statement)


State 163

   58 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>' .
   59             | ASK WHETHER '<' expression '>' THEN '<' statements '>' . OTHERWISE '<' statements '>'

    OTHERWISE  shift, and go to state 166

    $default  reduce using rule 58 (if_statement)


State 164

   68 function_decl_list: function_decl_list ',' function_decl_item .

    $default  reduce using rule 68 (function_decl_list)


State 165

   69 function_decl: DESCRIBE ID AS var_type ADVENTURE OF '<' function_decl_list '>' '<' . statements '>'

    SINCE          shift, and go to state 1
    ID             shift, and go to state 2
    NONE           shift, and go to state 3
    ONE            shift, and go to state 4
    NUMBER         shift, and go to state 5
    STRING         shift, and go to state 6
    BOOL_TRUE      shift, and go to state 7
    BOOL_FALSE     shift, and go to state 8
    QUOTE          shift, and go to state 9
    SUMMON         shift, and go to state 10
    FLOW_BREAK     shift, and go to state 11
    FLOW_CONTINUE  shift, and go to state 12
    EXEUNT         shift, and go to state 13
    DESCRIBE       shift, and go to state 14
    CRY            shift, and go to state 15
    FOR            shift, and go to state 16
    ASK            shift, and go to state 17
    ENTER          shift, and go to state 18
    PROCLAIM       shift, and go to state 19
    LET            shift, and go to state 20
    '<'            shift, and go to state 21

    statements          go to state 167
    statement           go to state 24
    complex_identifier  go to state 25
    assign              go to state 26
    declaration         go to state 27
    struct_decl         go to state 28
    expression          go to state 29
    output              go to state 30
    input               go to state 31
    if_statement        go to state 32
    while_statement     go to state 33
    for_statement       go to state 34
    flow_break          go to state 35
    function_decl       go to state 36
    function_call       go to state 37


State 166

   59 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE . '<' statements '>'

    '<'  shift, and go to state 168


State 167

    3 statements: statements . statement
   69 function_decl: DESCRIBE ID AS var_type ADVENTURE OF '<' function_decl_list '>' '<' statements . '>'

    SINCE          shift, and go to state 1
    ID             shift, and go to state 2
    NONE           shift, and go to state 3
    ONE            shift, and go to state 4
    NUMBER         shift, and go to state 5
    STRING         shift, and go to state 6
    BOOL_TRUE      shift, and go to state 7
    BOOL_FALSE     shift, and go to state 8
    QUOTE          shift, and go to state 9
    SUMMON         shift, and go to state 10
    FLOW_BREAK     shift, and go to state 11
    FLOW_CONTINUE  shift, and go to state 12
    EXEUNT         shift, and go to state 13
    DESCRIBE       shift, and go to state 14
    CRY            shift, and go to state 15
    FOR            shift, and go to state 16
    ASK            shift, and go to state 17
    ENTER          shift, and go to state 18
    PROCLAIM       shift, and go to state 19
    LET            shift, and go to state 20
    '<'            shift, and go to state 21
    '>'            shift, and go to state 169

    statement           go to state 60
    complex_identifier  go to state 25
    assign              go to state 26
    declaration         go to state 27
    struct_decl         go to state 28
    expression          go to state 29
    output              go to state 30
    input               go to state 31
    if_statement        go to state 32
    while_statement     go to state 33
    for_statement       go to state 34
    flow_break          go to state 35
    function_decl       go to state 36
    function_call       go to state 37


State 168

   59 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE '<' . statements '>'

    SINCE          shift, and go to state 1
    ID             shift, and go to state 2
    NONE           shift, and go to state 3
    ONE            shift, and go to state 4
    NUMBER         shift, and go to state 5
    STRING         shift, and go to state 6
    BOOL_TRUE      shift, and go to state 7
    BOOL_FALSE     shift, and go to state 8
    QUOTE          shift, and go to state 9
    SUMMON         shift, and go to state 10
    FLOW_BREAK     shift, and go to state 11
    FLOW_CONTINUE  shift, and go to state 12
    EXEUNT         shift, and go to state 13
    DESCRIBE       shift, and go to state 14
    CRY            shift, and go to state 15
    FOR            shift, and go to state 16
    ASK            shift, and go to state 17
    ENTER          shift, and go to state 18
    PROCLAIM       shift, and go to state 19
    LET            shift, and go to state 20
    '<'            shift, and go to state 21

    statements          go to state 170
    statement           go to state 24
    complex_identifier  go to state 25
    assign              go to state 26
    declaration         go to state 27
    struct_decl         go to state 28
    expression          go to state 29
    output              go to state 30
    input               go to state 31
    if_statement        go to state 32
    while_statement     go to state 33
    for_statement       go to state 34
    flow_break          go to state 35
    function_decl       go to state 36
    function_call       go to state 37


State 169

   69 function_decl: DESCRIBE ID AS var_type ADVENTURE OF '<' function_decl_list '>' '<' statements '>' .

    $default  reduce using rule 69 (function_decl)


State 170

    3 statements: statements . statement
   59 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE '<' statements . '>'

    SINCE          shift, and go to state 1
    ID             shift, and go to state 2
    NONE           shift, and go to state 3
    ONE            shift, and go to state 4
    NUMBER         shift, and go to state 5
    STRING         shift, and go to state 6
    BOOL_TRUE      shift, and go to state 7
    BOOL_FALSE     shift, and go to state 8
    QUOTE          shift, and go to state 9
    SUMMON         shift, and go to state 10
    FLOW_BREAK     shift, and go to state 11
    FLOW_CONTINUE  shift, and go to state 12
    EXEUNT         shift, and go to state 13
    DESCRIBE       shift, and go to state 14
    CRY            shift, and go to state 15
    FOR            shift, and go to state 16
    ASK            shift, and go to state 17
    ENTER          shift, and go to state 18
    PROCLAIM       shift, and go to state 19
    LET            shift, and go to state 20
    '<'            shift, and go to state 21
    '>'            shift, and go to state 171

    statement           go to state 60
    complex_identifier  go to state 25
    assign              go to state 26
    declaration         go to state 27
    struct_decl         go to state 28
    expression          go to state 29
    output              go to state 30
    input               go to state 31
    if_statement        go to state 32
    while_statement     go to state 33
    for_statement       go to state 34
    flow_break          go to state 35
    function_decl       go to state 36
    function_call       go to state 37


State 171

   59 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE '<' statements '>' .

    $default  reduce using rule 59 (if_statement)
