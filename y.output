Nonterminals useless in grammar

   complex_specifier
   identifier


Terminals unused in grammar

   LET
   THERE
   EQUALLING
   UPON
   ADDED
   ASCEND
   DESCEND
   CRY
   FOR
   IS
   LEFT
   RIGHT
   UP
   TO
   DOWN
   LOWER
   GREATER
   THAN
   EXEUNT
   NOT
   SINCE
   FROM
   ASK
   WHETHER
   THEN
   OTHERWISE
   CHANGES
   INCREASES
   DECREASES
   WHENEVER
   DOES
   NONE
   ONE
   TWICE
   UNTRUTH
   INDEED
   '.'


Rules useless in grammar

   34 complex_specifier: ID '.' ID


Grammar

    0 $accept: programm $end

    1 programm: statements

    2 statements: statement
    3           | statements statement

    4 statement: expression
    5          | declaration
    6          | struct_decl

    7 var_type: INT_TYPE
    8         | STR_TYPE
    9         | BOOLEAN_TYPE
   10         | ID

   11 declaration: ENTER var_type ID
   12            | ENTER FIXED var_type ID
   13            | ENTER var_type ID TELLING expression
   14            | ENTER FIXED var_type ID TELLING expression

   15 decl_list: declaration
   16          | decl_list ',' declaration

   17 struct_decl: PROCLAIM ID '<' decl_list '>'

   18 expression: '<' expression '>'
   19           | expression ADDING expression
   20           | expression CONSPIRING expression
   21           | expression DIVIDED expression
   22           | expression REMINDING expression
   23           | expression EMPOWERING expression
   24           | NUMBER
   25           | STRING
   26           | BOOL_FALSE
   27           | BOOL_TRUE
   28           | predef_func

   29 predef_func: output
   30            | input

   31 output: QUOTE '<' expression '>'
   32       | QUOTE ID

   33 input: ID SUMMONED


Terminals, with rules where they appear

$end (0) 0
',' (44) 16
'.' (46)
'<' (60) 17 18 31
'>' (62) 17 18 31
error (256)
ID (258) 10 11 12 13 14 17 32 33
TELLING (259) 13 14
FIXED (260) 12 14
INT_TYPE (261) 7
STR_TYPE (262) 8
BOOLEAN_TYPE (263) 9
NUMBER (264) 24
STRING (265) 25
BOOL_TRUE (266) 27
BOOL_FALSE (267) 26
QUOTE (268) 31 32
ENTER (269) 11 12 13 14
PROCLAIM (270) 17
LET (271)
THERE (272)
EQUALLING (273)
UPON (274)
ADDED (275)
ASCEND (276)
DESCEND (277)
CRY (278)
FOR (279)
DIVIDED (280) 21
REMINDING (281) 22
ADDING (282) 19
CONSPIRING (283) 20
EMPOWERING (284) 23
IS (285)
LEFT (286)
RIGHT (287)
UP (288)
TO (289)
DOWN (290)
LOWER (291)
GREATER (292)
THAN (293)
EXEUNT (294)
SUMMONED (295) 33
NOT (296)
SINCE (297)
FROM (298)
ASK (299)
WHETHER (300)
THEN (301)
OTHERWISE (302)
CHANGES (303)
INCREASES (304)
DECREASES (305)
WHENEVER (306)
DOES (307)
NONE (308)
ONE (309)
TWICE (310)
UNTRUTH (311)
INDEED (312)


Nonterminals, with rules where they appear

$accept (62)
    on left: 0
programm (63)
    on left: 1, on right: 0
statements (64)
    on left: 2 3, on right: 1 3
statement (65)
    on left: 4 5 6, on right: 2 3
var_type (66)
    on left: 7 8 9 10, on right: 11 12 13 14
declaration (67)
    on left: 11 12 13 14, on right: 5 15 16
decl_list (68)
    on left: 15 16, on right: 16 17
struct_decl (69)
    on left: 17, on right: 6
expression (70)
    on left: 18 19 20 21 22 23 24 25 26 27 28, on right: 4 13 14 18
    19 20 21 22 23 31
predef_func (71)
    on left: 29 30, on right: 28
output (72)
    on left: 31 32, on right: 29
input (73)
    on left: 33, on right: 30


State 0

    0 $accept: . programm $end

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    ENTER       shift, and go to state 7
    PROCLAIM    shift, and go to state 8
    '<'         shift, and go to state 9

    programm     go to state 10
    statements   go to state 11
    statement    go to state 12
    declaration  go to state 13
    struct_decl  go to state 14
    expression   go to state 15
    predef_func  go to state 16
    output       go to state 17
    input        go to state 18


State 1

   33 input: ID . SUMMONED

    SUMMONED  shift, and go to state 19


State 2

   24 expression: NUMBER .

    $default  reduce using rule 24 (expression)


State 3

   25 expression: STRING .

    $default  reduce using rule 25 (expression)


State 4

   27 expression: BOOL_TRUE .

    $default  reduce using rule 27 (expression)


State 5

   26 expression: BOOL_FALSE .

    $default  reduce using rule 26 (expression)


State 6

   31 output: QUOTE . '<' expression '>'
   32       | QUOTE . ID

    ID   shift, and go to state 20
    '<'  shift, and go to state 21


State 7

   11 declaration: ENTER . var_type ID
   12            | ENTER . FIXED var_type ID
   13            | ENTER . var_type ID TELLING expression
   14            | ENTER . FIXED var_type ID TELLING expression

    ID            shift, and go to state 22
    FIXED         shift, and go to state 23
    INT_TYPE      shift, and go to state 24
    STR_TYPE      shift, and go to state 25
    BOOLEAN_TYPE  shift, and go to state 26

    var_type  go to state 27


State 8

   17 struct_decl: PROCLAIM . ID '<' decl_list '>'

    ID  shift, and go to state 28


State 9

   18 expression: '<' . expression '>'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    '<'         shift, and go to state 9

    expression   go to state 29
    predef_func  go to state 16
    output       go to state 17
    input        go to state 18


State 10

    0 $accept: programm . $end

    $end  shift, and go to state 30


State 11

    1 programm: statements .
    3 statements: statements . statement

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    ENTER       shift, and go to state 7
    PROCLAIM    shift, and go to state 8
    '<'         shift, and go to state 9

    $default  reduce using rule 1 (programm)

    statement    go to state 31
    declaration  go to state 13
    struct_decl  go to state 14
    expression   go to state 15
    predef_func  go to state 16
    output       go to state 17
    input        go to state 18


State 12

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 13

    5 statement: declaration .

    $default  reduce using rule 5 (statement)


State 14

    6 statement: struct_decl .

    $default  reduce using rule 6 (statement)


State 15

    4 statement: expression .
   19 expression: expression . ADDING expression
   20           | expression . CONSPIRING expression
   21           | expression . DIVIDED expression
   22           | expression . REMINDING expression
   23           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 32
    REMINDING   shift, and go to state 33
    ADDING      shift, and go to state 34
    CONSPIRING  shift, and go to state 35
    EMPOWERING  shift, and go to state 36

    $default  reduce using rule 4 (statement)


State 16

   28 expression: predef_func .

    $default  reduce using rule 28 (expression)


State 17

   29 predef_func: output .

    $default  reduce using rule 29 (predef_func)


State 18

   30 predef_func: input .

    $default  reduce using rule 30 (predef_func)


State 19

   33 input: ID SUMMONED .

    $default  reduce using rule 33 (input)


State 20

   32 output: QUOTE ID .

    $default  reduce using rule 32 (output)


State 21

   31 output: QUOTE '<' . expression '>'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    '<'         shift, and go to state 9

    expression   go to state 37
    predef_func  go to state 16
    output       go to state 17
    input        go to state 18


State 22

   10 var_type: ID .

    $default  reduce using rule 10 (var_type)


State 23

   12 declaration: ENTER FIXED . var_type ID
   14            | ENTER FIXED . var_type ID TELLING expression

    ID            shift, and go to state 22
    INT_TYPE      shift, and go to state 24
    STR_TYPE      shift, and go to state 25
    BOOLEAN_TYPE  shift, and go to state 26

    var_type  go to state 38


State 24

    7 var_type: INT_TYPE .

    $default  reduce using rule 7 (var_type)


State 25

    8 var_type: STR_TYPE .

    $default  reduce using rule 8 (var_type)


State 26

    9 var_type: BOOLEAN_TYPE .

    $default  reduce using rule 9 (var_type)


State 27

   11 declaration: ENTER var_type . ID
   13            | ENTER var_type . ID TELLING expression

    ID  shift, and go to state 39


State 28

   17 struct_decl: PROCLAIM ID . '<' decl_list '>'

    '<'  shift, and go to state 40


State 29

   18 expression: '<' expression . '>'
   19           | expression . ADDING expression
   20           | expression . CONSPIRING expression
   21           | expression . DIVIDED expression
   22           | expression . REMINDING expression
   23           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 32
    REMINDING   shift, and go to state 33
    ADDING      shift, and go to state 34
    CONSPIRING  shift, and go to state 35
    EMPOWERING  shift, and go to state 36
    '>'         shift, and go to state 41


State 30

    0 $accept: programm $end .

    $default  accept


State 31

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 32

   21 expression: expression DIVIDED . expression

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    '<'         shift, and go to state 9

    expression   go to state 42
    predef_func  go to state 16
    output       go to state 17
    input        go to state 18


State 33

   22 expression: expression REMINDING . expression

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    '<'         shift, and go to state 9

    expression   go to state 43
    predef_func  go to state 16
    output       go to state 17
    input        go to state 18


State 34

   19 expression: expression ADDING . expression

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    '<'         shift, and go to state 9

    expression   go to state 44
    predef_func  go to state 16
    output       go to state 17
    input        go to state 18


State 35

   20 expression: expression CONSPIRING . expression

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    '<'         shift, and go to state 9

    expression   go to state 45
    predef_func  go to state 16
    output       go to state 17
    input        go to state 18


State 36

   23 expression: expression EMPOWERING . expression

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    '<'         shift, and go to state 9

    expression   go to state 46
    predef_func  go to state 16
    output       go to state 17
    input        go to state 18


State 37

   19 expression: expression . ADDING expression
   20           | expression . CONSPIRING expression
   21           | expression . DIVIDED expression
   22           | expression . REMINDING expression
   23           | expression . EMPOWERING expression
   31 output: QUOTE '<' expression . '>'

    DIVIDED     shift, and go to state 32
    REMINDING   shift, and go to state 33
    ADDING      shift, and go to state 34
    CONSPIRING  shift, and go to state 35
    EMPOWERING  shift, and go to state 36
    '>'         shift, and go to state 47


State 38

   12 declaration: ENTER FIXED var_type . ID
   14            | ENTER FIXED var_type . ID TELLING expression

    ID  shift, and go to state 48


State 39

   11 declaration: ENTER var_type ID .
   13            | ENTER var_type ID . TELLING expression

    TELLING  shift, and go to state 49

    $default  reduce using rule 11 (declaration)


State 40

   17 struct_decl: PROCLAIM ID '<' . decl_list '>'

    ENTER  shift, and go to state 7

    declaration  go to state 50
    decl_list    go to state 51


State 41

   18 expression: '<' expression '>' .

    $default  reduce using rule 18 (expression)


State 42

   19 expression: expression . ADDING expression
   20           | expression . CONSPIRING expression
   21           | expression . DIVIDED expression
   21           | expression DIVIDED expression .
   22           | expression . REMINDING expression
   23           | expression . EMPOWERING expression

    $default  reduce using rule 21 (expression)


State 43

   19 expression: expression . ADDING expression
   20           | expression . CONSPIRING expression
   21           | expression . DIVIDED expression
   22           | expression . REMINDING expression
   22           | expression REMINDING expression .
   23           | expression . EMPOWERING expression

    $default  reduce using rule 22 (expression)


State 44

   19 expression: expression . ADDING expression
   19           | expression ADDING expression .
   20           | expression . CONSPIRING expression
   21           | expression . DIVIDED expression
   22           | expression . REMINDING expression
   23           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 32
    REMINDING   shift, and go to state 33
    EMPOWERING  shift, and go to state 36

    $default  reduce using rule 19 (expression)


State 45

   19 expression: expression . ADDING expression
   20           | expression . CONSPIRING expression
   20           | expression CONSPIRING expression .
   21           | expression . DIVIDED expression
   22           | expression . REMINDING expression
   23           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 32
    REMINDING   shift, and go to state 33
    EMPOWERING  shift, and go to state 36

    $default  reduce using rule 20 (expression)


State 46

   19 expression: expression . ADDING expression
   20           | expression . CONSPIRING expression
   21           | expression . DIVIDED expression
   22           | expression . REMINDING expression
   23           | expression . EMPOWERING expression
   23           | expression EMPOWERING expression .

    $default  reduce using rule 23 (expression)


State 47

   31 output: QUOTE '<' expression '>' .

    $default  reduce using rule 31 (output)


State 48

   12 declaration: ENTER FIXED var_type ID .
   14            | ENTER FIXED var_type ID . TELLING expression

    TELLING  shift, and go to state 52

    $default  reduce using rule 12 (declaration)


State 49

   13 declaration: ENTER var_type ID TELLING . expression

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    '<'         shift, and go to state 9

    expression   go to state 53
    predef_func  go to state 16
    output       go to state 17
    input        go to state 18


State 50

   15 decl_list: declaration .

    $default  reduce using rule 15 (decl_list)


State 51

   16 decl_list: decl_list . ',' declaration
   17 struct_decl: PROCLAIM ID '<' decl_list . '>'

    ','  shift, and go to state 54
    '>'  shift, and go to state 55


State 52

   14 declaration: ENTER FIXED var_type ID TELLING . expression

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    '<'         shift, and go to state 9

    expression   go to state 56
    predef_func  go to state 16
    output       go to state 17
    input        go to state 18


State 53

   13 declaration: ENTER var_type ID TELLING expression .
   19 expression: expression . ADDING expression
   20           | expression . CONSPIRING expression
   21           | expression . DIVIDED expression
   22           | expression . REMINDING expression
   23           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 32
    REMINDING   shift, and go to state 33
    ADDING      shift, and go to state 34
    CONSPIRING  shift, and go to state 35
    EMPOWERING  shift, and go to state 36

    $default  reduce using rule 13 (declaration)


State 54

   16 decl_list: decl_list ',' . declaration

    ENTER  shift, and go to state 7

    declaration  go to state 57


State 55

   17 struct_decl: PROCLAIM ID '<' decl_list '>' .

    $default  reduce using rule 17 (struct_decl)


State 56

   14 declaration: ENTER FIXED var_type ID TELLING expression .
   19 expression: expression . ADDING expression
   20           | expression . CONSPIRING expression
   21           | expression . DIVIDED expression
   22           | expression . REMINDING expression
   23           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 32
    REMINDING   shift, and go to state 33
    ADDING      shift, and go to state 34
    CONSPIRING  shift, and go to state 35
    EMPOWERING  shift, and go to state 36

    $default  reduce using rule 14 (declaration)


State 57

   16 decl_list: decl_list ',' declaration .

    $default  reduce using rule 16 (decl_list)
