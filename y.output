Terminals unused in grammar

   EQUALLING
   UPON
   CRY
   EXEUNT
   CHANGES
   INCREASES
   DECREASES
   WHENEVER
   DOES
   TWICE
   DIVIDE
   EMPOWER
   REMIND


Grammar

    0 $accept: programm $end

    1 programm: statements

    2 statements: statement
    3           | statements statement

    4 statement: expression
    5          | declaration
    6          | struct_decl
    7          | assign
    8          | output
    9          | if_statement
   10          | while_statement
   11          | for_statement

   12 complex_identifier: ID
   13                   | ID FROM complex_identifier

   14 var_type: INT_TYPE
   15         | STR_TYPE
   16         | BOOLEAN_TYPE
   17         | ID

   18 assign: LET complex_identifier BE expression
   19       | LET complex_identifier ASCEND
   20       | LET complex_identifier DESCEND
   21       | LET THERE BE expression ADDED BOOL_TO complex_identifier
   22       | LET THERE BE expression CONSPIRED FROM complex_identifier
   23       | LET THERE BE expression DIVIDING complex_identifier
   24       | LET THERE BE expression EMPOWERING complex_identifier
   25       | LET THERE BE expression REMINDING complex_identifier

   26 declaration: ENTER var_type ID
   27            | ENTER FIXED var_type ID
   28            | ENTER var_type ID TELLING expression
   29            | ENTER FIXED var_type ID TELLING expression

   30 decl_list: declaration
   31          | decl_list ',' declaration

   32 struct_decl: PROCLAIM ID '<' decl_list '>'

   33 expression: '<' expression '>'
   34           | expression ADDING expression
   35           | expression CONSPIRING expression
   36           | expression DIVIDING expression
   37           | expression REMINDING expression
   38           | expression EMPOWERING expression
   39           | expression BOOL_IS expression
   40           | expression BOOL_IS NOT expression
   41           | expression BOOL_LOWER BOOL_THAN expression
   42           | expression BOOL_GREATER BOOL_THAN expression
   43           | expression BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   45           | complex_identifier
   46           | NONE
   47           | ONE
   48           | NUMBER
   49           | STRING
   50           | BOOL_FALSE
   51           | BOOL_TRUE
   52           | input

   53 output: QUOTE '<' expression '>'

   54 input: SUMMON '<' complex_identifier '>'

   55 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>'
   56             | ASK WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE '<' statements '>'

   57 while_statement: SINCE expression '<' statements '>'

   58 for_statement: FOR assign ',' expression ',' assign '<' statements '>'


Terminals, with rules where they appear

$end (0) 0
',' (44) 31 58
'<' (60) 32 33 53 54 55 56 57 58
'>' (62) 32 33 53 54 55 56 57 58
error (256)
BE (258) 18 21 22 23 24 25
ENTER (259) 26 27 28 29
PROCLAIM (260) 32
LET (261) 18 19 20 21 22 23 24 25
THERE (262) 21 22 23 24 25
EQUALLING (263)
UPON (264)
ASCEND (265) 19
DESCEND (266) 20
CRY (267)
FOR (268) 58
EXEUNT (269)
NOT (270) 40
SINCE (271) 57
FROM (272) 13 22
ASK (273) 55 56
WHETHER (274) 55 56
THEN (275) 55 56
OTHERWISE (276) 56
CHANGES (277)
INCREASES (278)
DECREASES (279)
WHENEVER (280)
DOES (281)
NONE (282) 46
ONE (283) 47
TWICE (284)
ID (285) 12 13 17 26 27 28 29 32
TELLING (286) 28 29
FIXED (287) 27 29
INT_TYPE (288) 14
STR_TYPE (289) 15
BOOLEAN_TYPE (290) 16
NUMBER (291) 48
STRING (292) 49
BOOL_TRUE (293) 51
BOOL_FALSE (294) 50
QUOTE (295) 53
SUMMON (296) 54
DIVIDING (297) 23 36
REMINDING (298) 25 37
ADDING (299) 34
CONSPIRING (300) 35
EMPOWERING (301) 24 38
DIVIDE (302)
ADDED (303) 21
EMPOWER (304)
CONSPIRED (305) 22
REMIND (306)
BOOL_IS (307) 39 40
BOOL_UP (308) 43
BOOL_TO (309) 21 43 44
BOOL_DOWN (310) 44
BOOL_LOWER (311) 41 43
BOOL_GREATER (312) 42 44
BOOL_THAN (313) 41 42 43 44


Nonterminals, with rules where they appear

$accept (62)
    on left: 0
programm (63)
    on left: 1, on right: 0
statements (64)
    on left: 2 3, on right: 1 3 55 56 57 58
statement (65)
    on left: 4 5 6 7 8 9 10 11, on right: 2 3
complex_identifier (66)
    on left: 12 13, on right: 13 18 19 20 21 22 23 24 25 45 54
var_type (67)
    on left: 14 15 16 17, on right: 26 27 28 29
assign (68)
    on left: 18 19 20 21 22 23 24 25, on right: 7 58
declaration (69)
    on left: 26 27 28 29, on right: 5 30 31
decl_list (70)
    on left: 30 31, on right: 31 32
struct_decl (71)
    on left: 32, on right: 6
expression (72)
    on left: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
    51 52, on right: 4 18 21 22 23 24 25 28 29 33 34 35 36 37 38 39
    40 41 42 43 44 53 55 56 57 58
output (73)
    on left: 53, on right: 8
input (74)
    on left: 54, on right: 52
if_statement (75)
    on left: 55 56, on right: 9
while_statement (76)
    on left: 57, on right: 10
for_statement (77)
    on left: 58, on right: 11


State 0

    0 $accept: . programm $end

    ENTER       shift, and go to state 1
    PROCLAIM    shift, and go to state 2
    LET         shift, and go to state 3
    FOR         shift, and go to state 4
    SINCE       shift, and go to state 5
    ASK         shift, and go to state 6
    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    QUOTE       shift, and go to state 14
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    programm            go to state 17
    statements          go to state 18
    statement           go to state 19
    complex_identifier  go to state 20
    assign              go to state 21
    declaration         go to state 22
    struct_decl         go to state 23
    expression          go to state 24
    output              go to state 25
    input               go to state 26
    if_statement        go to state 27
    while_statement     go to state 28
    for_statement       go to state 29


State 1

   26 declaration: ENTER . var_type ID
   27            | ENTER . FIXED var_type ID
   28            | ENTER . var_type ID TELLING expression
   29            | ENTER . FIXED var_type ID TELLING expression

    ID            shift, and go to state 30
    FIXED         shift, and go to state 31
    INT_TYPE      shift, and go to state 32
    STR_TYPE      shift, and go to state 33
    BOOLEAN_TYPE  shift, and go to state 34

    var_type  go to state 35


State 2

   32 struct_decl: PROCLAIM . ID '<' decl_list '>'

    ID  shift, and go to state 36


State 3

   18 assign: LET . complex_identifier BE expression
   19       | LET . complex_identifier ASCEND
   20       | LET . complex_identifier DESCEND
   21       | LET . THERE BE expression ADDED BOOL_TO complex_identifier
   22       | LET . THERE BE expression CONSPIRED FROM complex_identifier
   23       | LET . THERE BE expression DIVIDING complex_identifier
   24       | LET . THERE BE expression EMPOWERING complex_identifier
   25       | LET . THERE BE expression REMINDING complex_identifier

    THERE  shift, and go to state 37
    ID     shift, and go to state 9

    complex_identifier  go to state 38


State 4

   58 for_statement: FOR . assign ',' expression ',' assign '<' statements '>'

    LET  shift, and go to state 3

    assign  go to state 39


State 5

   57 while_statement: SINCE . expression '<' statements '>'

    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 20
    expression          go to state 40
    input               go to state 26


State 6

   55 if_statement: ASK . WHETHER '<' expression '>' THEN '<' statements '>'
   56             | ASK . WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE '<' statements '>'

    WHETHER  shift, and go to state 41


State 7

   46 expression: NONE .

    $default  reduce using rule 46 (expression)


State 8

   47 expression: ONE .

    $default  reduce using rule 47 (expression)


State 9

   12 complex_identifier: ID .
   13                   | ID . FROM complex_identifier

    FROM  shift, and go to state 42

    $default  reduce using rule 12 (complex_identifier)


State 10

   48 expression: NUMBER .

    $default  reduce using rule 48 (expression)


State 11

   49 expression: STRING .

    $default  reduce using rule 49 (expression)


State 12

   51 expression: BOOL_TRUE .

    $default  reduce using rule 51 (expression)


State 13

   50 expression: BOOL_FALSE .

    $default  reduce using rule 50 (expression)


State 14

   53 output: QUOTE . '<' expression '>'

    '<'  shift, and go to state 43


State 15

   54 input: SUMMON . '<' complex_identifier '>'

    '<'  shift, and go to state 44


State 16

   33 expression: '<' . expression '>'

    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 20
    expression          go to state 45
    input               go to state 26


State 17

    0 $accept: programm . $end

    $end  shift, and go to state 46


State 18

    1 programm: statements .
    3 statements: statements . statement

    ENTER       shift, and go to state 1
    PROCLAIM    shift, and go to state 2
    LET         shift, and go to state 3
    FOR         shift, and go to state 4
    SINCE       shift, and go to state 5
    ASK         shift, and go to state 6
    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    QUOTE       shift, and go to state 14
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    $default  reduce using rule 1 (programm)

    statement           go to state 47
    complex_identifier  go to state 20
    assign              go to state 21
    declaration         go to state 22
    struct_decl         go to state 23
    expression          go to state 24
    output              go to state 25
    input               go to state 26
    if_statement        go to state 27
    while_statement     go to state 28
    for_statement       go to state 29


State 19

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 20

   45 expression: complex_identifier .

    $default  reduce using rule 45 (expression)


State 21

    7 statement: assign .

    $default  reduce using rule 7 (statement)


State 22

    5 statement: declaration .

    $default  reduce using rule 5 (statement)


State 23

    6 statement: struct_decl .

    $default  reduce using rule 6 (statement)


State 24

    4 statement: expression .
   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 48
    REMINDING     shift, and go to state 49
    ADDING        shift, and go to state 50
    CONSPIRING    shift, and go to state 51
    EMPOWERING    shift, and go to state 52
    BOOL_IS       shift, and go to state 53
    BOOL_UP       shift, and go to state 54
    BOOL_DOWN     shift, and go to state 55
    BOOL_LOWER    shift, and go to state 56
    BOOL_GREATER  shift, and go to state 57

    $default  reduce using rule 4 (statement)


State 25

    8 statement: output .

    $default  reduce using rule 8 (statement)


State 26

   52 expression: input .

    $default  reduce using rule 52 (expression)


State 27

    9 statement: if_statement .

    $default  reduce using rule 9 (statement)


State 28

   10 statement: while_statement .

    $default  reduce using rule 10 (statement)


State 29

   11 statement: for_statement .

    $default  reduce using rule 11 (statement)


State 30

   17 var_type: ID .

    $default  reduce using rule 17 (var_type)


State 31

   27 declaration: ENTER FIXED . var_type ID
   29            | ENTER FIXED . var_type ID TELLING expression

    ID            shift, and go to state 30
    INT_TYPE      shift, and go to state 32
    STR_TYPE      shift, and go to state 33
    BOOLEAN_TYPE  shift, and go to state 34

    var_type  go to state 58


State 32

   14 var_type: INT_TYPE .

    $default  reduce using rule 14 (var_type)


State 33

   15 var_type: STR_TYPE .

    $default  reduce using rule 15 (var_type)


State 34

   16 var_type: BOOLEAN_TYPE .

    $default  reduce using rule 16 (var_type)


State 35

   26 declaration: ENTER var_type . ID
   28            | ENTER var_type . ID TELLING expression

    ID  shift, and go to state 59


State 36

   32 struct_decl: PROCLAIM ID . '<' decl_list '>'

    '<'  shift, and go to state 60


State 37

   21 assign: LET THERE . BE expression ADDED BOOL_TO complex_identifier
   22       | LET THERE . BE expression CONSPIRED FROM complex_identifier
   23       | LET THERE . BE expression DIVIDING complex_identifier
   24       | LET THERE . BE expression EMPOWERING complex_identifier
   25       | LET THERE . BE expression REMINDING complex_identifier

    BE  shift, and go to state 61


State 38

   18 assign: LET complex_identifier . BE expression
   19       | LET complex_identifier . ASCEND
   20       | LET complex_identifier . DESCEND

    BE       shift, and go to state 62
    ASCEND   shift, and go to state 63
    DESCEND  shift, and go to state 64


State 39

   58 for_statement: FOR assign . ',' expression ',' assign '<' statements '>'

    ','  shift, and go to state 65


State 40

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   57 while_statement: SINCE expression . '<' statements '>'

    DIVIDING      shift, and go to state 48
    REMINDING     shift, and go to state 49
    ADDING        shift, and go to state 50
    CONSPIRING    shift, and go to state 51
    EMPOWERING    shift, and go to state 52
    BOOL_IS       shift, and go to state 53
    BOOL_UP       shift, and go to state 54
    BOOL_DOWN     shift, and go to state 55
    BOOL_LOWER    shift, and go to state 56
    BOOL_GREATER  shift, and go to state 57
    '<'           shift, and go to state 66


State 41

   55 if_statement: ASK WHETHER . '<' expression '>' THEN '<' statements '>'
   56             | ASK WHETHER . '<' expression '>' THEN '<' statements '>' OTHERWISE '<' statements '>'

    '<'  shift, and go to state 67


State 42

   13 complex_identifier: ID FROM . complex_identifier

    ID  shift, and go to state 9

    complex_identifier  go to state 68


State 43

   53 output: QUOTE '<' . expression '>'

    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 20
    expression          go to state 69
    input               go to state 26


State 44

   54 input: SUMMON '<' . complex_identifier '>'

    ID  shift, and go to state 9

    complex_identifier  go to state 70


State 45

   33 expression: '<' expression . '>'
   34           | expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 48
    REMINDING     shift, and go to state 49
    ADDING        shift, and go to state 50
    CONSPIRING    shift, and go to state 51
    EMPOWERING    shift, and go to state 52
    BOOL_IS       shift, and go to state 53
    BOOL_UP       shift, and go to state 54
    BOOL_DOWN     shift, and go to state 55
    BOOL_LOWER    shift, and go to state 56
    BOOL_GREATER  shift, and go to state 57
    '>'           shift, and go to state 71


State 46

    0 $accept: programm $end .

    $default  accept


State 47

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 48

   36 expression: expression DIVIDING . expression

    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 20
    expression          go to state 72
    input               go to state 26


State 49

   37 expression: expression REMINDING . expression

    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 20
    expression          go to state 73
    input               go to state 26


State 50

   34 expression: expression ADDING . expression

    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 20
    expression          go to state 74
    input               go to state 26


State 51

   35 expression: expression CONSPIRING . expression

    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 20
    expression          go to state 75
    input               go to state 26


State 52

   38 expression: expression EMPOWERING . expression

    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 20
    expression          go to state 76
    input               go to state 26


State 53

   39 expression: expression BOOL_IS . expression
   40           | expression BOOL_IS . NOT expression

    NOT         shift, and go to state 77
    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 20
    expression          go to state 78
    input               go to state 26


State 54

   43 expression: expression BOOL_UP . BOOL_TO BOOL_LOWER BOOL_THAN expression

    BOOL_TO  shift, and go to state 79


State 55

   44 expression: expression BOOL_DOWN . BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_TO  shift, and go to state 80


State 56

   41 expression: expression BOOL_LOWER . BOOL_THAN expression

    BOOL_THAN  shift, and go to state 81


State 57

   42 expression: expression BOOL_GREATER . BOOL_THAN expression

    BOOL_THAN  shift, and go to state 82


State 58

   27 declaration: ENTER FIXED var_type . ID
   29            | ENTER FIXED var_type . ID TELLING expression

    ID  shift, and go to state 83


State 59

   26 declaration: ENTER var_type ID .
   28            | ENTER var_type ID . TELLING expression

    TELLING  shift, and go to state 84

    $default  reduce using rule 26 (declaration)


State 60

   32 struct_decl: PROCLAIM ID '<' . decl_list '>'

    ENTER  shift, and go to state 1

    declaration  go to state 85
    decl_list    go to state 86


State 61

   21 assign: LET THERE BE . expression ADDED BOOL_TO complex_identifier
   22       | LET THERE BE . expression CONSPIRED FROM complex_identifier
   23       | LET THERE BE . expression DIVIDING complex_identifier
   24       | LET THERE BE . expression EMPOWERING complex_identifier
   25       | LET THERE BE . expression REMINDING complex_identifier

    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 20
    expression          go to state 87
    input               go to state 26


State 62

   18 assign: LET complex_identifier BE . expression

    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 20
    expression          go to state 88
    input               go to state 26


State 63

   19 assign: LET complex_identifier ASCEND .

    $default  reduce using rule 19 (assign)


State 64

   20 assign: LET complex_identifier DESCEND .

    $default  reduce using rule 20 (assign)


State 65

   58 for_statement: FOR assign ',' . expression ',' assign '<' statements '>'

    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 20
    expression          go to state 89
    input               go to state 26


State 66

   57 while_statement: SINCE expression '<' . statements '>'

    ENTER       shift, and go to state 1
    PROCLAIM    shift, and go to state 2
    LET         shift, and go to state 3
    FOR         shift, and go to state 4
    SINCE       shift, and go to state 5
    ASK         shift, and go to state 6
    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    QUOTE       shift, and go to state 14
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    statements          go to state 90
    statement           go to state 19
    complex_identifier  go to state 20
    assign              go to state 21
    declaration         go to state 22
    struct_decl         go to state 23
    expression          go to state 24
    output              go to state 25
    input               go to state 26
    if_statement        go to state 27
    while_statement     go to state 28
    for_statement       go to state 29


State 67

   55 if_statement: ASK WHETHER '<' . expression '>' THEN '<' statements '>'
   56             | ASK WHETHER '<' . expression '>' THEN '<' statements '>' OTHERWISE '<' statements '>'

    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 20
    expression          go to state 91
    input               go to state 26


State 68

   13 complex_identifier: ID FROM complex_identifier .

    $default  reduce using rule 13 (complex_identifier)


State 69

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   53 output: QUOTE '<' expression . '>'

    DIVIDING      shift, and go to state 48
    REMINDING     shift, and go to state 49
    ADDING        shift, and go to state 50
    CONSPIRING    shift, and go to state 51
    EMPOWERING    shift, and go to state 52
    BOOL_IS       shift, and go to state 53
    BOOL_UP       shift, and go to state 54
    BOOL_DOWN     shift, and go to state 55
    BOOL_LOWER    shift, and go to state 56
    BOOL_GREATER  shift, and go to state 57
    '>'           shift, and go to state 92


State 70

   54 input: SUMMON '<' complex_identifier . '>'

    '>'  shift, and go to state 93


State 71

   33 expression: '<' expression '>' .

    $default  reduce using rule 33 (expression)


State 72

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   36           | expression DIVIDING expression .
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       shift, and go to state 53
    BOOL_UP       shift, and go to state 54
    BOOL_DOWN     shift, and go to state 55
    BOOL_LOWER    shift, and go to state 56
    BOOL_GREATER  shift, and go to state 57

    $default  reduce using rule 36 (expression)


State 73

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   37           | expression REMINDING expression .
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       shift, and go to state 53
    BOOL_UP       shift, and go to state 54
    BOOL_DOWN     shift, and go to state 55
    BOOL_LOWER    shift, and go to state 56
    BOOL_GREATER  shift, and go to state 57

    $default  reduce using rule 37 (expression)


State 74

   34 expression: expression . ADDING expression
   34           | expression ADDING expression .
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 48
    REMINDING     shift, and go to state 49
    EMPOWERING    shift, and go to state 52
    BOOL_IS       shift, and go to state 53
    BOOL_UP       shift, and go to state 54
    BOOL_DOWN     shift, and go to state 55
    BOOL_LOWER    shift, and go to state 56
    BOOL_GREATER  shift, and go to state 57

    $default  reduce using rule 34 (expression)


State 75

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   35           | expression CONSPIRING expression .
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 48
    REMINDING     shift, and go to state 49
    EMPOWERING    shift, and go to state 52
    BOOL_IS       shift, and go to state 53
    BOOL_UP       shift, and go to state 54
    BOOL_DOWN     shift, and go to state 55
    BOOL_LOWER    shift, and go to state 56
    BOOL_GREATER  shift, and go to state 57

    $default  reduce using rule 35 (expression)


State 76

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   38           | expression EMPOWERING expression .
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       shift, and go to state 53
    BOOL_UP       shift, and go to state 54
    BOOL_DOWN     shift, and go to state 55
    BOOL_LOWER    shift, and go to state 56
    BOOL_GREATER  shift, and go to state 57

    $default  reduce using rule 38 (expression)


State 77

   40 expression: expression BOOL_IS NOT . expression

    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 20
    expression          go to state 94
    input               go to state 26


State 78

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   39           | expression BOOL_IS expression .
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_DOWN     error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 39 (expression)


State 79

   43 expression: expression BOOL_UP BOOL_TO . BOOL_LOWER BOOL_THAN expression

    BOOL_LOWER  shift, and go to state 95


State 80

   44 expression: expression BOOL_DOWN BOOL_TO . BOOL_GREATER BOOL_THAN expression

    BOOL_GREATER  shift, and go to state 96


State 81

   41 expression: expression BOOL_LOWER BOOL_THAN . expression

    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 20
    expression          go to state 97
    input               go to state 26


State 82

   42 expression: expression BOOL_GREATER BOOL_THAN . expression

    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 20
    expression          go to state 98
    input               go to state 26


State 83

   27 declaration: ENTER FIXED var_type ID .
   29            | ENTER FIXED var_type ID . TELLING expression

    TELLING  shift, and go to state 99

    $default  reduce using rule 27 (declaration)


State 84

   28 declaration: ENTER var_type ID TELLING . expression

    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 20
    expression          go to state 100
    input               go to state 26


State 85

   30 decl_list: declaration .

    $default  reduce using rule 30 (decl_list)


State 86

   31 decl_list: decl_list . ',' declaration
   32 struct_decl: PROCLAIM ID '<' decl_list . '>'

    ','  shift, and go to state 101
    '>'  shift, and go to state 102


State 87

   21 assign: LET THERE BE expression . ADDED BOOL_TO complex_identifier
   22       | LET THERE BE expression . CONSPIRED FROM complex_identifier
   23       | LET THERE BE expression . DIVIDING complex_identifier
   24       | LET THERE BE expression . EMPOWERING complex_identifier
   25       | LET THERE BE expression . REMINDING complex_identifier
   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 103
    REMINDING     shift, and go to state 104
    ADDING        shift, and go to state 50
    CONSPIRING    shift, and go to state 51
    EMPOWERING    shift, and go to state 105
    ADDED         shift, and go to state 106
    CONSPIRED     shift, and go to state 107
    BOOL_IS       shift, and go to state 53
    BOOL_UP       shift, and go to state 54
    BOOL_DOWN     shift, and go to state 55
    BOOL_LOWER    shift, and go to state 56
    BOOL_GREATER  shift, and go to state 57


State 88

   18 assign: LET complex_identifier BE expression .
   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 48
    REMINDING     shift, and go to state 49
    ADDING        shift, and go to state 50
    CONSPIRING    shift, and go to state 51
    EMPOWERING    shift, and go to state 52
    BOOL_IS       shift, and go to state 53
    BOOL_UP       shift, and go to state 54
    BOOL_DOWN     shift, and go to state 55
    BOOL_LOWER    shift, and go to state 56
    BOOL_GREATER  shift, and go to state 57

    $default  reduce using rule 18 (assign)


State 89

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   58 for_statement: FOR assign ',' expression . ',' assign '<' statements '>'

    DIVIDING      shift, and go to state 48
    REMINDING     shift, and go to state 49
    ADDING        shift, and go to state 50
    CONSPIRING    shift, and go to state 51
    EMPOWERING    shift, and go to state 52
    BOOL_IS       shift, and go to state 53
    BOOL_UP       shift, and go to state 54
    BOOL_DOWN     shift, and go to state 55
    BOOL_LOWER    shift, and go to state 56
    BOOL_GREATER  shift, and go to state 57
    ','           shift, and go to state 108


State 90

    3 statements: statements . statement
   57 while_statement: SINCE expression '<' statements . '>'

    ENTER       shift, and go to state 1
    PROCLAIM    shift, and go to state 2
    LET         shift, and go to state 3
    FOR         shift, and go to state 4
    SINCE       shift, and go to state 5
    ASK         shift, and go to state 6
    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    QUOTE       shift, and go to state 14
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16
    '>'         shift, and go to state 109

    statement           go to state 47
    complex_identifier  go to state 20
    assign              go to state 21
    declaration         go to state 22
    struct_decl         go to state 23
    expression          go to state 24
    output              go to state 25
    input               go to state 26
    if_statement        go to state 27
    while_statement     go to state 28
    for_statement       go to state 29


State 91

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   55 if_statement: ASK WHETHER '<' expression . '>' THEN '<' statements '>'
   56             | ASK WHETHER '<' expression . '>' THEN '<' statements '>' OTHERWISE '<' statements '>'

    DIVIDING      shift, and go to state 48
    REMINDING     shift, and go to state 49
    ADDING        shift, and go to state 50
    CONSPIRING    shift, and go to state 51
    EMPOWERING    shift, and go to state 52
    BOOL_IS       shift, and go to state 53
    BOOL_UP       shift, and go to state 54
    BOOL_DOWN     shift, and go to state 55
    BOOL_LOWER    shift, and go to state 56
    BOOL_GREATER  shift, and go to state 57
    '>'           shift, and go to state 110


State 92

   53 output: QUOTE '<' expression '>' .

    $default  reduce using rule 53 (output)


State 93

   54 input: SUMMON '<' complex_identifier '>' .

    $default  reduce using rule 54 (input)


State 94

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   40           | expression BOOL_IS NOT expression .
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_DOWN     error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 40 (expression)


State 95

   43 expression: expression BOOL_UP BOOL_TO BOOL_LOWER . BOOL_THAN expression

    BOOL_THAN  shift, and go to state 111


State 96

   44 expression: expression BOOL_DOWN BOOL_TO BOOL_GREATER . BOOL_THAN expression

    BOOL_THAN  shift, and go to state 112


State 97

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   41           | expression BOOL_LOWER BOOL_THAN expression .
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_DOWN     error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 41 (expression)


State 98

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   42           | expression BOOL_GREATER BOOL_THAN expression .
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_DOWN     error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 42 (expression)


State 99

   29 declaration: ENTER FIXED var_type ID TELLING . expression

    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 20
    expression          go to state 113
    input               go to state 26


State 100

   28 declaration: ENTER var_type ID TELLING expression .
   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 48
    REMINDING     shift, and go to state 49
    ADDING        shift, and go to state 50
    CONSPIRING    shift, and go to state 51
    EMPOWERING    shift, and go to state 52
    BOOL_IS       shift, and go to state 53
    BOOL_UP       shift, and go to state 54
    BOOL_DOWN     shift, and go to state 55
    BOOL_LOWER    shift, and go to state 56
    BOOL_GREATER  shift, and go to state 57

    $default  reduce using rule 28 (declaration)


State 101

   31 decl_list: decl_list ',' . declaration

    ENTER  shift, and go to state 1

    declaration  go to state 114


State 102

   32 struct_decl: PROCLAIM ID '<' decl_list '>' .

    $default  reduce using rule 32 (struct_decl)


State 103

   23 assign: LET THERE BE expression DIVIDING . complex_identifier
   36 expression: expression DIVIDING . expression

    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 115
    expression          go to state 72
    input               go to state 26


State 104

   25 assign: LET THERE BE expression REMINDING . complex_identifier
   37 expression: expression REMINDING . expression

    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 116
    expression          go to state 73
    input               go to state 26


State 105

   24 assign: LET THERE BE expression EMPOWERING . complex_identifier
   38 expression: expression EMPOWERING . expression

    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 117
    expression          go to state 76
    input               go to state 26


State 106

   21 assign: LET THERE BE expression ADDED . BOOL_TO complex_identifier

    BOOL_TO  shift, and go to state 118


State 107

   22 assign: LET THERE BE expression CONSPIRED . FROM complex_identifier

    FROM  shift, and go to state 119


State 108

   58 for_statement: FOR assign ',' expression ',' . assign '<' statements '>'

    LET  shift, and go to state 3

    assign  go to state 120


State 109

   57 while_statement: SINCE expression '<' statements '>' .

    $default  reduce using rule 57 (while_statement)


State 110

   55 if_statement: ASK WHETHER '<' expression '>' . THEN '<' statements '>'
   56             | ASK WHETHER '<' expression '>' . THEN '<' statements '>' OTHERWISE '<' statements '>'

    THEN  shift, and go to state 121


State 111

   43 expression: expression BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN . expression

    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 20
    expression          go to state 122
    input               go to state 26


State 112

   44 expression: expression BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN . expression

    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    complex_identifier  go to state 20
    expression          go to state 123
    input               go to state 26


State 113

   29 declaration: ENTER FIXED var_type ID TELLING expression .
   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 48
    REMINDING     shift, and go to state 49
    ADDING        shift, and go to state 50
    CONSPIRING    shift, and go to state 51
    EMPOWERING    shift, and go to state 52
    BOOL_IS       shift, and go to state 53
    BOOL_UP       shift, and go to state 54
    BOOL_DOWN     shift, and go to state 55
    BOOL_LOWER    shift, and go to state 56
    BOOL_GREATER  shift, and go to state 57

    $default  reduce using rule 29 (declaration)


State 114

   31 decl_list: decl_list ',' declaration .

    $default  reduce using rule 31 (decl_list)


State 115

   23 assign: LET THERE BE expression DIVIDING complex_identifier .
   45 expression: complex_identifier .

    DIVIDING      reduce using rule 45 (expression)
    REMINDING     reduce using rule 45 (expression)
    ADDING        reduce using rule 45 (expression)
    CONSPIRING    reduce using rule 45 (expression)
    EMPOWERING    reduce using rule 45 (expression)
    ADDED         reduce using rule 45 (expression)
    CONSPIRED     reduce using rule 45 (expression)
    BOOL_IS       reduce using rule 45 (expression)
    BOOL_UP       reduce using rule 45 (expression)
    BOOL_DOWN     reduce using rule 45 (expression)
    BOOL_LOWER    reduce using rule 45 (expression)
    BOOL_GREATER  reduce using rule 45 (expression)
    $default      reduce using rule 23 (assign)


State 116

   25 assign: LET THERE BE expression REMINDING complex_identifier .
   45 expression: complex_identifier .

    DIVIDING      reduce using rule 45 (expression)
    REMINDING     reduce using rule 45 (expression)
    ADDING        reduce using rule 45 (expression)
    CONSPIRING    reduce using rule 45 (expression)
    EMPOWERING    reduce using rule 45 (expression)
    ADDED         reduce using rule 45 (expression)
    CONSPIRED     reduce using rule 45 (expression)
    BOOL_IS       reduce using rule 45 (expression)
    BOOL_UP       reduce using rule 45 (expression)
    BOOL_DOWN     reduce using rule 45 (expression)
    BOOL_LOWER    reduce using rule 45 (expression)
    BOOL_GREATER  reduce using rule 45 (expression)
    $default      reduce using rule 25 (assign)


State 117

   24 assign: LET THERE BE expression EMPOWERING complex_identifier .
   45 expression: complex_identifier .

    DIVIDING      reduce using rule 45 (expression)
    REMINDING     reduce using rule 45 (expression)
    ADDING        reduce using rule 45 (expression)
    CONSPIRING    reduce using rule 45 (expression)
    EMPOWERING    reduce using rule 45 (expression)
    ADDED         reduce using rule 45 (expression)
    CONSPIRED     reduce using rule 45 (expression)
    BOOL_IS       reduce using rule 45 (expression)
    BOOL_UP       reduce using rule 45 (expression)
    BOOL_DOWN     reduce using rule 45 (expression)
    BOOL_LOWER    reduce using rule 45 (expression)
    BOOL_GREATER  reduce using rule 45 (expression)
    $default      reduce using rule 24 (assign)


State 118

   21 assign: LET THERE BE expression ADDED BOOL_TO . complex_identifier

    ID  shift, and go to state 9

    complex_identifier  go to state 124


State 119

   22 assign: LET THERE BE expression CONSPIRED FROM . complex_identifier

    ID  shift, and go to state 9

    complex_identifier  go to state 125


State 120

   58 for_statement: FOR assign ',' expression ',' assign . '<' statements '>'

    '<'  shift, and go to state 126


State 121

   55 if_statement: ASK WHETHER '<' expression '>' THEN . '<' statements '>'
   56             | ASK WHETHER '<' expression '>' THEN . '<' statements '>' OTHERWISE '<' statements '>'

    '<'  shift, and go to state 127


State 122

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   43           | expression BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression .
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_DOWN     error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 43 (expression)


State 123

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   44           | expression BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression .

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_DOWN     error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 44 (expression)


State 124

   21 assign: LET THERE BE expression ADDED BOOL_TO complex_identifier .

    $default  reduce using rule 21 (assign)


State 125

   22 assign: LET THERE BE expression CONSPIRED FROM complex_identifier .

    $default  reduce using rule 22 (assign)


State 126

   58 for_statement: FOR assign ',' expression ',' assign '<' . statements '>'

    ENTER       shift, and go to state 1
    PROCLAIM    shift, and go to state 2
    LET         shift, and go to state 3
    FOR         shift, and go to state 4
    SINCE       shift, and go to state 5
    ASK         shift, and go to state 6
    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    QUOTE       shift, and go to state 14
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    statements          go to state 128
    statement           go to state 19
    complex_identifier  go to state 20
    assign              go to state 21
    declaration         go to state 22
    struct_decl         go to state 23
    expression          go to state 24
    output              go to state 25
    input               go to state 26
    if_statement        go to state 27
    while_statement     go to state 28
    for_statement       go to state 29


State 127

   55 if_statement: ASK WHETHER '<' expression '>' THEN '<' . statements '>'
   56             | ASK WHETHER '<' expression '>' THEN '<' . statements '>' OTHERWISE '<' statements '>'

    ENTER       shift, and go to state 1
    PROCLAIM    shift, and go to state 2
    LET         shift, and go to state 3
    FOR         shift, and go to state 4
    SINCE       shift, and go to state 5
    ASK         shift, and go to state 6
    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    QUOTE       shift, and go to state 14
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    statements          go to state 129
    statement           go to state 19
    complex_identifier  go to state 20
    assign              go to state 21
    declaration         go to state 22
    struct_decl         go to state 23
    expression          go to state 24
    output              go to state 25
    input               go to state 26
    if_statement        go to state 27
    while_statement     go to state 28
    for_statement       go to state 29


State 128

    3 statements: statements . statement
   58 for_statement: FOR assign ',' expression ',' assign '<' statements . '>'

    ENTER       shift, and go to state 1
    PROCLAIM    shift, and go to state 2
    LET         shift, and go to state 3
    FOR         shift, and go to state 4
    SINCE       shift, and go to state 5
    ASK         shift, and go to state 6
    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    QUOTE       shift, and go to state 14
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16
    '>'         shift, and go to state 130

    statement           go to state 47
    complex_identifier  go to state 20
    assign              go to state 21
    declaration         go to state 22
    struct_decl         go to state 23
    expression          go to state 24
    output              go to state 25
    input               go to state 26
    if_statement        go to state 27
    while_statement     go to state 28
    for_statement       go to state 29


State 129

    3 statements: statements . statement
   55 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements . '>'
   56             | ASK WHETHER '<' expression '>' THEN '<' statements . '>' OTHERWISE '<' statements '>'

    ENTER       shift, and go to state 1
    PROCLAIM    shift, and go to state 2
    LET         shift, and go to state 3
    FOR         shift, and go to state 4
    SINCE       shift, and go to state 5
    ASK         shift, and go to state 6
    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    QUOTE       shift, and go to state 14
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16
    '>'         shift, and go to state 131

    statement           go to state 47
    complex_identifier  go to state 20
    assign              go to state 21
    declaration         go to state 22
    struct_decl         go to state 23
    expression          go to state 24
    output              go to state 25
    input               go to state 26
    if_statement        go to state 27
    while_statement     go to state 28
    for_statement       go to state 29


State 130

   58 for_statement: FOR assign ',' expression ',' assign '<' statements '>' .

    $default  reduce using rule 58 (for_statement)


State 131

   55 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>' .
   56             | ASK WHETHER '<' expression '>' THEN '<' statements '>' . OTHERWISE '<' statements '>'

    OTHERWISE  shift, and go to state 132

    $default  reduce using rule 55 (if_statement)


State 132

   56 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE . '<' statements '>'

    '<'  shift, and go to state 133


State 133

   56 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE '<' . statements '>'

    ENTER       shift, and go to state 1
    PROCLAIM    shift, and go to state 2
    LET         shift, and go to state 3
    FOR         shift, and go to state 4
    SINCE       shift, and go to state 5
    ASK         shift, and go to state 6
    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    QUOTE       shift, and go to state 14
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16

    statements          go to state 134
    statement           go to state 19
    complex_identifier  go to state 20
    assign              go to state 21
    declaration         go to state 22
    struct_decl         go to state 23
    expression          go to state 24
    output              go to state 25
    input               go to state 26
    if_statement        go to state 27
    while_statement     go to state 28
    for_statement       go to state 29


State 134

    3 statements: statements . statement
   56 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE '<' statements . '>'

    ENTER       shift, and go to state 1
    PROCLAIM    shift, and go to state 2
    LET         shift, and go to state 3
    FOR         shift, and go to state 4
    SINCE       shift, and go to state 5
    ASK         shift, and go to state 6
    NONE        shift, and go to state 7
    ONE         shift, and go to state 8
    ID          shift, and go to state 9
    NUMBER      shift, and go to state 10
    STRING      shift, and go to state 11
    BOOL_TRUE   shift, and go to state 12
    BOOL_FALSE  shift, and go to state 13
    QUOTE       shift, and go to state 14
    SUMMON      shift, and go to state 15
    '<'         shift, and go to state 16
    '>'         shift, and go to state 135

    statement           go to state 47
    complex_identifier  go to state 20
    assign              go to state 21
    declaration         go to state 22
    struct_decl         go to state 23
    expression          go to state 24
    output              go to state 25
    input               go to state 26
    if_statement        go to state 27
    while_statement     go to state 28
    for_statement       go to state 29


State 135

   56 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE '<' statements '>' .

    $default  reduce using rule 56 (if_statement)
