Terminals unused in grammar

   LET
   THERE
   EQUALLING
   UPON
   ADDED
   ASCEND
   DESCEND
   CRY
   FOR
   IS
   LEFT
   RIGHT
   UP
   TO
   DOWN
   LOWER
   GREATER
   THAN
   EXEUNT
   NOT
   SINCE
   FROM
   ASK
   WHETHER
   THEN
   OTHERWISE
   CHANGES
   INCREASES
   DECREASES
   WHENEVER
   DOES
   NONE
   ONE
   TWICE
   UNTRUTH
   INDEED


Grammar

    0 $accept: programm $end

    1 programm: statements

    2 statements: statement
    3           | statements statement

    4 statement: expression
    5          | declaration
    6          | struct_decl

    7 declaration: ENTER var_type ID
    8            | ENTER var_type ID TELLING expression
    9            | ENTER FIXED var_type ID TELLING expression

   10 var_type: INT_TYPE
   11         | STR_TYPE
   12         | BOOLEAN_TYPE

   13 decl_list: var_type ID
   14          | decl_list ',' var_type ID

   15 struct_decl: PROCLAIM ID '<' decl_list '>'

   16 expression: '<' expression '>'
   17           | expression ADDING expression
   18           | expression CONSPIRING expression
   19           | expression DIVIDED expression
   20           | expression REMINDING expression
   21           | expression EMPOWERING expression
   22           | NUMBER
   23           | STRING
   24           | BOOL_FALSE
   25           | BOOL_TRUE
   26           | predef_func

   27 predef_func: output
   28            | input

   29 output: QUOTE '<' expression '>'
   30       | QUOTE ID

   31 input: ID SUMMONED


Terminals, with rules where they appear

$end (0) 0
',' (44) 14
'<' (60) 15 16 29
'>' (62) 15 16 29
error (256)
ID (258) 7 8 9 13 14 15 30 31
TELLING (259) 8 9
FIXED (260) 9
INT_TYPE (261) 10
STR_TYPE (262) 11
BOOLEAN_TYPE (263) 12
NUMBER (264) 22
STRING (265) 23
BOOL_TRUE (266) 25
BOOL_FALSE (267) 24
QUOTE (268) 29 30
ENTER (269) 7 8 9
PROCLAIM (270) 15
LET (271)
THERE (272)
EQUALLING (273)
UPON (274)
ADDED (275)
ASCEND (276)
DESCEND (277)
CRY (278)
FOR (279)
DIVIDED (280) 19
REMINDING (281) 20
ADDING (282) 17
CONSPIRING (283) 18
EMPOWERING (284) 21
IS (285)
LEFT (286)
RIGHT (287)
UP (288)
TO (289)
DOWN (290)
LOWER (291)
GREATER (292)
THAN (293)
EXEUNT (294)
SUMMONED (295) 31
NOT (296)
SINCE (297)
FROM (298)
ASK (299)
WHETHER (300)
THEN (301)
OTHERWISE (302)
CHANGES (303)
INCREASES (304)
DECREASES (305)
WHENEVER (306)
DOES (307)
NONE (308)
ONE (309)
TWICE (310)
UNTRUTH (311)
INDEED (312)


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
programm (62)
    on left: 1, on right: 0
statements (63)
    on left: 2 3, on right: 1 3
statement (64)
    on left: 4 5 6, on right: 2 3
declaration (65)
    on left: 7 8 9, on right: 5
var_type (66)
    on left: 10 11 12, on right: 7 8 9 13 14
decl_list (67)
    on left: 13 14, on right: 14 15
struct_decl (68)
    on left: 15, on right: 6
expression (69)
    on left: 16 17 18 19 20 21 22 23 24 25 26, on right: 4 8 9 16 17
    18 19 20 21 29
predef_func (70)
    on left: 27 28, on right: 26
output (71)
    on left: 29 30, on right: 27
input (72)
    on left: 31, on right: 28


State 0

    0 $accept: . programm $end

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    ENTER       shift, and go to state 7
    PROCLAIM    shift, and go to state 8
    '<'         shift, and go to state 9

    programm     go to state 10
    statements   go to state 11
    statement    go to state 12
    declaration  go to state 13
    struct_decl  go to state 14
    expression   go to state 15
    predef_func  go to state 16
    output       go to state 17
    input        go to state 18


State 1

   31 input: ID . SUMMONED

    SUMMONED  shift, and go to state 19


State 2

   22 expression: NUMBER .

    $default  reduce using rule 22 (expression)


State 3

   23 expression: STRING .

    $default  reduce using rule 23 (expression)


State 4

   25 expression: BOOL_TRUE .

    $default  reduce using rule 25 (expression)


State 5

   24 expression: BOOL_FALSE .

    $default  reduce using rule 24 (expression)


State 6

   29 output: QUOTE . '<' expression '>'
   30       | QUOTE . ID

    ID   shift, and go to state 20
    '<'  shift, and go to state 21


State 7

    7 declaration: ENTER . var_type ID
    8            | ENTER . var_type ID TELLING expression
    9            | ENTER . FIXED var_type ID TELLING expression

    FIXED         shift, and go to state 22
    INT_TYPE      shift, and go to state 23
    STR_TYPE      shift, and go to state 24
    BOOLEAN_TYPE  shift, and go to state 25

    var_type  go to state 26


State 8

   15 struct_decl: PROCLAIM . ID '<' decl_list '>'

    ID  shift, and go to state 27


State 9

   16 expression: '<' . expression '>'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    '<'         shift, and go to state 9

    expression   go to state 28
    predef_func  go to state 16
    output       go to state 17
    input        go to state 18


State 10

    0 $accept: programm . $end

    $end  shift, and go to state 29


State 11

    1 programm: statements .
    3 statements: statements . statement

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    ENTER       shift, and go to state 7
    PROCLAIM    shift, and go to state 8
    '<'         shift, and go to state 9

    $default  reduce using rule 1 (programm)

    statement    go to state 30
    declaration  go to state 13
    struct_decl  go to state 14
    expression   go to state 15
    predef_func  go to state 16
    output       go to state 17
    input        go to state 18


State 12

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 13

    5 statement: declaration .

    $default  reduce using rule 5 (statement)


State 14

    6 statement: struct_decl .

    $default  reduce using rule 6 (statement)


State 15

    4 statement: expression .
   17 expression: expression . ADDING expression
   18           | expression . CONSPIRING expression
   19           | expression . DIVIDED expression
   20           | expression . REMINDING expression
   21           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 31
    REMINDING   shift, and go to state 32
    ADDING      shift, and go to state 33
    CONSPIRING  shift, and go to state 34
    EMPOWERING  shift, and go to state 35

    $default  reduce using rule 4 (statement)


State 16

   26 expression: predef_func .

    $default  reduce using rule 26 (expression)


State 17

   27 predef_func: output .

    $default  reduce using rule 27 (predef_func)


State 18

   28 predef_func: input .

    $default  reduce using rule 28 (predef_func)


State 19

   31 input: ID SUMMONED .

    $default  reduce using rule 31 (input)


State 20

   30 output: QUOTE ID .

    $default  reduce using rule 30 (output)


State 21

   29 output: QUOTE '<' . expression '>'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    '<'         shift, and go to state 9

    expression   go to state 36
    predef_func  go to state 16
    output       go to state 17
    input        go to state 18


State 22

    9 declaration: ENTER FIXED . var_type ID TELLING expression

    INT_TYPE      shift, and go to state 23
    STR_TYPE      shift, and go to state 24
    BOOLEAN_TYPE  shift, and go to state 25

    var_type  go to state 37


State 23

   10 var_type: INT_TYPE .

    $default  reduce using rule 10 (var_type)


State 24

   11 var_type: STR_TYPE .

    $default  reduce using rule 11 (var_type)


State 25

   12 var_type: BOOLEAN_TYPE .

    $default  reduce using rule 12 (var_type)


State 26

    7 declaration: ENTER var_type . ID
    8            | ENTER var_type . ID TELLING expression

    ID  shift, and go to state 38


State 27

   15 struct_decl: PROCLAIM ID . '<' decl_list '>'

    '<'  shift, and go to state 39


State 28

   16 expression: '<' expression . '>'
   17           | expression . ADDING expression
   18           | expression . CONSPIRING expression
   19           | expression . DIVIDED expression
   20           | expression . REMINDING expression
   21           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 31
    REMINDING   shift, and go to state 32
    ADDING      shift, and go to state 33
    CONSPIRING  shift, and go to state 34
    EMPOWERING  shift, and go to state 35
    '>'         shift, and go to state 40


State 29

    0 $accept: programm $end .

    $default  accept


State 30

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 31

   19 expression: expression DIVIDED . expression

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    '<'         shift, and go to state 9

    expression   go to state 41
    predef_func  go to state 16
    output       go to state 17
    input        go to state 18


State 32

   20 expression: expression REMINDING . expression

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    '<'         shift, and go to state 9

    expression   go to state 42
    predef_func  go to state 16
    output       go to state 17
    input        go to state 18


State 33

   17 expression: expression ADDING . expression

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    '<'         shift, and go to state 9

    expression   go to state 43
    predef_func  go to state 16
    output       go to state 17
    input        go to state 18


State 34

   18 expression: expression CONSPIRING . expression

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    '<'         shift, and go to state 9

    expression   go to state 44
    predef_func  go to state 16
    output       go to state 17
    input        go to state 18


State 35

   21 expression: expression EMPOWERING . expression

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    '<'         shift, and go to state 9

    expression   go to state 45
    predef_func  go to state 16
    output       go to state 17
    input        go to state 18


State 36

   17 expression: expression . ADDING expression
   18           | expression . CONSPIRING expression
   19           | expression . DIVIDED expression
   20           | expression . REMINDING expression
   21           | expression . EMPOWERING expression
   29 output: QUOTE '<' expression . '>'

    DIVIDED     shift, and go to state 31
    REMINDING   shift, and go to state 32
    ADDING      shift, and go to state 33
    CONSPIRING  shift, and go to state 34
    EMPOWERING  shift, and go to state 35
    '>'         shift, and go to state 46


State 37

    9 declaration: ENTER FIXED var_type . ID TELLING expression

    ID  shift, and go to state 47


State 38

    7 declaration: ENTER var_type ID .
    8            | ENTER var_type ID . TELLING expression

    TELLING  shift, and go to state 48

    $default  reduce using rule 7 (declaration)


State 39

   15 struct_decl: PROCLAIM ID '<' . decl_list '>'

    INT_TYPE      shift, and go to state 23
    STR_TYPE      shift, and go to state 24
    BOOLEAN_TYPE  shift, and go to state 25

    var_type   go to state 49
    decl_list  go to state 50


State 40

   16 expression: '<' expression '>' .

    $default  reduce using rule 16 (expression)


State 41

   17 expression: expression . ADDING expression
   18           | expression . CONSPIRING expression
   19           | expression . DIVIDED expression
   19           | expression DIVIDED expression .
   20           | expression . REMINDING expression
   21           | expression . EMPOWERING expression

    $default  reduce using rule 19 (expression)


State 42

   17 expression: expression . ADDING expression
   18           | expression . CONSPIRING expression
   19           | expression . DIVIDED expression
   20           | expression . REMINDING expression
   20           | expression REMINDING expression .
   21           | expression . EMPOWERING expression

    $default  reduce using rule 20 (expression)


State 43

   17 expression: expression . ADDING expression
   17           | expression ADDING expression .
   18           | expression . CONSPIRING expression
   19           | expression . DIVIDED expression
   20           | expression . REMINDING expression
   21           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 31
    REMINDING   shift, and go to state 32
    EMPOWERING  shift, and go to state 35

    $default  reduce using rule 17 (expression)


State 44

   17 expression: expression . ADDING expression
   18           | expression . CONSPIRING expression
   18           | expression CONSPIRING expression .
   19           | expression . DIVIDED expression
   20           | expression . REMINDING expression
   21           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 31
    REMINDING   shift, and go to state 32
    EMPOWERING  shift, and go to state 35

    $default  reduce using rule 18 (expression)


State 45

   17 expression: expression . ADDING expression
   18           | expression . CONSPIRING expression
   19           | expression . DIVIDED expression
   20           | expression . REMINDING expression
   21           | expression . EMPOWERING expression
   21           | expression EMPOWERING expression .

    $default  reduce using rule 21 (expression)


State 46

   29 output: QUOTE '<' expression '>' .

    $default  reduce using rule 29 (output)


State 47

    9 declaration: ENTER FIXED var_type ID . TELLING expression

    TELLING  shift, and go to state 51


State 48

    8 declaration: ENTER var_type ID TELLING . expression

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    '<'         shift, and go to state 9

    expression   go to state 52
    predef_func  go to state 16
    output       go to state 17
    input        go to state 18


State 49

   13 decl_list: var_type . ID

    ID  shift, and go to state 53


State 50

   14 decl_list: decl_list . ',' var_type ID
   15 struct_decl: PROCLAIM ID '<' decl_list . '>'

    ','  shift, and go to state 54
    '>'  shift, and go to state 55


State 51

    9 declaration: ENTER FIXED var_type ID TELLING . expression

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    '<'         shift, and go to state 9

    expression   go to state 56
    predef_func  go to state 16
    output       go to state 17
    input        go to state 18


State 52

    8 declaration: ENTER var_type ID TELLING expression .
   17 expression: expression . ADDING expression
   18           | expression . CONSPIRING expression
   19           | expression . DIVIDED expression
   20           | expression . REMINDING expression
   21           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 31
    REMINDING   shift, and go to state 32
    ADDING      shift, and go to state 33
    CONSPIRING  shift, and go to state 34
    EMPOWERING  shift, and go to state 35

    $default  reduce using rule 8 (declaration)


State 53

   13 decl_list: var_type ID .

    $default  reduce using rule 13 (decl_list)


State 54

   14 decl_list: decl_list ',' . var_type ID

    INT_TYPE      shift, and go to state 23
    STR_TYPE      shift, and go to state 24
    BOOLEAN_TYPE  shift, and go to state 25

    var_type  go to state 57


State 55

   15 struct_decl: PROCLAIM ID '<' decl_list '>' .

    $default  reduce using rule 15 (struct_decl)


State 56

    9 declaration: ENTER FIXED var_type ID TELLING expression .
   17 expression: expression . ADDING expression
   18           | expression . CONSPIRING expression
   19           | expression . DIVIDED expression
   20           | expression . REMINDING expression
   21           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 31
    REMINDING   shift, and go to state 32
    ADDING      shift, and go to state 33
    CONSPIRING  shift, and go to state 34
    EMPOWERING  shift, and go to state 35

    $default  reduce using rule 9 (declaration)


State 57

   14 decl_list: decl_list ',' var_type . ID

    ID  shift, and go to state 58


State 58

   14 decl_list: decl_list ',' var_type ID .

    $default  reduce using rule 14 (decl_list)
