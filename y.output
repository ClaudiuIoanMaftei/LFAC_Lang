Terminals unused in grammar

   UPON
   CHANGES
   INCREASES
   DECREASES
   WHENEVER
   DOES
   DIVIDE
   EMPOWER
   REMIND


Grammar

    0 $accept: programm $end

    1 programm: statements

    2 statements: statement
    3           | statements statement

    4 statement: expression
    5          | declaration
    6          | struct_decl
    7          | assign
    8          | output
    9          | if_statement
   10          | while_statement
   11          | for_statement
   12          | flow_break
   13          | function_decl

   14 complex_identifier: ID
   15                   | ID FROM complex_identifier

   16 var_type: INT_TYPE
   17         | STR_TYPE
   18         | BOOLEAN_TYPE
   19         | ID

   20 assign: LET complex_identifier BE expression
   21       | LET complex_identifier ASCEND
   22       | LET complex_identifier DESCEND
   23       | LET THERE BE expression ADDED BOOL_TO complex_identifier
   24       | LET THERE BE expression CONSPIRED FROM complex_identifier
   25       | LET THERE BE expression DIVIDING complex_identifier
   26       | LET THERE BE expression EMPOWERING complex_identifier
   27       | LET THERE BE expression REMINDING complex_identifier

   28 declaration: ENTER var_type ID
   29            | ENTER FIXED var_type ID
   30            | ENTER var_type ID TELLING expression
   31            | ENTER FIXED var_type ID TELLING expression

   32 struct_decl: PROCLAIM ID '<' function_decl_list '>'

   33 expression: '<' expression '>'
   34           | expression ADDING expression
   35           | expression CONSPIRING expression
   36           | expression DIVIDING expression
   37           | expression REMINDING expression
   38           | expression EMPOWERING expression
   39           | expression BOOL_IS expression
   40           | expression BOOL_IS NOT expression
   41           | expression BOOL_LOWER BOOL_THAN expression
   42           | expression BOOL_GREATER BOOL_THAN expression
   43           | expression BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   45           | complex_identifier
   46           | NONE
   47           | ONE
   48           | NUMBER
   49           | STRING
   50           | BOOL_FALSE
   51           | BOOL_TRUE
   52           | input
   53           | verbose
   54           | numeric
   55           | function_call

   56 output: QUOTE '<' expression '>'

   57 input: SUMMON '<' complex_identifier '>'

   58 verbose: VERBOSE '<' expression '>'

   59 numeric: NUMERIC '<' expression '>'

   60 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>'
   61             | ASK WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE '<' statements '>'

   62 while_statement: SINCE expression '<' statements '>'

   63 for_statement: FOR assign ',' SINCE expression ',' assign '<' statements '>'

   64 flow_break: EXEUNT expression '!'
   65           | EXEUNT '!'
   66           | FLOW_BREAK FLOW_FREE
   67           | FLOW_CONTINUE

   68 function_decl_item: var_type ID

   69 function_decl_list: function_decl_item
   70                   | function_decl_list ',' function_decl_item

   71 function_decl: DESCRIBE ID AS var_type ADVENTURE OF '<' function_decl_list '>' '<' statements '>'

   72 function_call: CRY FOR ID '<' expression_list '>'

   73 expression_list: expression
   74                | expression_list ',' expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 64 65
',' (44) 63 70 74
'<' (60) 32 33 56 57 58 59 60 61 62 63 71 72
'>' (62) 32 33 56 57 58 59 60 61 62 63 71 72
error (256)
UPON (258)
NOT (259) 40
SINCE (260) 62 63
FROM (261) 15 24
THEN (262) 60 61
CHANGES (263)
INCREASES (264)
DECREASES (265)
WHENEVER (266)
DOES (267)
NUMERIC (268) 59
VERBOSE (269) 58
ID (270) 14 15 19 28 29 30 31 32 68 71 72
TELLING (271) 30 31
FIXED (272) 29 31
INT_TYPE (273) 16
STR_TYPE (274) 17
BOOLEAN_TYPE (275) 18
NONE (276) 46
ONE (277) 47
NUMBER (278) 48
STRING (279) 49
BOOL_TRUE (280) 51
BOOL_FALSE (281) 50
QUOTE (282) 56
SUMMON (283) 57
DIVIDING (284) 25 36
REMINDING (285) 27 37
ADDING (286) 34
CONSPIRING (287) 35
EMPOWERING (288) 26 38
DIVIDE (289)
ADDED (290) 23
EMPOWER (291)
CONSPIRED (292) 24
REMIND (293)
ASCEND (294) 21
DESCEND (295) 22
BOOL_IS (296) 39 40
BOOL_UP (297) 43
BOOL_TO (298) 23 43 44
BOOL_DOWN (299) 44
BOOL_LOWER (300) 41 43
BOOL_GREATER (301) 42 44
BOOL_THAN (302) 41 42 43 44
FLOW_BREAK (303) 66
FLOW_FREE (304) 66
FLOW_CONTINUE (305) 67
EXEUNT (306) 64 65
DESCRIBE (307) 71
ADVENTURE (308) 71
AS (309) 71
OF (310) 71
CRY (311) 72
FOR (312) 63 72
ASK (313) 60 61
WHETHER (314) 60 61
OTHERWISE (315) 61
BE (316) 20 23 24 25 26 27
ENTER (317) 28 29 30 31
PROCLAIM (318) 32
LET (319) 20 21 22 23 24 25 26 27
THERE (320) 23 24 25 26 27


Nonterminals, with rules where they appear

$accept (70)
    on left: 0
programm (71)
    on left: 1, on right: 0
statements (72)
    on left: 2 3, on right: 1 3 60 61 62 63 71
statement (73)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 3
complex_identifier (74)
    on left: 14 15, on right: 15 20 21 22 23 24 25 26 27 45 57
var_type (75)
    on left: 16 17 18 19, on right: 28 29 30 31 68 71
assign (76)
    on left: 20 21 22 23 24 25 26 27, on right: 7 63
declaration (77)
    on left: 28 29 30 31, on right: 5
struct_decl (78)
    on left: 32, on right: 6
expression (79)
    on left: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
    51 52 53 54 55, on right: 4 20 23 24 25 26 27 30 31 33 34 35 36
    37 38 39 40 41 42 43 44 56 58 59 60 61 62 63 64 73 74
output (80)
    on left: 56, on right: 8
input (81)
    on left: 57, on right: 52
verbose (82)
    on left: 58, on right: 53
numeric (83)
    on left: 59, on right: 54
if_statement (84)
    on left: 60 61, on right: 9
while_statement (85)
    on left: 62, on right: 10
for_statement (86)
    on left: 63, on right: 11
flow_break (87)
    on left: 64 65 66 67, on right: 12
function_decl_item (88)
    on left: 68, on right: 69 70
function_decl_list (89)
    on left: 69 70, on right: 32 70 71
function_decl (90)
    on left: 71, on right: 13
function_call (91)
    on left: 72, on right: 55
expression_list (92)
    on left: 73 74, on right: 72 74


State 0

    0 $accept: . programm $end

    SINCE          shift, and go to state 1
    NUMERIC        shift, and go to state 2
    VERBOSE        shift, and go to state 3
    ID             shift, and go to state 4
    NONE           shift, and go to state 5
    ONE            shift, and go to state 6
    NUMBER         shift, and go to state 7
    STRING         shift, and go to state 8
    BOOL_TRUE      shift, and go to state 9
    BOOL_FALSE     shift, and go to state 10
    QUOTE          shift, and go to state 11
    SUMMON         shift, and go to state 12
    FLOW_BREAK     shift, and go to state 13
    FLOW_CONTINUE  shift, and go to state 14
    EXEUNT         shift, and go to state 15
    DESCRIBE       shift, and go to state 16
    CRY            shift, and go to state 17
    FOR            shift, and go to state 18
    ASK            shift, and go to state 19
    ENTER          shift, and go to state 20
    PROCLAIM       shift, and go to state 21
    LET            shift, and go to state 22
    '<'            shift, and go to state 23

    programm            go to state 24
    statements          go to state 25
    statement           go to state 26
    complex_identifier  go to state 27
    assign              go to state 28
    declaration         go to state 29
    struct_decl         go to state 30
    expression          go to state 31
    output              go to state 32
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    if_statement        go to state 36
    while_statement     go to state 37
    for_statement       go to state 38
    flow_break          go to state 39
    function_decl       go to state 40
    function_call       go to state 41


State 1

   62 while_statement: SINCE . expression '<' statements '>'

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 42
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 2

   59 numeric: NUMERIC . '<' expression '>'

    '<'  shift, and go to state 43


State 3

   58 verbose: VERBOSE . '<' expression '>'

    '<'  shift, and go to state 44


State 4

   14 complex_identifier: ID .
   15                   | ID . FROM complex_identifier

    FROM  shift, and go to state 45

    $default  reduce using rule 14 (complex_identifier)


State 5

   46 expression: NONE .

    $default  reduce using rule 46 (expression)


State 6

   47 expression: ONE .

    $default  reduce using rule 47 (expression)


State 7

   48 expression: NUMBER .

    $default  reduce using rule 48 (expression)


State 8

   49 expression: STRING .

    $default  reduce using rule 49 (expression)


State 9

   51 expression: BOOL_TRUE .

    $default  reduce using rule 51 (expression)


State 10

   50 expression: BOOL_FALSE .

    $default  reduce using rule 50 (expression)


State 11

   56 output: QUOTE . '<' expression '>'

    '<'  shift, and go to state 46


State 12

   57 input: SUMMON . '<' complex_identifier '>'

    '<'  shift, and go to state 47


State 13

   66 flow_break: FLOW_BREAK . FLOW_FREE

    FLOW_FREE  shift, and go to state 48


State 14

   67 flow_break: FLOW_CONTINUE .

    $default  reduce using rule 67 (flow_break)


State 15

   64 flow_break: EXEUNT . expression '!'
   65           | EXEUNT . '!'

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23
    '!'         shift, and go to state 49

    complex_identifier  go to state 27
    expression          go to state 50
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 16

   71 function_decl: DESCRIBE . ID AS var_type ADVENTURE OF '<' function_decl_list '>' '<' statements '>'

    ID  shift, and go to state 51


State 17

   72 function_call: CRY . FOR ID '<' expression_list '>'

    FOR  shift, and go to state 52


State 18

   63 for_statement: FOR . assign ',' SINCE expression ',' assign '<' statements '>'

    LET  shift, and go to state 22

    assign  go to state 53


State 19

   60 if_statement: ASK . WHETHER '<' expression '>' THEN '<' statements '>'
   61             | ASK . WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE '<' statements '>'

    WHETHER  shift, and go to state 54


State 20

   28 declaration: ENTER . var_type ID
   29            | ENTER . FIXED var_type ID
   30            | ENTER . var_type ID TELLING expression
   31            | ENTER . FIXED var_type ID TELLING expression

    ID            shift, and go to state 55
    FIXED         shift, and go to state 56
    INT_TYPE      shift, and go to state 57
    STR_TYPE      shift, and go to state 58
    BOOLEAN_TYPE  shift, and go to state 59

    var_type  go to state 60


State 21

   32 struct_decl: PROCLAIM . ID '<' function_decl_list '>'

    ID  shift, and go to state 61


State 22

   20 assign: LET . complex_identifier BE expression
   21       | LET . complex_identifier ASCEND
   22       | LET . complex_identifier DESCEND
   23       | LET . THERE BE expression ADDED BOOL_TO complex_identifier
   24       | LET . THERE BE expression CONSPIRED FROM complex_identifier
   25       | LET . THERE BE expression DIVIDING complex_identifier
   26       | LET . THERE BE expression EMPOWERING complex_identifier
   27       | LET . THERE BE expression REMINDING complex_identifier

    ID     shift, and go to state 4
    THERE  shift, and go to state 62

    complex_identifier  go to state 63


State 23

   33 expression: '<' . expression '>'

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 64
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 24

    0 $accept: programm . $end

    $end  shift, and go to state 65


State 25

    1 programm: statements .
    3 statements: statements . statement

    SINCE          shift, and go to state 1
    NUMERIC        shift, and go to state 2
    VERBOSE        shift, and go to state 3
    ID             shift, and go to state 4
    NONE           shift, and go to state 5
    ONE            shift, and go to state 6
    NUMBER         shift, and go to state 7
    STRING         shift, and go to state 8
    BOOL_TRUE      shift, and go to state 9
    BOOL_FALSE     shift, and go to state 10
    QUOTE          shift, and go to state 11
    SUMMON         shift, and go to state 12
    FLOW_BREAK     shift, and go to state 13
    FLOW_CONTINUE  shift, and go to state 14
    EXEUNT         shift, and go to state 15
    DESCRIBE       shift, and go to state 16
    CRY            shift, and go to state 17
    FOR            shift, and go to state 18
    ASK            shift, and go to state 19
    ENTER          shift, and go to state 20
    PROCLAIM       shift, and go to state 21
    LET            shift, and go to state 22
    '<'            shift, and go to state 23

    $default  reduce using rule 1 (programm)

    statement           go to state 66
    complex_identifier  go to state 27
    assign              go to state 28
    declaration         go to state 29
    struct_decl         go to state 30
    expression          go to state 31
    output              go to state 32
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    if_statement        go to state 36
    while_statement     go to state 37
    for_statement       go to state 38
    flow_break          go to state 39
    function_decl       go to state 40
    function_call       go to state 41


State 26

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 27

   45 expression: complex_identifier .

    $default  reduce using rule 45 (expression)


State 28

    7 statement: assign .

    $default  reduce using rule 7 (statement)


State 29

    5 statement: declaration .

    $default  reduce using rule 5 (statement)


State 30

    6 statement: struct_decl .

    $default  reduce using rule 6 (statement)


State 31

    4 statement: expression .
   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 67
    REMINDING     shift, and go to state 68
    ADDING        shift, and go to state 69
    CONSPIRING    shift, and go to state 70
    EMPOWERING    shift, and go to state 71
    BOOL_IS       shift, and go to state 72
    BOOL_UP       shift, and go to state 73
    BOOL_DOWN     shift, and go to state 74
    BOOL_LOWER    shift, and go to state 75
    BOOL_GREATER  shift, and go to state 76

    $default  reduce using rule 4 (statement)


State 32

    8 statement: output .

    $default  reduce using rule 8 (statement)


State 33

   52 expression: input .

    $default  reduce using rule 52 (expression)


State 34

   53 expression: verbose .

    $default  reduce using rule 53 (expression)


State 35

   54 expression: numeric .

    $default  reduce using rule 54 (expression)


State 36

    9 statement: if_statement .

    $default  reduce using rule 9 (statement)


State 37

   10 statement: while_statement .

    $default  reduce using rule 10 (statement)


State 38

   11 statement: for_statement .

    $default  reduce using rule 11 (statement)


State 39

   12 statement: flow_break .

    $default  reduce using rule 12 (statement)


State 40

   13 statement: function_decl .

    $default  reduce using rule 13 (statement)


State 41

   55 expression: function_call .

    $default  reduce using rule 55 (expression)


State 42

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   62 while_statement: SINCE expression . '<' statements '>'

    DIVIDING      shift, and go to state 67
    REMINDING     shift, and go to state 68
    ADDING        shift, and go to state 69
    CONSPIRING    shift, and go to state 70
    EMPOWERING    shift, and go to state 71
    BOOL_IS       shift, and go to state 72
    BOOL_UP       shift, and go to state 73
    BOOL_DOWN     shift, and go to state 74
    BOOL_LOWER    shift, and go to state 75
    BOOL_GREATER  shift, and go to state 76
    '<'           shift, and go to state 77


State 43

   59 numeric: NUMERIC '<' . expression '>'

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 78
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 44

   58 verbose: VERBOSE '<' . expression '>'

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 79
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 45

   15 complex_identifier: ID FROM . complex_identifier

    ID  shift, and go to state 4

    complex_identifier  go to state 80


State 46

   56 output: QUOTE '<' . expression '>'

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 81
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 47

   57 input: SUMMON '<' . complex_identifier '>'

    ID  shift, and go to state 4

    complex_identifier  go to state 82


State 48

   66 flow_break: FLOW_BREAK FLOW_FREE .

    $default  reduce using rule 66 (flow_break)


State 49

   65 flow_break: EXEUNT '!' .

    $default  reduce using rule 65 (flow_break)


State 50

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   64 flow_break: EXEUNT expression . '!'

    DIVIDING      shift, and go to state 67
    REMINDING     shift, and go to state 68
    ADDING        shift, and go to state 69
    CONSPIRING    shift, and go to state 70
    EMPOWERING    shift, and go to state 71
    BOOL_IS       shift, and go to state 72
    BOOL_UP       shift, and go to state 73
    BOOL_DOWN     shift, and go to state 74
    BOOL_LOWER    shift, and go to state 75
    BOOL_GREATER  shift, and go to state 76
    '!'           shift, and go to state 83


State 51

   71 function_decl: DESCRIBE ID . AS var_type ADVENTURE OF '<' function_decl_list '>' '<' statements '>'

    AS  shift, and go to state 84


State 52

   72 function_call: CRY FOR . ID '<' expression_list '>'

    ID  shift, and go to state 85


State 53

   63 for_statement: FOR assign . ',' SINCE expression ',' assign '<' statements '>'

    ','  shift, and go to state 86


State 54

   60 if_statement: ASK WHETHER . '<' expression '>' THEN '<' statements '>'
   61             | ASK WHETHER . '<' expression '>' THEN '<' statements '>' OTHERWISE '<' statements '>'

    '<'  shift, and go to state 87


State 55

   19 var_type: ID .

    $default  reduce using rule 19 (var_type)


State 56

   29 declaration: ENTER FIXED . var_type ID
   31            | ENTER FIXED . var_type ID TELLING expression

    ID            shift, and go to state 55
    INT_TYPE      shift, and go to state 57
    STR_TYPE      shift, and go to state 58
    BOOLEAN_TYPE  shift, and go to state 59

    var_type  go to state 88


State 57

   16 var_type: INT_TYPE .

    $default  reduce using rule 16 (var_type)


State 58

   17 var_type: STR_TYPE .

    $default  reduce using rule 17 (var_type)


State 59

   18 var_type: BOOLEAN_TYPE .

    $default  reduce using rule 18 (var_type)


State 60

   28 declaration: ENTER var_type . ID
   30            | ENTER var_type . ID TELLING expression

    ID  shift, and go to state 89


State 61

   32 struct_decl: PROCLAIM ID . '<' function_decl_list '>'

    '<'  shift, and go to state 90


State 62

   23 assign: LET THERE . BE expression ADDED BOOL_TO complex_identifier
   24       | LET THERE . BE expression CONSPIRED FROM complex_identifier
   25       | LET THERE . BE expression DIVIDING complex_identifier
   26       | LET THERE . BE expression EMPOWERING complex_identifier
   27       | LET THERE . BE expression REMINDING complex_identifier

    BE  shift, and go to state 91


State 63

   20 assign: LET complex_identifier . BE expression
   21       | LET complex_identifier . ASCEND
   22       | LET complex_identifier . DESCEND

    ASCEND   shift, and go to state 92
    DESCEND  shift, and go to state 93
    BE       shift, and go to state 94


State 64

   33 expression: '<' expression . '>'
   34           | expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 67
    REMINDING     shift, and go to state 68
    ADDING        shift, and go to state 69
    CONSPIRING    shift, and go to state 70
    EMPOWERING    shift, and go to state 71
    BOOL_IS       shift, and go to state 72
    BOOL_UP       shift, and go to state 73
    BOOL_DOWN     shift, and go to state 74
    BOOL_LOWER    shift, and go to state 75
    BOOL_GREATER  shift, and go to state 76
    '>'           shift, and go to state 95


State 65

    0 $accept: programm $end .

    $default  accept


State 66

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 67

   36 expression: expression DIVIDING . expression

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 96
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 68

   37 expression: expression REMINDING . expression

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 97
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 69

   34 expression: expression ADDING . expression

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 98
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 70

   35 expression: expression CONSPIRING . expression

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 99
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 71

   38 expression: expression EMPOWERING . expression

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 100
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 72

   39 expression: expression BOOL_IS . expression
   40           | expression BOOL_IS . NOT expression

    NOT         shift, and go to state 101
    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 102
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 73

   43 expression: expression BOOL_UP . BOOL_TO BOOL_LOWER BOOL_THAN expression

    BOOL_TO  shift, and go to state 103


State 74

   44 expression: expression BOOL_DOWN . BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_TO  shift, and go to state 104


State 75

   41 expression: expression BOOL_LOWER . BOOL_THAN expression

    BOOL_THAN  shift, and go to state 105


State 76

   42 expression: expression BOOL_GREATER . BOOL_THAN expression

    BOOL_THAN  shift, and go to state 106


State 77

   62 while_statement: SINCE expression '<' . statements '>'

    SINCE          shift, and go to state 1
    NUMERIC        shift, and go to state 2
    VERBOSE        shift, and go to state 3
    ID             shift, and go to state 4
    NONE           shift, and go to state 5
    ONE            shift, and go to state 6
    NUMBER         shift, and go to state 7
    STRING         shift, and go to state 8
    BOOL_TRUE      shift, and go to state 9
    BOOL_FALSE     shift, and go to state 10
    QUOTE          shift, and go to state 11
    SUMMON         shift, and go to state 12
    FLOW_BREAK     shift, and go to state 13
    FLOW_CONTINUE  shift, and go to state 14
    EXEUNT         shift, and go to state 15
    DESCRIBE       shift, and go to state 16
    CRY            shift, and go to state 17
    FOR            shift, and go to state 18
    ASK            shift, and go to state 19
    ENTER          shift, and go to state 20
    PROCLAIM       shift, and go to state 21
    LET            shift, and go to state 22
    '<'            shift, and go to state 23

    statements          go to state 107
    statement           go to state 26
    complex_identifier  go to state 27
    assign              go to state 28
    declaration         go to state 29
    struct_decl         go to state 30
    expression          go to state 31
    output              go to state 32
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    if_statement        go to state 36
    while_statement     go to state 37
    for_statement       go to state 38
    flow_break          go to state 39
    function_decl       go to state 40
    function_call       go to state 41


State 78

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   59 numeric: NUMERIC '<' expression . '>'

    DIVIDING      shift, and go to state 67
    REMINDING     shift, and go to state 68
    ADDING        shift, and go to state 69
    CONSPIRING    shift, and go to state 70
    EMPOWERING    shift, and go to state 71
    BOOL_IS       shift, and go to state 72
    BOOL_UP       shift, and go to state 73
    BOOL_DOWN     shift, and go to state 74
    BOOL_LOWER    shift, and go to state 75
    BOOL_GREATER  shift, and go to state 76
    '>'           shift, and go to state 108


State 79

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   58 verbose: VERBOSE '<' expression . '>'

    DIVIDING      shift, and go to state 67
    REMINDING     shift, and go to state 68
    ADDING        shift, and go to state 69
    CONSPIRING    shift, and go to state 70
    EMPOWERING    shift, and go to state 71
    BOOL_IS       shift, and go to state 72
    BOOL_UP       shift, and go to state 73
    BOOL_DOWN     shift, and go to state 74
    BOOL_LOWER    shift, and go to state 75
    BOOL_GREATER  shift, and go to state 76
    '>'           shift, and go to state 109


State 80

   15 complex_identifier: ID FROM complex_identifier .

    $default  reduce using rule 15 (complex_identifier)


State 81

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   56 output: QUOTE '<' expression . '>'

    DIVIDING      shift, and go to state 67
    REMINDING     shift, and go to state 68
    ADDING        shift, and go to state 69
    CONSPIRING    shift, and go to state 70
    EMPOWERING    shift, and go to state 71
    BOOL_IS       shift, and go to state 72
    BOOL_UP       shift, and go to state 73
    BOOL_DOWN     shift, and go to state 74
    BOOL_LOWER    shift, and go to state 75
    BOOL_GREATER  shift, and go to state 76
    '>'           shift, and go to state 110


State 82

   57 input: SUMMON '<' complex_identifier . '>'

    '>'  shift, and go to state 111


State 83

   64 flow_break: EXEUNT expression '!' .

    $default  reduce using rule 64 (flow_break)


State 84

   71 function_decl: DESCRIBE ID AS . var_type ADVENTURE OF '<' function_decl_list '>' '<' statements '>'

    ID            shift, and go to state 55
    INT_TYPE      shift, and go to state 57
    STR_TYPE      shift, and go to state 58
    BOOLEAN_TYPE  shift, and go to state 59

    var_type  go to state 112


State 85

   72 function_call: CRY FOR ID . '<' expression_list '>'

    '<'  shift, and go to state 113


State 86

   63 for_statement: FOR assign ',' . SINCE expression ',' assign '<' statements '>'

    SINCE  shift, and go to state 114


State 87

   60 if_statement: ASK WHETHER '<' . expression '>' THEN '<' statements '>'
   61             | ASK WHETHER '<' . expression '>' THEN '<' statements '>' OTHERWISE '<' statements '>'

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 115
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 88

   29 declaration: ENTER FIXED var_type . ID
   31            | ENTER FIXED var_type . ID TELLING expression

    ID  shift, and go to state 116


State 89

   28 declaration: ENTER var_type ID .
   30            | ENTER var_type ID . TELLING expression

    TELLING  shift, and go to state 117

    $default  reduce using rule 28 (declaration)


State 90

   32 struct_decl: PROCLAIM ID '<' . function_decl_list '>'

    ID            shift, and go to state 55
    INT_TYPE      shift, and go to state 57
    STR_TYPE      shift, and go to state 58
    BOOLEAN_TYPE  shift, and go to state 59

    var_type            go to state 118
    function_decl_item  go to state 119
    function_decl_list  go to state 120


State 91

   23 assign: LET THERE BE . expression ADDED BOOL_TO complex_identifier
   24       | LET THERE BE . expression CONSPIRED FROM complex_identifier
   25       | LET THERE BE . expression DIVIDING complex_identifier
   26       | LET THERE BE . expression EMPOWERING complex_identifier
   27       | LET THERE BE . expression REMINDING complex_identifier

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 121
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 92

   21 assign: LET complex_identifier ASCEND .

    $default  reduce using rule 21 (assign)


State 93

   22 assign: LET complex_identifier DESCEND .

    $default  reduce using rule 22 (assign)


State 94

   20 assign: LET complex_identifier BE . expression

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 122
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 95

   33 expression: '<' expression '>' .

    $default  reduce using rule 33 (expression)


State 96

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   36           | expression DIVIDING expression .
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       shift, and go to state 72
    BOOL_UP       shift, and go to state 73
    BOOL_DOWN     shift, and go to state 74
    BOOL_LOWER    shift, and go to state 75
    BOOL_GREATER  shift, and go to state 76

    $default  reduce using rule 36 (expression)


State 97

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   37           | expression REMINDING expression .
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       shift, and go to state 72
    BOOL_UP       shift, and go to state 73
    BOOL_DOWN     shift, and go to state 74
    BOOL_LOWER    shift, and go to state 75
    BOOL_GREATER  shift, and go to state 76

    $default  reduce using rule 37 (expression)


State 98

   34 expression: expression . ADDING expression
   34           | expression ADDING expression .
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 67
    REMINDING     shift, and go to state 68
    EMPOWERING    shift, and go to state 71
    BOOL_IS       shift, and go to state 72
    BOOL_UP       shift, and go to state 73
    BOOL_DOWN     shift, and go to state 74
    BOOL_LOWER    shift, and go to state 75
    BOOL_GREATER  shift, and go to state 76

    $default  reduce using rule 34 (expression)


State 99

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   35           | expression CONSPIRING expression .
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 67
    REMINDING     shift, and go to state 68
    EMPOWERING    shift, and go to state 71
    BOOL_IS       shift, and go to state 72
    BOOL_UP       shift, and go to state 73
    BOOL_DOWN     shift, and go to state 74
    BOOL_LOWER    shift, and go to state 75
    BOOL_GREATER  shift, and go to state 76

    $default  reduce using rule 35 (expression)


State 100

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   38           | expression EMPOWERING expression .
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       shift, and go to state 72
    BOOL_UP       shift, and go to state 73
    BOOL_DOWN     shift, and go to state 74
    BOOL_LOWER    shift, and go to state 75
    BOOL_GREATER  shift, and go to state 76

    $default  reduce using rule 38 (expression)


State 101

   40 expression: expression BOOL_IS NOT . expression

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 123
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 102

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   39           | expression BOOL_IS expression .
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_DOWN     error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 39 (expression)


State 103

   43 expression: expression BOOL_UP BOOL_TO . BOOL_LOWER BOOL_THAN expression

    BOOL_LOWER  shift, and go to state 124


State 104

   44 expression: expression BOOL_DOWN BOOL_TO . BOOL_GREATER BOOL_THAN expression

    BOOL_GREATER  shift, and go to state 125


State 105

   41 expression: expression BOOL_LOWER BOOL_THAN . expression

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 126
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 106

   42 expression: expression BOOL_GREATER BOOL_THAN . expression

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 127
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 107

    3 statements: statements . statement
   62 while_statement: SINCE expression '<' statements . '>'

    SINCE          shift, and go to state 1
    NUMERIC        shift, and go to state 2
    VERBOSE        shift, and go to state 3
    ID             shift, and go to state 4
    NONE           shift, and go to state 5
    ONE            shift, and go to state 6
    NUMBER         shift, and go to state 7
    STRING         shift, and go to state 8
    BOOL_TRUE      shift, and go to state 9
    BOOL_FALSE     shift, and go to state 10
    QUOTE          shift, and go to state 11
    SUMMON         shift, and go to state 12
    FLOW_BREAK     shift, and go to state 13
    FLOW_CONTINUE  shift, and go to state 14
    EXEUNT         shift, and go to state 15
    DESCRIBE       shift, and go to state 16
    CRY            shift, and go to state 17
    FOR            shift, and go to state 18
    ASK            shift, and go to state 19
    ENTER          shift, and go to state 20
    PROCLAIM       shift, and go to state 21
    LET            shift, and go to state 22
    '<'            shift, and go to state 23
    '>'            shift, and go to state 128

    statement           go to state 66
    complex_identifier  go to state 27
    assign              go to state 28
    declaration         go to state 29
    struct_decl         go to state 30
    expression          go to state 31
    output              go to state 32
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    if_statement        go to state 36
    while_statement     go to state 37
    for_statement       go to state 38
    flow_break          go to state 39
    function_decl       go to state 40
    function_call       go to state 41


State 108

   59 numeric: NUMERIC '<' expression '>' .

    $default  reduce using rule 59 (numeric)


State 109

   58 verbose: VERBOSE '<' expression '>' .

    $default  reduce using rule 58 (verbose)


State 110

   56 output: QUOTE '<' expression '>' .

    $default  reduce using rule 56 (output)


State 111

   57 input: SUMMON '<' complex_identifier '>' .

    $default  reduce using rule 57 (input)


State 112

   71 function_decl: DESCRIBE ID AS var_type . ADVENTURE OF '<' function_decl_list '>' '<' statements '>'

    ADVENTURE  shift, and go to state 129


State 113

   72 function_call: CRY FOR ID '<' . expression_list '>'

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 130
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41
    expression_list     go to state 131


State 114

   63 for_statement: FOR assign ',' SINCE . expression ',' assign '<' statements '>'

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 132
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 115

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   60 if_statement: ASK WHETHER '<' expression . '>' THEN '<' statements '>'
   61             | ASK WHETHER '<' expression . '>' THEN '<' statements '>' OTHERWISE '<' statements '>'

    DIVIDING      shift, and go to state 67
    REMINDING     shift, and go to state 68
    ADDING        shift, and go to state 69
    CONSPIRING    shift, and go to state 70
    EMPOWERING    shift, and go to state 71
    BOOL_IS       shift, and go to state 72
    BOOL_UP       shift, and go to state 73
    BOOL_DOWN     shift, and go to state 74
    BOOL_LOWER    shift, and go to state 75
    BOOL_GREATER  shift, and go to state 76
    '>'           shift, and go to state 133


State 116

   29 declaration: ENTER FIXED var_type ID .
   31            | ENTER FIXED var_type ID . TELLING expression

    TELLING  shift, and go to state 134

    $default  reduce using rule 29 (declaration)


State 117

   30 declaration: ENTER var_type ID TELLING . expression

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 135
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 118

   68 function_decl_item: var_type . ID

    ID  shift, and go to state 136


State 119

   69 function_decl_list: function_decl_item .

    $default  reduce using rule 69 (function_decl_list)


State 120

   32 struct_decl: PROCLAIM ID '<' function_decl_list . '>'
   70 function_decl_list: function_decl_list . ',' function_decl_item

    '>'  shift, and go to state 137
    ','  shift, and go to state 138


State 121

   23 assign: LET THERE BE expression . ADDED BOOL_TO complex_identifier
   24       | LET THERE BE expression . CONSPIRED FROM complex_identifier
   25       | LET THERE BE expression . DIVIDING complex_identifier
   26       | LET THERE BE expression . EMPOWERING complex_identifier
   27       | LET THERE BE expression . REMINDING complex_identifier
   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 139
    REMINDING     shift, and go to state 140
    ADDING        shift, and go to state 69
    CONSPIRING    shift, and go to state 70
    EMPOWERING    shift, and go to state 141
    ADDED         shift, and go to state 142
    CONSPIRED     shift, and go to state 143
    BOOL_IS       shift, and go to state 72
    BOOL_UP       shift, and go to state 73
    BOOL_DOWN     shift, and go to state 74
    BOOL_LOWER    shift, and go to state 75
    BOOL_GREATER  shift, and go to state 76


State 122

   20 assign: LET complex_identifier BE expression .
   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 67
    REMINDING     shift, and go to state 68
    ADDING        shift, and go to state 69
    CONSPIRING    shift, and go to state 70
    EMPOWERING    shift, and go to state 71
    BOOL_IS       shift, and go to state 72
    BOOL_UP       shift, and go to state 73
    BOOL_DOWN     shift, and go to state 74
    BOOL_LOWER    shift, and go to state 75
    BOOL_GREATER  shift, and go to state 76

    $default  reduce using rule 20 (assign)


State 123

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   40           | expression BOOL_IS NOT expression .
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_DOWN     error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 40 (expression)


State 124

   43 expression: expression BOOL_UP BOOL_TO BOOL_LOWER . BOOL_THAN expression

    BOOL_THAN  shift, and go to state 144


State 125

   44 expression: expression BOOL_DOWN BOOL_TO BOOL_GREATER . BOOL_THAN expression

    BOOL_THAN  shift, and go to state 145


State 126

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   41           | expression BOOL_LOWER BOOL_THAN expression .
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_DOWN     error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 41 (expression)


State 127

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   42           | expression BOOL_GREATER BOOL_THAN expression .
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_DOWN     error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 42 (expression)


State 128

   62 while_statement: SINCE expression '<' statements '>' .

    $default  reduce using rule 62 (while_statement)


State 129

   71 function_decl: DESCRIBE ID AS var_type ADVENTURE . OF '<' function_decl_list '>' '<' statements '>'

    OF  shift, and go to state 146


State 130

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   73 expression_list: expression .

    DIVIDING      shift, and go to state 67
    REMINDING     shift, and go to state 68
    ADDING        shift, and go to state 69
    CONSPIRING    shift, and go to state 70
    EMPOWERING    shift, and go to state 71
    BOOL_IS       shift, and go to state 72
    BOOL_UP       shift, and go to state 73
    BOOL_DOWN     shift, and go to state 74
    BOOL_LOWER    shift, and go to state 75
    BOOL_GREATER  shift, and go to state 76

    $default  reduce using rule 73 (expression_list)


State 131

   72 function_call: CRY FOR ID '<' expression_list . '>'
   74 expression_list: expression_list . ',' expression

    '>'  shift, and go to state 147
    ','  shift, and go to state 148


State 132

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   63 for_statement: FOR assign ',' SINCE expression . ',' assign '<' statements '>'

    DIVIDING      shift, and go to state 67
    REMINDING     shift, and go to state 68
    ADDING        shift, and go to state 69
    CONSPIRING    shift, and go to state 70
    EMPOWERING    shift, and go to state 71
    BOOL_IS       shift, and go to state 72
    BOOL_UP       shift, and go to state 73
    BOOL_DOWN     shift, and go to state 74
    BOOL_LOWER    shift, and go to state 75
    BOOL_GREATER  shift, and go to state 76
    ','           shift, and go to state 149


State 133

   60 if_statement: ASK WHETHER '<' expression '>' . THEN '<' statements '>'
   61             | ASK WHETHER '<' expression '>' . THEN '<' statements '>' OTHERWISE '<' statements '>'

    THEN  shift, and go to state 150


State 134

   31 declaration: ENTER FIXED var_type ID TELLING . expression

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 151
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 135

   30 declaration: ENTER var_type ID TELLING expression .
   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 67
    REMINDING     shift, and go to state 68
    ADDING        shift, and go to state 69
    CONSPIRING    shift, and go to state 70
    EMPOWERING    shift, and go to state 71
    BOOL_IS       shift, and go to state 72
    BOOL_UP       shift, and go to state 73
    BOOL_DOWN     shift, and go to state 74
    BOOL_LOWER    shift, and go to state 75
    BOOL_GREATER  shift, and go to state 76

    $default  reduce using rule 30 (declaration)


State 136

   68 function_decl_item: var_type ID .

    $default  reduce using rule 68 (function_decl_item)


State 137

   32 struct_decl: PROCLAIM ID '<' function_decl_list '>' .

    $default  reduce using rule 32 (struct_decl)


State 138

   70 function_decl_list: function_decl_list ',' . function_decl_item

    ID            shift, and go to state 55
    INT_TYPE      shift, and go to state 57
    STR_TYPE      shift, and go to state 58
    BOOLEAN_TYPE  shift, and go to state 59

    var_type            go to state 118
    function_decl_item  go to state 152


State 139

   25 assign: LET THERE BE expression DIVIDING . complex_identifier
   36 expression: expression DIVIDING . expression

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 153
    expression          go to state 96
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 140

   27 assign: LET THERE BE expression REMINDING . complex_identifier
   37 expression: expression REMINDING . expression

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 154
    expression          go to state 97
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 141

   26 assign: LET THERE BE expression EMPOWERING . complex_identifier
   38 expression: expression EMPOWERING . expression

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 155
    expression          go to state 100
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 142

   23 assign: LET THERE BE expression ADDED . BOOL_TO complex_identifier

    BOOL_TO  shift, and go to state 156


State 143

   24 assign: LET THERE BE expression CONSPIRED . FROM complex_identifier

    FROM  shift, and go to state 157


State 144

   43 expression: expression BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN . expression

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 158
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 145

   44 expression: expression BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN . expression

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 159
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 146

   71 function_decl: DESCRIBE ID AS var_type ADVENTURE OF . '<' function_decl_list '>' '<' statements '>'

    '<'  shift, and go to state 160


State 147

   72 function_call: CRY FOR ID '<' expression_list '>' .

    $default  reduce using rule 72 (function_call)


State 148

   74 expression_list: expression_list ',' . expression

    NUMERIC     shift, and go to state 2
    VERBOSE     shift, and go to state 3
    ID          shift, and go to state 4
    NONE        shift, and go to state 5
    ONE         shift, and go to state 6
    NUMBER      shift, and go to state 7
    STRING      shift, and go to state 8
    BOOL_TRUE   shift, and go to state 9
    BOOL_FALSE  shift, and go to state 10
    SUMMON      shift, and go to state 12
    CRY         shift, and go to state 17
    '<'         shift, and go to state 23

    complex_identifier  go to state 27
    expression          go to state 161
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    function_call       go to state 41


State 149

   63 for_statement: FOR assign ',' SINCE expression ',' . assign '<' statements '>'

    LET  shift, and go to state 22

    assign  go to state 162


State 150

   60 if_statement: ASK WHETHER '<' expression '>' THEN . '<' statements '>'
   61             | ASK WHETHER '<' expression '>' THEN . '<' statements '>' OTHERWISE '<' statements '>'

    '<'  shift, and go to state 163


State 151

   31 declaration: ENTER FIXED var_type ID TELLING expression .
   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDING      shift, and go to state 67
    REMINDING     shift, and go to state 68
    ADDING        shift, and go to state 69
    CONSPIRING    shift, and go to state 70
    EMPOWERING    shift, and go to state 71
    BOOL_IS       shift, and go to state 72
    BOOL_UP       shift, and go to state 73
    BOOL_DOWN     shift, and go to state 74
    BOOL_LOWER    shift, and go to state 75
    BOOL_GREATER  shift, and go to state 76

    $default  reduce using rule 31 (declaration)


State 152

   70 function_decl_list: function_decl_list ',' function_decl_item .

    $default  reduce using rule 70 (function_decl_list)


State 153

   25 assign: LET THERE BE expression DIVIDING complex_identifier .
   45 expression: complex_identifier .

    DIVIDING      reduce using rule 45 (expression)
    REMINDING     reduce using rule 45 (expression)
    ADDING        reduce using rule 45 (expression)
    CONSPIRING    reduce using rule 45 (expression)
    EMPOWERING    reduce using rule 45 (expression)
    ADDED         reduce using rule 45 (expression)
    CONSPIRED     reduce using rule 45 (expression)
    BOOL_IS       reduce using rule 45 (expression)
    BOOL_UP       reduce using rule 45 (expression)
    BOOL_DOWN     reduce using rule 45 (expression)
    BOOL_LOWER    reduce using rule 45 (expression)
    BOOL_GREATER  reduce using rule 45 (expression)
    $default      reduce using rule 25 (assign)


State 154

   27 assign: LET THERE BE expression REMINDING complex_identifier .
   45 expression: complex_identifier .

    DIVIDING      reduce using rule 45 (expression)
    REMINDING     reduce using rule 45 (expression)
    ADDING        reduce using rule 45 (expression)
    CONSPIRING    reduce using rule 45 (expression)
    EMPOWERING    reduce using rule 45 (expression)
    ADDED         reduce using rule 45 (expression)
    CONSPIRED     reduce using rule 45 (expression)
    BOOL_IS       reduce using rule 45 (expression)
    BOOL_UP       reduce using rule 45 (expression)
    BOOL_DOWN     reduce using rule 45 (expression)
    BOOL_LOWER    reduce using rule 45 (expression)
    BOOL_GREATER  reduce using rule 45 (expression)
    $default      reduce using rule 27 (assign)


State 155

   26 assign: LET THERE BE expression EMPOWERING complex_identifier .
   45 expression: complex_identifier .

    DIVIDING      reduce using rule 45 (expression)
    REMINDING     reduce using rule 45 (expression)
    ADDING        reduce using rule 45 (expression)
    CONSPIRING    reduce using rule 45 (expression)
    EMPOWERING    reduce using rule 45 (expression)
    ADDED         reduce using rule 45 (expression)
    CONSPIRED     reduce using rule 45 (expression)
    BOOL_IS       reduce using rule 45 (expression)
    BOOL_UP       reduce using rule 45 (expression)
    BOOL_DOWN     reduce using rule 45 (expression)
    BOOL_LOWER    reduce using rule 45 (expression)
    BOOL_GREATER  reduce using rule 45 (expression)
    $default      reduce using rule 26 (assign)


State 156

   23 assign: LET THERE BE expression ADDED BOOL_TO . complex_identifier

    ID  shift, and go to state 4

    complex_identifier  go to state 164


State 157

   24 assign: LET THERE BE expression CONSPIRED FROM . complex_identifier

    ID  shift, and go to state 4

    complex_identifier  go to state 165


State 158

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   43           | expression BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression .
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_DOWN     error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 43 (expression)


State 159

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   44           | expression BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression .

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_DOWN     error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 44 (expression)


State 160

   71 function_decl: DESCRIBE ID AS var_type ADVENTURE OF '<' . function_decl_list '>' '<' statements '>'

    ID            shift, and go to state 55
    INT_TYPE      shift, and go to state 57
    STR_TYPE      shift, and go to state 58
    BOOLEAN_TYPE  shift, and go to state 59

    var_type            go to state 118
    function_decl_item  go to state 119
    function_decl_list  go to state 166


State 161

   34 expression: expression . ADDING expression
   35           | expression . CONSPIRING expression
   36           | expression . DIVIDING expression
   37           | expression . REMINDING expression
   38           | expression . EMPOWERING expression
   39           | expression . BOOL_IS expression
   40           | expression . BOOL_IS NOT expression
   41           | expression . BOOL_LOWER BOOL_THAN expression
   42           | expression . BOOL_GREATER BOOL_THAN expression
   43           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   44           | expression . BOOL_DOWN BOOL_TO BOOL_GREATER BOOL_THAN expression
   74 expression_list: expression_list ',' expression .

    DIVIDING      shift, and go to state 67
    REMINDING     shift, and go to state 68
    ADDING        shift, and go to state 69
    CONSPIRING    shift, and go to state 70
    EMPOWERING    shift, and go to state 71
    BOOL_IS       shift, and go to state 72
    BOOL_UP       shift, and go to state 73
    BOOL_DOWN     shift, and go to state 74
    BOOL_LOWER    shift, and go to state 75
    BOOL_GREATER  shift, and go to state 76

    $default  reduce using rule 74 (expression_list)


State 162

   63 for_statement: FOR assign ',' SINCE expression ',' assign . '<' statements '>'

    '<'  shift, and go to state 167


State 163

   60 if_statement: ASK WHETHER '<' expression '>' THEN '<' . statements '>'
   61             | ASK WHETHER '<' expression '>' THEN '<' . statements '>' OTHERWISE '<' statements '>'

    SINCE          shift, and go to state 1
    NUMERIC        shift, and go to state 2
    VERBOSE        shift, and go to state 3
    ID             shift, and go to state 4
    NONE           shift, and go to state 5
    ONE            shift, and go to state 6
    NUMBER         shift, and go to state 7
    STRING         shift, and go to state 8
    BOOL_TRUE      shift, and go to state 9
    BOOL_FALSE     shift, and go to state 10
    QUOTE          shift, and go to state 11
    SUMMON         shift, and go to state 12
    FLOW_BREAK     shift, and go to state 13
    FLOW_CONTINUE  shift, and go to state 14
    EXEUNT         shift, and go to state 15
    DESCRIBE       shift, and go to state 16
    CRY            shift, and go to state 17
    FOR            shift, and go to state 18
    ASK            shift, and go to state 19
    ENTER          shift, and go to state 20
    PROCLAIM       shift, and go to state 21
    LET            shift, and go to state 22
    '<'            shift, and go to state 23

    statements          go to state 168
    statement           go to state 26
    complex_identifier  go to state 27
    assign              go to state 28
    declaration         go to state 29
    struct_decl         go to state 30
    expression          go to state 31
    output              go to state 32
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    if_statement        go to state 36
    while_statement     go to state 37
    for_statement       go to state 38
    flow_break          go to state 39
    function_decl       go to state 40
    function_call       go to state 41


State 164

   23 assign: LET THERE BE expression ADDED BOOL_TO complex_identifier .

    $default  reduce using rule 23 (assign)


State 165

   24 assign: LET THERE BE expression CONSPIRED FROM complex_identifier .

    $default  reduce using rule 24 (assign)


State 166

   70 function_decl_list: function_decl_list . ',' function_decl_item
   71 function_decl: DESCRIBE ID AS var_type ADVENTURE OF '<' function_decl_list . '>' '<' statements '>'

    '>'  shift, and go to state 169
    ','  shift, and go to state 138


State 167

   63 for_statement: FOR assign ',' SINCE expression ',' assign '<' . statements '>'

    SINCE          shift, and go to state 1
    NUMERIC        shift, and go to state 2
    VERBOSE        shift, and go to state 3
    ID             shift, and go to state 4
    NONE           shift, and go to state 5
    ONE            shift, and go to state 6
    NUMBER         shift, and go to state 7
    STRING         shift, and go to state 8
    BOOL_TRUE      shift, and go to state 9
    BOOL_FALSE     shift, and go to state 10
    QUOTE          shift, and go to state 11
    SUMMON         shift, and go to state 12
    FLOW_BREAK     shift, and go to state 13
    FLOW_CONTINUE  shift, and go to state 14
    EXEUNT         shift, and go to state 15
    DESCRIBE       shift, and go to state 16
    CRY            shift, and go to state 17
    FOR            shift, and go to state 18
    ASK            shift, and go to state 19
    ENTER          shift, and go to state 20
    PROCLAIM       shift, and go to state 21
    LET            shift, and go to state 22
    '<'            shift, and go to state 23

    statements          go to state 170
    statement           go to state 26
    complex_identifier  go to state 27
    assign              go to state 28
    declaration         go to state 29
    struct_decl         go to state 30
    expression          go to state 31
    output              go to state 32
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    if_statement        go to state 36
    while_statement     go to state 37
    for_statement       go to state 38
    flow_break          go to state 39
    function_decl       go to state 40
    function_call       go to state 41


State 168

    3 statements: statements . statement
   60 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements . '>'
   61             | ASK WHETHER '<' expression '>' THEN '<' statements . '>' OTHERWISE '<' statements '>'

    SINCE          shift, and go to state 1
    NUMERIC        shift, and go to state 2
    VERBOSE        shift, and go to state 3
    ID             shift, and go to state 4
    NONE           shift, and go to state 5
    ONE            shift, and go to state 6
    NUMBER         shift, and go to state 7
    STRING         shift, and go to state 8
    BOOL_TRUE      shift, and go to state 9
    BOOL_FALSE     shift, and go to state 10
    QUOTE          shift, and go to state 11
    SUMMON         shift, and go to state 12
    FLOW_BREAK     shift, and go to state 13
    FLOW_CONTINUE  shift, and go to state 14
    EXEUNT         shift, and go to state 15
    DESCRIBE       shift, and go to state 16
    CRY            shift, and go to state 17
    FOR            shift, and go to state 18
    ASK            shift, and go to state 19
    ENTER          shift, and go to state 20
    PROCLAIM       shift, and go to state 21
    LET            shift, and go to state 22
    '<'            shift, and go to state 23
    '>'            shift, and go to state 171

    statement           go to state 66
    complex_identifier  go to state 27
    assign              go to state 28
    declaration         go to state 29
    struct_decl         go to state 30
    expression          go to state 31
    output              go to state 32
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    if_statement        go to state 36
    while_statement     go to state 37
    for_statement       go to state 38
    flow_break          go to state 39
    function_decl       go to state 40
    function_call       go to state 41


State 169

   71 function_decl: DESCRIBE ID AS var_type ADVENTURE OF '<' function_decl_list '>' . '<' statements '>'

    '<'  shift, and go to state 172


State 170

    3 statements: statements . statement
   63 for_statement: FOR assign ',' SINCE expression ',' assign '<' statements . '>'

    SINCE          shift, and go to state 1
    NUMERIC        shift, and go to state 2
    VERBOSE        shift, and go to state 3
    ID             shift, and go to state 4
    NONE           shift, and go to state 5
    ONE            shift, and go to state 6
    NUMBER         shift, and go to state 7
    STRING         shift, and go to state 8
    BOOL_TRUE      shift, and go to state 9
    BOOL_FALSE     shift, and go to state 10
    QUOTE          shift, and go to state 11
    SUMMON         shift, and go to state 12
    FLOW_BREAK     shift, and go to state 13
    FLOW_CONTINUE  shift, and go to state 14
    EXEUNT         shift, and go to state 15
    DESCRIBE       shift, and go to state 16
    CRY            shift, and go to state 17
    FOR            shift, and go to state 18
    ASK            shift, and go to state 19
    ENTER          shift, and go to state 20
    PROCLAIM       shift, and go to state 21
    LET            shift, and go to state 22
    '<'            shift, and go to state 23
    '>'            shift, and go to state 173

    statement           go to state 66
    complex_identifier  go to state 27
    assign              go to state 28
    declaration         go to state 29
    struct_decl         go to state 30
    expression          go to state 31
    output              go to state 32
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    if_statement        go to state 36
    while_statement     go to state 37
    for_statement       go to state 38
    flow_break          go to state 39
    function_decl       go to state 40
    function_call       go to state 41


State 171

   60 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>' .
   61             | ASK WHETHER '<' expression '>' THEN '<' statements '>' . OTHERWISE '<' statements '>'

    OTHERWISE  shift, and go to state 174

    $default  reduce using rule 60 (if_statement)


State 172

   71 function_decl: DESCRIBE ID AS var_type ADVENTURE OF '<' function_decl_list '>' '<' . statements '>'

    SINCE          shift, and go to state 1
    NUMERIC        shift, and go to state 2
    VERBOSE        shift, and go to state 3
    ID             shift, and go to state 4
    NONE           shift, and go to state 5
    ONE            shift, and go to state 6
    NUMBER         shift, and go to state 7
    STRING         shift, and go to state 8
    BOOL_TRUE      shift, and go to state 9
    BOOL_FALSE     shift, and go to state 10
    QUOTE          shift, and go to state 11
    SUMMON         shift, and go to state 12
    FLOW_BREAK     shift, and go to state 13
    FLOW_CONTINUE  shift, and go to state 14
    EXEUNT         shift, and go to state 15
    DESCRIBE       shift, and go to state 16
    CRY            shift, and go to state 17
    FOR            shift, and go to state 18
    ASK            shift, and go to state 19
    ENTER          shift, and go to state 20
    PROCLAIM       shift, and go to state 21
    LET            shift, and go to state 22
    '<'            shift, and go to state 23

    statements          go to state 175
    statement           go to state 26
    complex_identifier  go to state 27
    assign              go to state 28
    declaration         go to state 29
    struct_decl         go to state 30
    expression          go to state 31
    output              go to state 32
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    if_statement        go to state 36
    while_statement     go to state 37
    for_statement       go to state 38
    flow_break          go to state 39
    function_decl       go to state 40
    function_call       go to state 41


State 173

   63 for_statement: FOR assign ',' SINCE expression ',' assign '<' statements '>' .

    $default  reduce using rule 63 (for_statement)


State 174

   61 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE . '<' statements '>'

    '<'  shift, and go to state 176


State 175

    3 statements: statements . statement
   71 function_decl: DESCRIBE ID AS var_type ADVENTURE OF '<' function_decl_list '>' '<' statements . '>'

    SINCE          shift, and go to state 1
    NUMERIC        shift, and go to state 2
    VERBOSE        shift, and go to state 3
    ID             shift, and go to state 4
    NONE           shift, and go to state 5
    ONE            shift, and go to state 6
    NUMBER         shift, and go to state 7
    STRING         shift, and go to state 8
    BOOL_TRUE      shift, and go to state 9
    BOOL_FALSE     shift, and go to state 10
    QUOTE          shift, and go to state 11
    SUMMON         shift, and go to state 12
    FLOW_BREAK     shift, and go to state 13
    FLOW_CONTINUE  shift, and go to state 14
    EXEUNT         shift, and go to state 15
    DESCRIBE       shift, and go to state 16
    CRY            shift, and go to state 17
    FOR            shift, and go to state 18
    ASK            shift, and go to state 19
    ENTER          shift, and go to state 20
    PROCLAIM       shift, and go to state 21
    LET            shift, and go to state 22
    '<'            shift, and go to state 23
    '>'            shift, and go to state 177

    statement           go to state 66
    complex_identifier  go to state 27
    assign              go to state 28
    declaration         go to state 29
    struct_decl         go to state 30
    expression          go to state 31
    output              go to state 32
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    if_statement        go to state 36
    while_statement     go to state 37
    for_statement       go to state 38
    flow_break          go to state 39
    function_decl       go to state 40
    function_call       go to state 41


State 176

   61 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE '<' . statements '>'

    SINCE          shift, and go to state 1
    NUMERIC        shift, and go to state 2
    VERBOSE        shift, and go to state 3
    ID             shift, and go to state 4
    NONE           shift, and go to state 5
    ONE            shift, and go to state 6
    NUMBER         shift, and go to state 7
    STRING         shift, and go to state 8
    BOOL_TRUE      shift, and go to state 9
    BOOL_FALSE     shift, and go to state 10
    QUOTE          shift, and go to state 11
    SUMMON         shift, and go to state 12
    FLOW_BREAK     shift, and go to state 13
    FLOW_CONTINUE  shift, and go to state 14
    EXEUNT         shift, and go to state 15
    DESCRIBE       shift, and go to state 16
    CRY            shift, and go to state 17
    FOR            shift, and go to state 18
    ASK            shift, and go to state 19
    ENTER          shift, and go to state 20
    PROCLAIM       shift, and go to state 21
    LET            shift, and go to state 22
    '<'            shift, and go to state 23

    statements          go to state 178
    statement           go to state 26
    complex_identifier  go to state 27
    assign              go to state 28
    declaration         go to state 29
    struct_decl         go to state 30
    expression          go to state 31
    output              go to state 32
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    if_statement        go to state 36
    while_statement     go to state 37
    for_statement       go to state 38
    flow_break          go to state 39
    function_decl       go to state 40
    function_call       go to state 41


State 177

   71 function_decl: DESCRIBE ID AS var_type ADVENTURE OF '<' function_decl_list '>' '<' statements '>' .

    $default  reduce using rule 71 (function_decl)


State 178

    3 statements: statements . statement
   61 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE '<' statements . '>'

    SINCE          shift, and go to state 1
    NUMERIC        shift, and go to state 2
    VERBOSE        shift, and go to state 3
    ID             shift, and go to state 4
    NONE           shift, and go to state 5
    ONE            shift, and go to state 6
    NUMBER         shift, and go to state 7
    STRING         shift, and go to state 8
    BOOL_TRUE      shift, and go to state 9
    BOOL_FALSE     shift, and go to state 10
    QUOTE          shift, and go to state 11
    SUMMON         shift, and go to state 12
    FLOW_BREAK     shift, and go to state 13
    FLOW_CONTINUE  shift, and go to state 14
    EXEUNT         shift, and go to state 15
    DESCRIBE       shift, and go to state 16
    CRY            shift, and go to state 17
    FOR            shift, and go to state 18
    ASK            shift, and go to state 19
    ENTER          shift, and go to state 20
    PROCLAIM       shift, and go to state 21
    LET            shift, and go to state 22
    '<'            shift, and go to state 23
    '>'            shift, and go to state 179

    statement           go to state 66
    complex_identifier  go to state 27
    assign              go to state 28
    declaration         go to state 29
    struct_decl         go to state 30
    expression          go to state 31
    output              go to state 32
    input               go to state 33
    verbose             go to state 34
    numeric             go to state 35
    if_statement        go to state 36
    while_statement     go to state 37
    for_statement       go to state 38
    flow_break          go to state 39
    function_decl       go to state 40
    function_call       go to state 41


State 179

   61 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE '<' statements '>' .

    $default  reduce using rule 61 (if_statement)
