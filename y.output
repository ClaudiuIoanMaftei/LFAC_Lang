Terminals unused in grammar

   TELLING
   FIXED
   LET
   BE
   THERE
   EQUALLING
   UPON
   ADDED
   ASCEND
   DESCEND
   CRY
   FOR
   IS
   LEFT
   RIGHT
   COMMA
   UP
   TO
   DOWN
   LOWER
   GREATER
   THAN
   EXEUNT
   SUMMONED
   NOT
   SINCE
   FROM
   ASK
   WHETHER
   THEN
   OTHERWISE
   CHANGES
   INCREASES
   DECREASES
   WHENEVER
   DOES
   NONE
   ONE
   TWICE
   UNTRUTH
   INDEED


Grammar

    0 $accept: progr $end

    1 progr: lines

    2 lines: line
    3      | lines line

    4 line: declaration
    5     | expression
    6     | output

    7 var_type: INT_TYPE
    8         | STR_TYPE
    9         | BOOLEAN_TYPE

   10 declaration: ENTER var_type ID

   11 expression: '<' expression '>'
   12           | expression ADDING expression
   13           | expression DIVIDED expression
   14           | expression REMINDING expression
   15           | expression CONSPIRING expression
   16           | expression EMPOWERING expression
   17           | NUMBER
   18           | STRING
   19           | BOOL_FALSE
   20           | BOOL_TRUE

   21 output: QUOTE expression
   22       | QUOTE ID


Terminals, with rules where they appear

$end (0) 0
'<' (60) 11
'>' (62) 11
error (256)
ID (258) 10 22
TELLING (259)
FIXED (260)
INT_TYPE (261) 7
STR_TYPE (262) 8
BOOLEAN_TYPE (263) 9
NUMBER (264) 17
STRING (265) 18
BOOL_TRUE (266) 20
BOOL_FALSE (267) 19
QUOTE (268) 21 22
ENTER (269) 10
LET (270)
BE (271)
THERE (272)
EQUALLING (273)
UPON (274)
ADDED (275)
ASCEND (276)
DESCEND (277)
CRY (278)
FOR (279)
DIVIDED (280) 13
REMINDING (281) 14
ADDING (282) 12
CONSPIRING (283) 15
EMPOWERING (284) 16
IS (285)
LEFT (286)
RIGHT (287)
COMMA (288)
UP (289)
TO (290)
DOWN (291)
LOWER (292)
GREATER (293)
THAN (294)
EXEUNT (295)
SUMMONED (296)
NOT (297)
SINCE (298)
FROM (299)
ASK (300)
WHETHER (301)
THEN (302)
OTHERWISE (303)
CHANGES (304)
INCREASES (305)
DECREASES (306)
WHENEVER (307)
DOES (308)
NONE (309)
ONE (310)
TWICE (311)
UNTRUTH (312)
INDEED (313)


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
progr (62)
    on left: 1, on right: 0
lines (63)
    on left: 2 3, on right: 1 3
line (64)
    on left: 4 5 6, on right: 2 3
var_type (65)
    on left: 7 8 9, on right: 10
declaration (66)
    on left: 10, on right: 4
expression (67)
    on left: 11 12 13 14 15 16 17 18 19 20, on right: 5 11 12 13 14
    15 16 21
output (68)
    on left: 21 22, on right: 6


State 0

    0 $accept: . progr $end

    NUMBER      shift, and go to state 1
    STRING      shift, and go to state 2
    BOOL_TRUE   shift, and go to state 3
    BOOL_FALSE  shift, and go to state 4
    QUOTE       shift, and go to state 5
    ENTER       shift, and go to state 6
    '<'         shift, and go to state 7

    progr        go to state 8
    lines        go to state 9
    line         go to state 10
    declaration  go to state 11
    expression   go to state 12
    output       go to state 13


State 1

   17 expression: NUMBER .

    $default  reduce using rule 17 (expression)


State 2

   18 expression: STRING .

    $default  reduce using rule 18 (expression)


State 3

   20 expression: BOOL_TRUE .

    $default  reduce using rule 20 (expression)


State 4

   19 expression: BOOL_FALSE .

    $default  reduce using rule 19 (expression)


State 5

   21 output: QUOTE . expression
   22       | QUOTE . ID

    ID          shift, and go to state 14
    NUMBER      shift, and go to state 1
    STRING      shift, and go to state 2
    BOOL_TRUE   shift, and go to state 3
    BOOL_FALSE  shift, and go to state 4
    '<'         shift, and go to state 7

    expression  go to state 15


State 6

   10 declaration: ENTER . var_type ID

    INT_TYPE      shift, and go to state 16
    STR_TYPE      shift, and go to state 17
    BOOLEAN_TYPE  shift, and go to state 18

    var_type  go to state 19


State 7

   11 expression: '<' . expression '>'

    NUMBER      shift, and go to state 1
    STRING      shift, and go to state 2
    BOOL_TRUE   shift, and go to state 3
    BOOL_FALSE  shift, and go to state 4
    '<'         shift, and go to state 7

    expression  go to state 20


State 8

    0 $accept: progr . $end

    $end  shift, and go to state 21


State 9

    1 progr: lines .
    3 lines: lines . line

    NUMBER      shift, and go to state 1
    STRING      shift, and go to state 2
    BOOL_TRUE   shift, and go to state 3
    BOOL_FALSE  shift, and go to state 4
    QUOTE       shift, and go to state 5
    ENTER       shift, and go to state 6
    '<'         shift, and go to state 7

    $default  reduce using rule 1 (progr)

    line         go to state 22
    declaration  go to state 11
    expression   go to state 12
    output       go to state 13


State 10

    2 lines: line .

    $default  reduce using rule 2 (lines)


State 11

    4 line: declaration .

    $default  reduce using rule 4 (line)


State 12

    5 line: expression .
   12 expression: expression . ADDING expression
   13           | expression . DIVIDED expression
   14           | expression . REMINDING expression
   15           | expression . CONSPIRING expression
   16           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 23
    REMINDING   shift, and go to state 24
    ADDING      shift, and go to state 25
    CONSPIRING  shift, and go to state 26
    EMPOWERING  shift, and go to state 27

    $default  reduce using rule 5 (line)


State 13

    6 line: output .

    $default  reduce using rule 6 (line)


State 14

   22 output: QUOTE ID .

    $default  reduce using rule 22 (output)


State 15

   12 expression: expression . ADDING expression
   13           | expression . DIVIDED expression
   14           | expression . REMINDING expression
   15           | expression . CONSPIRING expression
   16           | expression . EMPOWERING expression
   21 output: QUOTE expression .

    DIVIDED     shift, and go to state 23
    REMINDING   shift, and go to state 24
    ADDING      shift, and go to state 25
    CONSPIRING  shift, and go to state 26
    EMPOWERING  shift, and go to state 27

    $default  reduce using rule 21 (output)


State 16

    7 var_type: INT_TYPE .

    $default  reduce using rule 7 (var_type)


State 17

    8 var_type: STR_TYPE .

    $default  reduce using rule 8 (var_type)


State 18

    9 var_type: BOOLEAN_TYPE .

    $default  reduce using rule 9 (var_type)


State 19

   10 declaration: ENTER var_type . ID

    ID  shift, and go to state 28


State 20

   11 expression: '<' expression . '>'
   12           | expression . ADDING expression
   13           | expression . DIVIDED expression
   14           | expression . REMINDING expression
   15           | expression . CONSPIRING expression
   16           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 23
    REMINDING   shift, and go to state 24
    ADDING      shift, and go to state 25
    CONSPIRING  shift, and go to state 26
    EMPOWERING  shift, and go to state 27
    '>'         shift, and go to state 29


State 21

    0 $accept: progr $end .

    $default  accept


State 22

    3 lines: lines line .

    $default  reduce using rule 3 (lines)


State 23

   13 expression: expression DIVIDED . expression

    NUMBER      shift, and go to state 1
    STRING      shift, and go to state 2
    BOOL_TRUE   shift, and go to state 3
    BOOL_FALSE  shift, and go to state 4
    '<'         shift, and go to state 7

    expression  go to state 30


State 24

   14 expression: expression REMINDING . expression

    NUMBER      shift, and go to state 1
    STRING      shift, and go to state 2
    BOOL_TRUE   shift, and go to state 3
    BOOL_FALSE  shift, and go to state 4
    '<'         shift, and go to state 7

    expression  go to state 31


State 25

   12 expression: expression ADDING . expression

    NUMBER      shift, and go to state 1
    STRING      shift, and go to state 2
    BOOL_TRUE   shift, and go to state 3
    BOOL_FALSE  shift, and go to state 4
    '<'         shift, and go to state 7

    expression  go to state 32


State 26

   15 expression: expression CONSPIRING . expression

    NUMBER      shift, and go to state 1
    STRING      shift, and go to state 2
    BOOL_TRUE   shift, and go to state 3
    BOOL_FALSE  shift, and go to state 4
    '<'         shift, and go to state 7

    expression  go to state 33


State 27

   16 expression: expression EMPOWERING . expression

    NUMBER      shift, and go to state 1
    STRING      shift, and go to state 2
    BOOL_TRUE   shift, and go to state 3
    BOOL_FALSE  shift, and go to state 4
    '<'         shift, and go to state 7

    expression  go to state 34


State 28

   10 declaration: ENTER var_type ID .

    $default  reduce using rule 10 (declaration)


State 29

   11 expression: '<' expression '>' .

    $default  reduce using rule 11 (expression)


State 30

   12 expression: expression . ADDING expression
   13           | expression . DIVIDED expression
   13           | expression DIVIDED expression .
   14           | expression . REMINDING expression
   15           | expression . CONSPIRING expression
   16           | expression . EMPOWERING expression

    $default  reduce using rule 13 (expression)


State 31

   12 expression: expression . ADDING expression
   13           | expression . DIVIDED expression
   14           | expression . REMINDING expression
   14           | expression REMINDING expression .
   15           | expression . CONSPIRING expression
   16           | expression . EMPOWERING expression

    $default  reduce using rule 14 (expression)


State 32

   12 expression: expression . ADDING expression
   12           | expression ADDING expression .
   13           | expression . DIVIDED expression
   14           | expression . REMINDING expression
   15           | expression . CONSPIRING expression
   16           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 23
    REMINDING   shift, and go to state 24
    EMPOWERING  shift, and go to state 27

    $default  reduce using rule 12 (expression)


State 33

   12 expression: expression . ADDING expression
   13           | expression . DIVIDED expression
   14           | expression . REMINDING expression
   15           | expression . CONSPIRING expression
   15           | expression CONSPIRING expression .
   16           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 23
    REMINDING   shift, and go to state 24
    EMPOWERING  shift, and go to state 27

    $default  reduce using rule 15 (expression)


State 34

   12 expression: expression . ADDING expression
   13           | expression . DIVIDED expression
   14           | expression . REMINDING expression
   15           | expression . CONSPIRING expression
   16           | expression . EMPOWERING expression
   16           | expression EMPOWERING expression .

    $default  reduce using rule 16 (expression)
