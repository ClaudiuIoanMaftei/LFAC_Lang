Terminals unused in grammar

   THERE
   EQUALLING
   UPON
   ADDED
   ASCEND
   DESCEND
   CRY
   FOR
   EXEUNT
   SINCE
   CHANGES
   INCREASES
   DECREASES
   WHENEVER
   DOES
   NONE
   ONE
   TWICE
   BOOL_DOWN


Grammar

    0 $accept: programm $end

    1 programm: statements

    2 statements: statement
    3           | statements statement

    4 statement: expression
    5          | if_statement
    6          | declaration
    7          | struct_decl
    8          | assign

    9 complex_identifier: ID
   10                   | ID FROM complex_identifier

   11 var_type: INT_TYPE
   12         | STR_TYPE
   13         | BOOLEAN_TYPE
   14         | ID

   15 assign: LET complex_identifier expression

   16 declaration: ENTER var_type ID
   17            | ENTER FIXED var_type ID
   18            | ENTER var_type ID TELLING expression
   19            | ENTER FIXED var_type ID TELLING expression

   20 decl_list: declaration
   21          | decl_list ',' declaration

   22 struct_decl: PROCLAIM ID '<' decl_list '>'

   23 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>'
   24             | ASK WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE '<' statements '>'

   25 expression: '<' expression '>'
   26           | expression ADDING expression
   27           | expression CONSPIRING expression
   28           | expression DIVIDED expression
   29           | expression REMINDING expression
   30           | expression EMPOWERING expression
   31           | expression BOOL_IS expression
   32           | expression BOOL_IS NOT expression
   33           | expression BOOL_LOWER BOOL_THAN expression
   34           | expression BOOL_GREATER BOOL_THAN expression
   35           | expression BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   36           | expression BOOL_UP BOOL_TO BOOL_GREATER BOOL_THAN expression
   37           | complex_identifier
   38           | NUMBER
   39           | STRING
   40           | BOOL_FALSE
   41           | BOOL_TRUE
   42           | predef_func

   43 predef_func: output
   44            | input

   45 output: QUOTE '<' expression '>'

   46 input: SUMMON '<' complex_identifier '>'


Terminals, with rules where they appear

$end (0) 0
',' (44) 21
'<' (60) 22 23 24 25 45 46
'>' (62) 22 23 24 25 45 46
error (256)
ENTER (258) 16 17 18 19
PROCLAIM (259) 22
LET (260) 15
THERE (261)
EQUALLING (262)
UPON (263)
ADDED (264)
ASCEND (265)
DESCEND (266)
CRY (267)
FOR (268)
DIVIDED (269) 28
REMINDING (270) 29
ADDING (271) 26
CONSPIRING (272) 27
EMPOWERING (273) 30
EXEUNT (274)
NOT (275) 32
SINCE (276)
FROM (277) 10
ASK (278) 23 24
WHETHER (279) 23 24
THEN (280) 23 24
OTHERWISE (281) 24
CHANGES (282)
INCREASES (283)
DECREASES (284)
WHENEVER (285)
DOES (286)
NONE (287)
ONE (288)
TWICE (289)
ID (290) 9 10 14 16 17 18 19 22
TELLING (291) 18 19
FIXED (292) 17 19
INT_TYPE (293) 11
STR_TYPE (294) 12
BOOLEAN_TYPE (295) 13
NUMBER (296) 38
STRING (297) 39
BOOL_TRUE (298) 41
BOOL_FALSE (299) 40
QUOTE (300) 45
SUMMON (301) 46
BOOL_IS (302) 31 32
BOOL_UP (303) 35 36
BOOL_TO (304) 35 36
BOOL_DOWN (305)
BOOL_LOWER (306) 33 35
BOOL_GREATER (307) 34 36
BOOL_THAN (308) 33 34 35 36


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
programm (58)
    on left: 1, on right: 0
statements (59)
    on left: 2 3, on right: 1 3 23 24
statement (60)
    on left: 4 5 6 7 8, on right: 2 3
complex_identifier (61)
    on left: 9 10, on right: 10 15 37 46
var_type (62)
    on left: 11 12 13 14, on right: 16 17 18 19
assign (63)
    on left: 15, on right: 8
declaration (64)
    on left: 16 17 18 19, on right: 6 20 21
decl_list (65)
    on left: 20 21, on right: 21 22
struct_decl (66)
    on left: 22, on right: 7
if_statement (67)
    on left: 23 24, on right: 5
expression (68)
    on left: 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42,
    on right: 4 15 18 19 23 24 25 26 27 28 29 30 31 32 33 34 35 36
    45
predef_func (69)
    on left: 43 44, on right: 42
output (70)
    on left: 45, on right: 43
input (71)
    on left: 46, on right: 44


State 0

    0 $accept: . programm $end

    ENTER       shift, and go to state 1
    PROCLAIM    shift, and go to state 2
    LET         shift, and go to state 3
    ASK         shift, and go to state 4
    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12

    programm            go to state 13
    statements          go to state 14
    statement           go to state 15
    complex_identifier  go to state 16
    assign              go to state 17
    declaration         go to state 18
    struct_decl         go to state 19
    if_statement        go to state 20
    expression          go to state 21
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 1

   16 declaration: ENTER . var_type ID
   17            | ENTER . FIXED var_type ID
   18            | ENTER . var_type ID TELLING expression
   19            | ENTER . FIXED var_type ID TELLING expression

    ID            shift, and go to state 25
    FIXED         shift, and go to state 26
    INT_TYPE      shift, and go to state 27
    STR_TYPE      shift, and go to state 28
    BOOLEAN_TYPE  shift, and go to state 29

    var_type  go to state 30


State 2

   22 struct_decl: PROCLAIM . ID '<' decl_list '>'

    ID  shift, and go to state 31


State 3

   15 assign: LET . complex_identifier expression

    ID  shift, and go to state 5

    complex_identifier  go to state 32


State 4

   23 if_statement: ASK . WHETHER '<' expression '>' THEN '<' statements '>'
   24             | ASK . WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE '<' statements '>'

    WHETHER  shift, and go to state 33


State 5

    9 complex_identifier: ID .
   10                   | ID . FROM complex_identifier

    FROM  shift, and go to state 34

    $default  reduce using rule 9 (complex_identifier)


State 6

   38 expression: NUMBER .

    $default  reduce using rule 38 (expression)


State 7

   39 expression: STRING .

    $default  reduce using rule 39 (expression)


State 8

   41 expression: BOOL_TRUE .

    $default  reduce using rule 41 (expression)


State 9

   40 expression: BOOL_FALSE .

    $default  reduce using rule 40 (expression)


State 10

   45 output: QUOTE . '<' expression '>'

    '<'  shift, and go to state 35


State 11

   46 input: SUMMON . '<' complex_identifier '>'

    '<'  shift, and go to state 36


State 12

   25 expression: '<' . expression '>'

    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12

    complex_identifier  go to state 16
    expression          go to state 37
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 13

    0 $accept: programm . $end

    $end  shift, and go to state 38


State 14

    1 programm: statements .
    3 statements: statements . statement

    ENTER       shift, and go to state 1
    PROCLAIM    shift, and go to state 2
    LET         shift, and go to state 3
    ASK         shift, and go to state 4
    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12

    $default  reduce using rule 1 (programm)

    statement           go to state 39
    complex_identifier  go to state 16
    assign              go to state 17
    declaration         go to state 18
    struct_decl         go to state 19
    if_statement        go to state 20
    expression          go to state 21
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 15

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 16

   37 expression: complex_identifier .

    $default  reduce using rule 37 (expression)


State 17

    8 statement: assign .

    $default  reduce using rule 8 (statement)


State 18

    6 statement: declaration .

    $default  reduce using rule 6 (statement)


State 19

    7 statement: struct_decl .

    $default  reduce using rule 7 (statement)


State 20

    5 statement: if_statement .

    $default  reduce using rule 5 (statement)


State 21

    4 statement: expression .
   26 expression: expression . ADDING expression
   27           | expression . CONSPIRING expression
   28           | expression . DIVIDED expression
   29           | expression . REMINDING expression
   30           | expression . EMPOWERING expression
   31           | expression . BOOL_IS expression
   32           | expression . BOOL_IS NOT expression
   33           | expression . BOOL_LOWER BOOL_THAN expression
   34           | expression . BOOL_GREATER BOOL_THAN expression
   35           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   36           | expression . BOOL_UP BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDED       shift, and go to state 40
    REMINDING     shift, and go to state 41
    ADDING        shift, and go to state 42
    CONSPIRING    shift, and go to state 43
    EMPOWERING    shift, and go to state 44
    BOOL_IS       shift, and go to state 45
    BOOL_UP       shift, and go to state 46
    BOOL_LOWER    shift, and go to state 47
    BOOL_GREATER  shift, and go to state 48

    $default  reduce using rule 4 (statement)


State 22

   42 expression: predef_func .

    $default  reduce using rule 42 (expression)


State 23

   43 predef_func: output .

    $default  reduce using rule 43 (predef_func)


State 24

   44 predef_func: input .

    $default  reduce using rule 44 (predef_func)


State 25

   14 var_type: ID .

    $default  reduce using rule 14 (var_type)


State 26

   17 declaration: ENTER FIXED . var_type ID
   19            | ENTER FIXED . var_type ID TELLING expression

    ID            shift, and go to state 25
    INT_TYPE      shift, and go to state 27
    STR_TYPE      shift, and go to state 28
    BOOLEAN_TYPE  shift, and go to state 29

    var_type  go to state 49


State 27

   11 var_type: INT_TYPE .

    $default  reduce using rule 11 (var_type)


State 28

   12 var_type: STR_TYPE .

    $default  reduce using rule 12 (var_type)


State 29

   13 var_type: BOOLEAN_TYPE .

    $default  reduce using rule 13 (var_type)


State 30

   16 declaration: ENTER var_type . ID
   18            | ENTER var_type . ID TELLING expression

    ID  shift, and go to state 50


State 31

   22 struct_decl: PROCLAIM ID . '<' decl_list '>'

    '<'  shift, and go to state 51


State 32

   15 assign: LET complex_identifier . expression

    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12

    complex_identifier  go to state 16
    expression          go to state 52
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 33

   23 if_statement: ASK WHETHER . '<' expression '>' THEN '<' statements '>'
   24             | ASK WHETHER . '<' expression '>' THEN '<' statements '>' OTHERWISE '<' statements '>'

    '<'  shift, and go to state 53


State 34

   10 complex_identifier: ID FROM . complex_identifier

    ID  shift, and go to state 5

    complex_identifier  go to state 54


State 35

   45 output: QUOTE '<' . expression '>'

    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12

    complex_identifier  go to state 16
    expression          go to state 55
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 36

   46 input: SUMMON '<' . complex_identifier '>'

    ID  shift, and go to state 5

    complex_identifier  go to state 56


State 37

   25 expression: '<' expression . '>'
   26           | expression . ADDING expression
   27           | expression . CONSPIRING expression
   28           | expression . DIVIDED expression
   29           | expression . REMINDING expression
   30           | expression . EMPOWERING expression
   31           | expression . BOOL_IS expression
   32           | expression . BOOL_IS NOT expression
   33           | expression . BOOL_LOWER BOOL_THAN expression
   34           | expression . BOOL_GREATER BOOL_THAN expression
   35           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   36           | expression . BOOL_UP BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDED       shift, and go to state 40
    REMINDING     shift, and go to state 41
    ADDING        shift, and go to state 42
    CONSPIRING    shift, and go to state 43
    EMPOWERING    shift, and go to state 44
    BOOL_IS       shift, and go to state 45
    BOOL_UP       shift, and go to state 46
    BOOL_LOWER    shift, and go to state 47
    BOOL_GREATER  shift, and go to state 48
    '>'           shift, and go to state 57


State 38

    0 $accept: programm $end .

    $default  accept


State 39

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 40

   28 expression: expression DIVIDED . expression

    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12

    complex_identifier  go to state 16
    expression          go to state 58
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 41

   29 expression: expression REMINDING . expression

    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12

    complex_identifier  go to state 16
    expression          go to state 59
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 42

   26 expression: expression ADDING . expression

    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12

    complex_identifier  go to state 16
    expression          go to state 60
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 43

   27 expression: expression CONSPIRING . expression

    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12

    complex_identifier  go to state 16
    expression          go to state 61
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 44

   30 expression: expression EMPOWERING . expression

    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12

    complex_identifier  go to state 16
    expression          go to state 62
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 45

   31 expression: expression BOOL_IS . expression
   32           | expression BOOL_IS . NOT expression

    NOT         shift, and go to state 63
    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12

    complex_identifier  go to state 16
    expression          go to state 64
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 46

   35 expression: expression BOOL_UP . BOOL_TO BOOL_LOWER BOOL_THAN expression
   36           | expression BOOL_UP . BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_TO  shift, and go to state 65


State 47

   33 expression: expression BOOL_LOWER . BOOL_THAN expression

    BOOL_THAN  shift, and go to state 66


State 48

   34 expression: expression BOOL_GREATER . BOOL_THAN expression

    BOOL_THAN  shift, and go to state 67


State 49

   17 declaration: ENTER FIXED var_type . ID
   19            | ENTER FIXED var_type . ID TELLING expression

    ID  shift, and go to state 68


State 50

   16 declaration: ENTER var_type ID .
   18            | ENTER var_type ID . TELLING expression

    TELLING  shift, and go to state 69

    $default  reduce using rule 16 (declaration)


State 51

   22 struct_decl: PROCLAIM ID '<' . decl_list '>'

    ENTER  shift, and go to state 1

    declaration  go to state 70
    decl_list    go to state 71


State 52

   15 assign: LET complex_identifier expression .
   26 expression: expression . ADDING expression
   27           | expression . CONSPIRING expression
   28           | expression . DIVIDED expression
   29           | expression . REMINDING expression
   30           | expression . EMPOWERING expression
   31           | expression . BOOL_IS expression
   32           | expression . BOOL_IS NOT expression
   33           | expression . BOOL_LOWER BOOL_THAN expression
   34           | expression . BOOL_GREATER BOOL_THAN expression
   35           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   36           | expression . BOOL_UP BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDED       shift, and go to state 40
    REMINDING     shift, and go to state 41
    ADDING        shift, and go to state 42
    CONSPIRING    shift, and go to state 43
    EMPOWERING    shift, and go to state 44
    BOOL_IS       shift, and go to state 45
    BOOL_UP       shift, and go to state 46
    BOOL_LOWER    shift, and go to state 47
    BOOL_GREATER  shift, and go to state 48

    $default  reduce using rule 15 (assign)


State 53

   23 if_statement: ASK WHETHER '<' . expression '>' THEN '<' statements '>'
   24             | ASK WHETHER '<' . expression '>' THEN '<' statements '>' OTHERWISE '<' statements '>'

    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12

    complex_identifier  go to state 16
    expression          go to state 72
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 54

   10 complex_identifier: ID FROM complex_identifier .

    $default  reduce using rule 10 (complex_identifier)


State 55

   26 expression: expression . ADDING expression
   27           | expression . CONSPIRING expression
   28           | expression . DIVIDED expression
   29           | expression . REMINDING expression
   30           | expression . EMPOWERING expression
   31           | expression . BOOL_IS expression
   32           | expression . BOOL_IS NOT expression
   33           | expression . BOOL_LOWER BOOL_THAN expression
   34           | expression . BOOL_GREATER BOOL_THAN expression
   35           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   36           | expression . BOOL_UP BOOL_TO BOOL_GREATER BOOL_THAN expression
   45 output: QUOTE '<' expression . '>'

    DIVIDED       shift, and go to state 40
    REMINDING     shift, and go to state 41
    ADDING        shift, and go to state 42
    CONSPIRING    shift, and go to state 43
    EMPOWERING    shift, and go to state 44
    BOOL_IS       shift, and go to state 45
    BOOL_UP       shift, and go to state 46
    BOOL_LOWER    shift, and go to state 47
    BOOL_GREATER  shift, and go to state 48
    '>'           shift, and go to state 73


State 56

   46 input: SUMMON '<' complex_identifier . '>'

    '>'  shift, and go to state 74


State 57

   25 expression: '<' expression '>' .

    $default  reduce using rule 25 (expression)


State 58

   26 expression: expression . ADDING expression
   27           | expression . CONSPIRING expression
   28           | expression . DIVIDED expression
   28           | expression DIVIDED expression .
   29           | expression . REMINDING expression
   30           | expression . EMPOWERING expression
   31           | expression . BOOL_IS expression
   32           | expression . BOOL_IS NOT expression
   33           | expression . BOOL_LOWER BOOL_THAN expression
   34           | expression . BOOL_GREATER BOOL_THAN expression
   35           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   36           | expression . BOOL_UP BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       shift, and go to state 45
    BOOL_UP       shift, and go to state 46
    BOOL_LOWER    shift, and go to state 47
    BOOL_GREATER  shift, and go to state 48

    $default  reduce using rule 28 (expression)


State 59

   26 expression: expression . ADDING expression
   27           | expression . CONSPIRING expression
   28           | expression . DIVIDED expression
   29           | expression . REMINDING expression
   29           | expression REMINDING expression .
   30           | expression . EMPOWERING expression
   31           | expression . BOOL_IS expression
   32           | expression . BOOL_IS NOT expression
   33           | expression . BOOL_LOWER BOOL_THAN expression
   34           | expression . BOOL_GREATER BOOL_THAN expression
   35           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   36           | expression . BOOL_UP BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       shift, and go to state 45
    BOOL_UP       shift, and go to state 46
    BOOL_LOWER    shift, and go to state 47
    BOOL_GREATER  shift, and go to state 48

    $default  reduce using rule 29 (expression)


State 60

   26 expression: expression . ADDING expression
   26           | expression ADDING expression .
   27           | expression . CONSPIRING expression
   28           | expression . DIVIDED expression
   29           | expression . REMINDING expression
   30           | expression . EMPOWERING expression
   31           | expression . BOOL_IS expression
   32           | expression . BOOL_IS NOT expression
   33           | expression . BOOL_LOWER BOOL_THAN expression
   34           | expression . BOOL_GREATER BOOL_THAN expression
   35           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   36           | expression . BOOL_UP BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDED       shift, and go to state 40
    REMINDING     shift, and go to state 41
    EMPOWERING    shift, and go to state 44
    BOOL_IS       shift, and go to state 45
    BOOL_UP       shift, and go to state 46
    BOOL_LOWER    shift, and go to state 47
    BOOL_GREATER  shift, and go to state 48

    $default  reduce using rule 26 (expression)


State 61

   26 expression: expression . ADDING expression
   27           | expression . CONSPIRING expression
   27           | expression CONSPIRING expression .
   28           | expression . DIVIDED expression
   29           | expression . REMINDING expression
   30           | expression . EMPOWERING expression
   31           | expression . BOOL_IS expression
   32           | expression . BOOL_IS NOT expression
   33           | expression . BOOL_LOWER BOOL_THAN expression
   34           | expression . BOOL_GREATER BOOL_THAN expression
   35           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   36           | expression . BOOL_UP BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDED       shift, and go to state 40
    REMINDING     shift, and go to state 41
    EMPOWERING    shift, and go to state 44
    BOOL_IS       shift, and go to state 45
    BOOL_UP       shift, and go to state 46
    BOOL_LOWER    shift, and go to state 47
    BOOL_GREATER  shift, and go to state 48

    $default  reduce using rule 27 (expression)


State 62

   26 expression: expression . ADDING expression
   27           | expression . CONSPIRING expression
   28           | expression . DIVIDED expression
   29           | expression . REMINDING expression
   30           | expression . EMPOWERING expression
   30           | expression EMPOWERING expression .
   31           | expression . BOOL_IS expression
   32           | expression . BOOL_IS NOT expression
   33           | expression . BOOL_LOWER BOOL_THAN expression
   34           | expression . BOOL_GREATER BOOL_THAN expression
   35           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   36           | expression . BOOL_UP BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       shift, and go to state 45
    BOOL_UP       shift, and go to state 46
    BOOL_LOWER    shift, and go to state 47
    BOOL_GREATER  shift, and go to state 48

    $default  reduce using rule 30 (expression)


State 63

   32 expression: expression BOOL_IS NOT . expression

    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12

    complex_identifier  go to state 16
    expression          go to state 75
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 64

   26 expression: expression . ADDING expression
   27           | expression . CONSPIRING expression
   28           | expression . DIVIDED expression
   29           | expression . REMINDING expression
   30           | expression . EMPOWERING expression
   31           | expression . BOOL_IS expression
   31           | expression BOOL_IS expression .
   32           | expression . BOOL_IS NOT expression
   33           | expression . BOOL_LOWER BOOL_THAN expression
   34           | expression . BOOL_GREATER BOOL_THAN expression
   35           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   36           | expression . BOOL_UP BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 31 (expression)


State 65

   35 expression: expression BOOL_UP BOOL_TO . BOOL_LOWER BOOL_THAN expression
   36           | expression BOOL_UP BOOL_TO . BOOL_GREATER BOOL_THAN expression

    BOOL_LOWER    shift, and go to state 76
    BOOL_GREATER  shift, and go to state 77


State 66

   33 expression: expression BOOL_LOWER BOOL_THAN . expression

    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12

    complex_identifier  go to state 16
    expression          go to state 78
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 67

   34 expression: expression BOOL_GREATER BOOL_THAN . expression

    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12

    complex_identifier  go to state 16
    expression          go to state 79
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 68

   17 declaration: ENTER FIXED var_type ID .
   19            | ENTER FIXED var_type ID . TELLING expression

    TELLING  shift, and go to state 80

    $default  reduce using rule 17 (declaration)


State 69

   18 declaration: ENTER var_type ID TELLING . expression

    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12

    complex_identifier  go to state 16
    expression          go to state 81
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 70

   20 decl_list: declaration .

    $default  reduce using rule 20 (decl_list)


State 71

   21 decl_list: decl_list . ',' declaration
   22 struct_decl: PROCLAIM ID '<' decl_list . '>'

    ','  shift, and go to state 82
    '>'  shift, and go to state 83


State 72

   23 if_statement: ASK WHETHER '<' expression . '>' THEN '<' statements '>'
   24             | ASK WHETHER '<' expression . '>' THEN '<' statements '>' OTHERWISE '<' statements '>'
   26 expression: expression . ADDING expression
   27           | expression . CONSPIRING expression
   28           | expression . DIVIDED expression
   29           | expression . REMINDING expression
   30           | expression . EMPOWERING expression
   31           | expression . BOOL_IS expression
   32           | expression . BOOL_IS NOT expression
   33           | expression . BOOL_LOWER BOOL_THAN expression
   34           | expression . BOOL_GREATER BOOL_THAN expression
   35           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   36           | expression . BOOL_UP BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDED       shift, and go to state 40
    REMINDING     shift, and go to state 41
    ADDING        shift, and go to state 42
    CONSPIRING    shift, and go to state 43
    EMPOWERING    shift, and go to state 44
    BOOL_IS       shift, and go to state 45
    BOOL_UP       shift, and go to state 46
    BOOL_LOWER    shift, and go to state 47
    BOOL_GREATER  shift, and go to state 48
    '>'           shift, and go to state 84


State 73

   45 output: QUOTE '<' expression '>' .

    $default  reduce using rule 45 (output)


State 74

   46 input: SUMMON '<' complex_identifier '>' .

    $default  reduce using rule 46 (input)


State 75

   26 expression: expression . ADDING expression
   27           | expression . CONSPIRING expression
   28           | expression . DIVIDED expression
   29           | expression . REMINDING expression
   30           | expression . EMPOWERING expression
   31           | expression . BOOL_IS expression
   32           | expression . BOOL_IS NOT expression
   32           | expression BOOL_IS NOT expression .
   33           | expression . BOOL_LOWER BOOL_THAN expression
   34           | expression . BOOL_GREATER BOOL_THAN expression
   35           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   36           | expression . BOOL_UP BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 32 (expression)


State 76

   35 expression: expression BOOL_UP BOOL_TO BOOL_LOWER . BOOL_THAN expression

    BOOL_THAN  shift, and go to state 85


State 77

   36 expression: expression BOOL_UP BOOL_TO BOOL_GREATER . BOOL_THAN expression

    BOOL_THAN  shift, and go to state 86


State 78

   26 expression: expression . ADDING expression
   27           | expression . CONSPIRING expression
   28           | expression . DIVIDED expression
   29           | expression . REMINDING expression
   30           | expression . EMPOWERING expression
   31           | expression . BOOL_IS expression
   32           | expression . BOOL_IS NOT expression
   33           | expression . BOOL_LOWER BOOL_THAN expression
   33           | expression BOOL_LOWER BOOL_THAN expression .
   34           | expression . BOOL_GREATER BOOL_THAN expression
   35           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   36           | expression . BOOL_UP BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 33 (expression)


State 79

   26 expression: expression . ADDING expression
   27           | expression . CONSPIRING expression
   28           | expression . DIVIDED expression
   29           | expression . REMINDING expression
   30           | expression . EMPOWERING expression
   31           | expression . BOOL_IS expression
   32           | expression . BOOL_IS NOT expression
   33           | expression . BOOL_LOWER BOOL_THAN expression
   34           | expression . BOOL_GREATER BOOL_THAN expression
   34           | expression BOOL_GREATER BOOL_THAN expression .
   35           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   36           | expression . BOOL_UP BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 34 (expression)


State 80

   19 declaration: ENTER FIXED var_type ID TELLING . expression

    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12

    complex_identifier  go to state 16
    expression          go to state 87
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 81

   18 declaration: ENTER var_type ID TELLING expression .
   26 expression: expression . ADDING expression
   27           | expression . CONSPIRING expression
   28           | expression . DIVIDED expression
   29           | expression . REMINDING expression
   30           | expression . EMPOWERING expression
   31           | expression . BOOL_IS expression
   32           | expression . BOOL_IS NOT expression
   33           | expression . BOOL_LOWER BOOL_THAN expression
   34           | expression . BOOL_GREATER BOOL_THAN expression
   35           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   36           | expression . BOOL_UP BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDED       shift, and go to state 40
    REMINDING     shift, and go to state 41
    ADDING        shift, and go to state 42
    CONSPIRING    shift, and go to state 43
    EMPOWERING    shift, and go to state 44
    BOOL_IS       shift, and go to state 45
    BOOL_UP       shift, and go to state 46
    BOOL_LOWER    shift, and go to state 47
    BOOL_GREATER  shift, and go to state 48

    $default  reduce using rule 18 (declaration)


State 82

   21 decl_list: decl_list ',' . declaration

    ENTER  shift, and go to state 1

    declaration  go to state 88


State 83

   22 struct_decl: PROCLAIM ID '<' decl_list '>' .

    $default  reduce using rule 22 (struct_decl)


State 84

   23 if_statement: ASK WHETHER '<' expression '>' . THEN '<' statements '>'
   24             | ASK WHETHER '<' expression '>' . THEN '<' statements '>' OTHERWISE '<' statements '>'

    THEN  shift, and go to state 89


State 85

   35 expression: expression BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN . expression

    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12

    complex_identifier  go to state 16
    expression          go to state 90
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 86

   36 expression: expression BOOL_UP BOOL_TO BOOL_GREATER BOOL_THAN . expression

    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12

    complex_identifier  go to state 16
    expression          go to state 91
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 87

   19 declaration: ENTER FIXED var_type ID TELLING expression .
   26 expression: expression . ADDING expression
   27           | expression . CONSPIRING expression
   28           | expression . DIVIDED expression
   29           | expression . REMINDING expression
   30           | expression . EMPOWERING expression
   31           | expression . BOOL_IS expression
   32           | expression . BOOL_IS NOT expression
   33           | expression . BOOL_LOWER BOOL_THAN expression
   34           | expression . BOOL_GREATER BOOL_THAN expression
   35           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   36           | expression . BOOL_UP BOOL_TO BOOL_GREATER BOOL_THAN expression

    DIVIDED       shift, and go to state 40
    REMINDING     shift, and go to state 41
    ADDING        shift, and go to state 42
    CONSPIRING    shift, and go to state 43
    EMPOWERING    shift, and go to state 44
    BOOL_IS       shift, and go to state 45
    BOOL_UP       shift, and go to state 46
    BOOL_LOWER    shift, and go to state 47
    BOOL_GREATER  shift, and go to state 48

    $default  reduce using rule 19 (declaration)


State 88

   21 decl_list: decl_list ',' declaration .

    $default  reduce using rule 21 (decl_list)


State 89

   23 if_statement: ASK WHETHER '<' expression '>' THEN . '<' statements '>'
   24             | ASK WHETHER '<' expression '>' THEN . '<' statements '>' OTHERWISE '<' statements '>'

    '<'  shift, and go to state 92


State 90

   26 expression: expression . ADDING expression
   27           | expression . CONSPIRING expression
   28           | expression . DIVIDED expression
   29           | expression . REMINDING expression
   30           | expression . EMPOWERING expression
   31           | expression . BOOL_IS expression
   32           | expression . BOOL_IS NOT expression
   33           | expression . BOOL_LOWER BOOL_THAN expression
   34           | expression . BOOL_GREATER BOOL_THAN expression
   35           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   35           | expression BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression .
   36           | expression . BOOL_UP BOOL_TO BOOL_GREATER BOOL_THAN expression

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 35 (expression)


State 91

   26 expression: expression . ADDING expression
   27           | expression . CONSPIRING expression
   28           | expression . DIVIDED expression
   29           | expression . REMINDING expression
   30           | expression . EMPOWERING expression
   31           | expression . BOOL_IS expression
   32           | expression . BOOL_IS NOT expression
   33           | expression . BOOL_LOWER BOOL_THAN expression
   34           | expression . BOOL_GREATER BOOL_THAN expression
   35           | expression . BOOL_UP BOOL_TO BOOL_LOWER BOOL_THAN expression
   36           | expression . BOOL_UP BOOL_TO BOOL_GREATER BOOL_THAN expression
   36           | expression BOOL_UP BOOL_TO BOOL_GREATER BOOL_THAN expression .

    BOOL_IS       error (nonassociative)
    BOOL_UP       error (nonassociative)
    BOOL_LOWER    error (nonassociative)
    BOOL_GREATER  error (nonassociative)

    $default  reduce using rule 36 (expression)


State 92

   23 if_statement: ASK WHETHER '<' expression '>' THEN '<' . statements '>'
   24             | ASK WHETHER '<' expression '>' THEN '<' . statements '>' OTHERWISE '<' statements '>'

    ENTER       shift, and go to state 1
    PROCLAIM    shift, and go to state 2
    LET         shift, and go to state 3
    ASK         shift, and go to state 4
    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12

    statements          go to state 93
    statement           go to state 15
    complex_identifier  go to state 16
    assign              go to state 17
    declaration         go to state 18
    struct_decl         go to state 19
    if_statement        go to state 20
    expression          go to state 21
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 93

    3 statements: statements . statement
   23 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements . '>'
   24             | ASK WHETHER '<' expression '>' THEN '<' statements . '>' OTHERWISE '<' statements '>'

    ENTER       shift, and go to state 1
    PROCLAIM    shift, and go to state 2
    LET         shift, and go to state 3
    ASK         shift, and go to state 4
    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12
    '>'         shift, and go to state 94

    statement           go to state 39
    complex_identifier  go to state 16
    assign              go to state 17
    declaration         go to state 18
    struct_decl         go to state 19
    if_statement        go to state 20
    expression          go to state 21
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 94

   23 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>' .
   24             | ASK WHETHER '<' expression '>' THEN '<' statements '>' . OTHERWISE '<' statements '>'

    OTHERWISE  shift, and go to state 95

    $default  reduce using rule 23 (if_statement)


State 95

   24 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE . '<' statements '>'

    '<'  shift, and go to state 96


State 96

   24 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE '<' . statements '>'

    ENTER       shift, and go to state 1
    PROCLAIM    shift, and go to state 2
    LET         shift, and go to state 3
    ASK         shift, and go to state 4
    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12

    statements          go to state 97
    statement           go to state 15
    complex_identifier  go to state 16
    assign              go to state 17
    declaration         go to state 18
    struct_decl         go to state 19
    if_statement        go to state 20
    expression          go to state 21
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 97

    3 statements: statements . statement
   24 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE '<' statements . '>'

    ENTER       shift, and go to state 1
    PROCLAIM    shift, and go to state 2
    LET         shift, and go to state 3
    ASK         shift, and go to state 4
    ID          shift, and go to state 5
    NUMBER      shift, and go to state 6
    STRING      shift, and go to state 7
    BOOL_TRUE   shift, and go to state 8
    BOOL_FALSE  shift, and go to state 9
    QUOTE       shift, and go to state 10
    SUMMON      shift, and go to state 11
    '<'         shift, and go to state 12
    '>'         shift, and go to state 98

    statement           go to state 39
    complex_identifier  go to state 16
    assign              go to state 17
    declaration         go to state 18
    struct_decl         go to state 19
    if_statement        go to state 20
    expression          go to state 21
    predef_func         go to state 22
    output              go to state 23
    input               go to state 24


State 98

   24 if_statement: ASK WHETHER '<' expression '>' THEN '<' statements '>' OTHERWISE '<' statements '>' .

    $default  reduce using rule 24 (if_statement)
