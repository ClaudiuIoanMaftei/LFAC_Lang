Terminals unused in grammar

   THERE
   EQUALLING
   UPON
   ADDED
   ASCEND
   DESCEND
   CRY
   FOR
   IS
   LEFT
   RIGHT
   UP
   TO
   DOWN
   LOWER
   GREATER
   THAN
   EXEUNT
   NOT
   SINCE
   ASK
   WHETHER
   THEN
   OTHERWISE
   CHANGES
   INCREASES
   DECREASES
   WHENEVER
   DOES
   NONE
   ONE
   TWICE


Grammar

    0 $accept: programm $end

    1 programm: statements

    2 statements: statement
    3           | statements statement

    4 statement: expression
    5          | declaration
    6          | struct_decl
    7          | assign

    8 complex_identifier: ID
    9                   | ID FROM complex_identifier

   10 var_type: INT_TYPE
   11         | STR_TYPE
   12         | BOOLEAN_TYPE
   13         | ID

   14 assign: LET complex_identifier expression

   15 declaration: ENTER var_type ID
   16            | ENTER FIXED var_type ID
   17            | ENTER var_type ID TELLING expression
   18            | ENTER FIXED var_type ID TELLING expression

   19 decl_list: declaration
   20          | decl_list ',' declaration

   21 struct_decl: PROCLAIM ID '<' decl_list '>'

   22 expression: '<' expression '>'
   23           | expression ADDING expression
   24           | expression CONSPIRING expression
   25           | expression DIVIDED expression
   26           | expression REMINDING expression
   27           | expression EMPOWERING expression
   28           | complex_identifier
   29           | NUMBER
   30           | STRING
   31           | BOOL_FALSE
   32           | BOOL_TRUE
   33           | predef_func

   34 predef_func: output
   35            | input

   36 output: QUOTE '<' expression '>'

   37 input: SUMMON '<' complex_identifier '>'


Terminals, with rules where they appear

$end (0) 0
',' (44) 20
'<' (60) 21 22 36 37
'>' (62) 21 22 36 37
error (256)
ID (258) 8 9 13 15 16 17 18 21
TELLING (259) 17 18
FIXED (260) 16 18
INT_TYPE (261) 10
STR_TYPE (262) 11
BOOLEAN_TYPE (263) 12
NUMBER (264) 29
STRING (265) 30
BOOL_TRUE (266) 32
BOOL_FALSE (267) 31
QUOTE (268) 36
ENTER (269) 15 16 17 18
PROCLAIM (270) 21
LET (271) 14
THERE (272)
EQUALLING (273)
UPON (274)
ADDED (275)
ASCEND (276)
DESCEND (277)
CRY (278)
FOR (279)
DIVIDED (280) 25
REMINDING (281) 26
ADDING (282) 23
CONSPIRING (283) 24
EMPOWERING (284) 27
IS (285)
LEFT (286)
RIGHT (287)
UP (288)
TO (289)
DOWN (290)
LOWER (291)
GREATER (292)
THAN (293)
EXEUNT (294)
SUMMON (295) 37
NOT (296)
SINCE (297)
FROM (298) 9
ASK (299)
WHETHER (300)
THEN (301)
OTHERWISE (302)
CHANGES (303)
INCREASES (304)
DECREASES (305)
WHENEVER (306)
DOES (307)
NONE (308)
ONE (309)
TWICE (310)


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
programm (60)
    on left: 1, on right: 0
statements (61)
    on left: 2 3, on right: 1 3
statement (62)
    on left: 4 5 6 7, on right: 2 3
complex_identifier (63)
    on left: 8 9, on right: 9 14 28 37
var_type (64)
    on left: 10 11 12 13, on right: 15 16 17 18
assign (65)
    on left: 14, on right: 7
declaration (66)
    on left: 15 16 17 18, on right: 5 19 20
decl_list (67)
    on left: 19 20, on right: 20 21
struct_decl (68)
    on left: 21, on right: 6
expression (69)
    on left: 22 23 24 25 26 27 28 29 30 31 32 33, on right: 4 14 17
    18 22 23 24 25 26 27 36
predef_func (70)
    on left: 34 35, on right: 33
output (71)
    on left: 36, on right: 34
input (72)
    on left: 37, on right: 35


State 0

    0 $accept: . programm $end

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    ENTER       shift, and go to state 7
    PROCLAIM    shift, and go to state 8
    LET         shift, and go to state 9
    SUMMON      shift, and go to state 10
    '<'         shift, and go to state 11

    programm            go to state 12
    statements          go to state 13
    statement           go to state 14
    complex_identifier  go to state 15
    assign              go to state 16
    declaration         go to state 17
    struct_decl         go to state 18
    expression          go to state 19
    predef_func         go to state 20
    output              go to state 21
    input               go to state 22


State 1

    8 complex_identifier: ID .
    9                   | ID . FROM complex_identifier

    FROM  shift, and go to state 23

    $default  reduce using rule 8 (complex_identifier)


State 2

   29 expression: NUMBER .

    $default  reduce using rule 29 (expression)


State 3

   30 expression: STRING .

    $default  reduce using rule 30 (expression)


State 4

   32 expression: BOOL_TRUE .

    $default  reduce using rule 32 (expression)


State 5

   31 expression: BOOL_FALSE .

    $default  reduce using rule 31 (expression)


State 6

   36 output: QUOTE . '<' expression '>'

    '<'  shift, and go to state 24


State 7

   15 declaration: ENTER . var_type ID
   16            | ENTER . FIXED var_type ID
   17            | ENTER . var_type ID TELLING expression
   18            | ENTER . FIXED var_type ID TELLING expression

    ID            shift, and go to state 25
    FIXED         shift, and go to state 26
    INT_TYPE      shift, and go to state 27
    STR_TYPE      shift, and go to state 28
    BOOLEAN_TYPE  shift, and go to state 29

    var_type  go to state 30


State 8

   21 struct_decl: PROCLAIM . ID '<' decl_list '>'

    ID  shift, and go to state 31


State 9

   14 assign: LET . complex_identifier expression

    ID  shift, and go to state 1

    complex_identifier  go to state 32


State 10

   37 input: SUMMON . '<' complex_identifier '>'

    '<'  shift, and go to state 33


State 11

   22 expression: '<' . expression '>'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    SUMMON      shift, and go to state 10
    '<'         shift, and go to state 11

    complex_identifier  go to state 15
    expression          go to state 34
    predef_func         go to state 20
    output              go to state 21
    input               go to state 22


State 12

    0 $accept: programm . $end

    $end  shift, and go to state 35


State 13

    1 programm: statements .
    3 statements: statements . statement

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    ENTER       shift, and go to state 7
    PROCLAIM    shift, and go to state 8
    LET         shift, and go to state 9
    SUMMON      shift, and go to state 10
    '<'         shift, and go to state 11

    $default  reduce using rule 1 (programm)

    statement           go to state 36
    complex_identifier  go to state 15
    assign              go to state 16
    declaration         go to state 17
    struct_decl         go to state 18
    expression          go to state 19
    predef_func         go to state 20
    output              go to state 21
    input               go to state 22


State 14

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 15

   28 expression: complex_identifier .

    $default  reduce using rule 28 (expression)


State 16

    7 statement: assign .

    $default  reduce using rule 7 (statement)


State 17

    5 statement: declaration .

    $default  reduce using rule 5 (statement)


State 18

    6 statement: struct_decl .

    $default  reduce using rule 6 (statement)


State 19

    4 statement: expression .
   23 expression: expression . ADDING expression
   24           | expression . CONSPIRING expression
   25           | expression . DIVIDED expression
   26           | expression . REMINDING expression
   27           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 37
    REMINDING   shift, and go to state 38
    ADDING      shift, and go to state 39
    CONSPIRING  shift, and go to state 40
    EMPOWERING  shift, and go to state 41

    $default  reduce using rule 4 (statement)


State 20

   33 expression: predef_func .

    $default  reduce using rule 33 (expression)


State 21

   34 predef_func: output .

    $default  reduce using rule 34 (predef_func)


State 22

   35 predef_func: input .

    $default  reduce using rule 35 (predef_func)


State 23

    9 complex_identifier: ID FROM . complex_identifier

    ID  shift, and go to state 1

    complex_identifier  go to state 42


State 24

   36 output: QUOTE '<' . expression '>'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    SUMMON      shift, and go to state 10
    '<'         shift, and go to state 11

    complex_identifier  go to state 15
    expression          go to state 43
    predef_func         go to state 20
    output              go to state 21
    input               go to state 22


State 25

   13 var_type: ID .

    $default  reduce using rule 13 (var_type)


State 26

   16 declaration: ENTER FIXED . var_type ID
   18            | ENTER FIXED . var_type ID TELLING expression

    ID            shift, and go to state 25
    INT_TYPE      shift, and go to state 27
    STR_TYPE      shift, and go to state 28
    BOOLEAN_TYPE  shift, and go to state 29

    var_type  go to state 44


State 27

   10 var_type: INT_TYPE .

    $default  reduce using rule 10 (var_type)


State 28

   11 var_type: STR_TYPE .

    $default  reduce using rule 11 (var_type)


State 29

   12 var_type: BOOLEAN_TYPE .

    $default  reduce using rule 12 (var_type)


State 30

   15 declaration: ENTER var_type . ID
   17            | ENTER var_type . ID TELLING expression

    ID  shift, and go to state 45


State 31

   21 struct_decl: PROCLAIM ID . '<' decl_list '>'

    '<'  shift, and go to state 46


State 32

   14 assign: LET complex_identifier . expression

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    SUMMON      shift, and go to state 10
    '<'         shift, and go to state 11

    complex_identifier  go to state 15
    expression          go to state 47
    predef_func         go to state 20
    output              go to state 21
    input               go to state 22


State 33

   37 input: SUMMON '<' . complex_identifier '>'

    ID  shift, and go to state 1

    complex_identifier  go to state 48


State 34

   22 expression: '<' expression . '>'
   23           | expression . ADDING expression
   24           | expression . CONSPIRING expression
   25           | expression . DIVIDED expression
   26           | expression . REMINDING expression
   27           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 37
    REMINDING   shift, and go to state 38
    ADDING      shift, and go to state 39
    CONSPIRING  shift, and go to state 40
    EMPOWERING  shift, and go to state 41
    '>'         shift, and go to state 49


State 35

    0 $accept: programm $end .

    $default  accept


State 36

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 37

   25 expression: expression DIVIDED . expression

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    SUMMON      shift, and go to state 10
    '<'         shift, and go to state 11

    complex_identifier  go to state 15
    expression          go to state 50
    predef_func         go to state 20
    output              go to state 21
    input               go to state 22


State 38

   26 expression: expression REMINDING . expression

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    SUMMON      shift, and go to state 10
    '<'         shift, and go to state 11

    complex_identifier  go to state 15
    expression          go to state 51
    predef_func         go to state 20
    output              go to state 21
    input               go to state 22


State 39

   23 expression: expression ADDING . expression

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    SUMMON      shift, and go to state 10
    '<'         shift, and go to state 11

    complex_identifier  go to state 15
    expression          go to state 52
    predef_func         go to state 20
    output              go to state 21
    input               go to state 22


State 40

   24 expression: expression CONSPIRING . expression

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    SUMMON      shift, and go to state 10
    '<'         shift, and go to state 11

    complex_identifier  go to state 15
    expression          go to state 53
    predef_func         go to state 20
    output              go to state 21
    input               go to state 22


State 41

   27 expression: expression EMPOWERING . expression

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    SUMMON      shift, and go to state 10
    '<'         shift, and go to state 11

    complex_identifier  go to state 15
    expression          go to state 54
    predef_func         go to state 20
    output              go to state 21
    input               go to state 22


State 42

    9 complex_identifier: ID FROM complex_identifier .

    $default  reduce using rule 9 (complex_identifier)


State 43

   23 expression: expression . ADDING expression
   24           | expression . CONSPIRING expression
   25           | expression . DIVIDED expression
   26           | expression . REMINDING expression
   27           | expression . EMPOWERING expression
   36 output: QUOTE '<' expression . '>'

    DIVIDED     shift, and go to state 37
    REMINDING   shift, and go to state 38
    ADDING      shift, and go to state 39
    CONSPIRING  shift, and go to state 40
    EMPOWERING  shift, and go to state 41
    '>'         shift, and go to state 55


State 44

   16 declaration: ENTER FIXED var_type . ID
   18            | ENTER FIXED var_type . ID TELLING expression

    ID  shift, and go to state 56


State 45

   15 declaration: ENTER var_type ID .
   17            | ENTER var_type ID . TELLING expression

    TELLING  shift, and go to state 57

    $default  reduce using rule 15 (declaration)


State 46

   21 struct_decl: PROCLAIM ID '<' . decl_list '>'

    ENTER  shift, and go to state 7

    declaration  go to state 58
    decl_list    go to state 59


State 47

   14 assign: LET complex_identifier expression .
   23 expression: expression . ADDING expression
   24           | expression . CONSPIRING expression
   25           | expression . DIVIDED expression
   26           | expression . REMINDING expression
   27           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 37
    REMINDING   shift, and go to state 38
    ADDING      shift, and go to state 39
    CONSPIRING  shift, and go to state 40
    EMPOWERING  shift, and go to state 41

    $default  reduce using rule 14 (assign)


State 48

   37 input: SUMMON '<' complex_identifier . '>'

    '>'  shift, and go to state 60


State 49

   22 expression: '<' expression '>' .

    $default  reduce using rule 22 (expression)


State 50

   23 expression: expression . ADDING expression
   24           | expression . CONSPIRING expression
   25           | expression . DIVIDED expression
   25           | expression DIVIDED expression .
   26           | expression . REMINDING expression
   27           | expression . EMPOWERING expression

    $default  reduce using rule 25 (expression)


State 51

   23 expression: expression . ADDING expression
   24           | expression . CONSPIRING expression
   25           | expression . DIVIDED expression
   26           | expression . REMINDING expression
   26           | expression REMINDING expression .
   27           | expression . EMPOWERING expression

    $default  reduce using rule 26 (expression)


State 52

   23 expression: expression . ADDING expression
   23           | expression ADDING expression .
   24           | expression . CONSPIRING expression
   25           | expression . DIVIDED expression
   26           | expression . REMINDING expression
   27           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 37
    REMINDING   shift, and go to state 38
    EMPOWERING  shift, and go to state 41

    $default  reduce using rule 23 (expression)


State 53

   23 expression: expression . ADDING expression
   24           | expression . CONSPIRING expression
   24           | expression CONSPIRING expression .
   25           | expression . DIVIDED expression
   26           | expression . REMINDING expression
   27           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 37
    REMINDING   shift, and go to state 38
    EMPOWERING  shift, and go to state 41

    $default  reduce using rule 24 (expression)


State 54

   23 expression: expression . ADDING expression
   24           | expression . CONSPIRING expression
   25           | expression . DIVIDED expression
   26           | expression . REMINDING expression
   27           | expression . EMPOWERING expression
   27           | expression EMPOWERING expression .

    $default  reduce using rule 27 (expression)


State 55

   36 output: QUOTE '<' expression '>' .

    $default  reduce using rule 36 (output)


State 56

   16 declaration: ENTER FIXED var_type ID .
   18            | ENTER FIXED var_type ID . TELLING expression

    TELLING  shift, and go to state 61

    $default  reduce using rule 16 (declaration)


State 57

   17 declaration: ENTER var_type ID TELLING . expression

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    SUMMON      shift, and go to state 10
    '<'         shift, and go to state 11

    complex_identifier  go to state 15
    expression          go to state 62
    predef_func         go to state 20
    output              go to state 21
    input               go to state 22


State 58

   19 decl_list: declaration .

    $default  reduce using rule 19 (decl_list)


State 59

   20 decl_list: decl_list . ',' declaration
   21 struct_decl: PROCLAIM ID '<' decl_list . '>'

    ','  shift, and go to state 63
    '>'  shift, and go to state 64


State 60

   37 input: SUMMON '<' complex_identifier '>' .

    $default  reduce using rule 37 (input)


State 61

   18 declaration: ENTER FIXED var_type ID TELLING . expression

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BOOL_TRUE   shift, and go to state 4
    BOOL_FALSE  shift, and go to state 5
    QUOTE       shift, and go to state 6
    SUMMON      shift, and go to state 10
    '<'         shift, and go to state 11

    complex_identifier  go to state 15
    expression          go to state 65
    predef_func         go to state 20
    output              go to state 21
    input               go to state 22


State 62

   17 declaration: ENTER var_type ID TELLING expression .
   23 expression: expression . ADDING expression
   24           | expression . CONSPIRING expression
   25           | expression . DIVIDED expression
   26           | expression . REMINDING expression
   27           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 37
    REMINDING   shift, and go to state 38
    ADDING      shift, and go to state 39
    CONSPIRING  shift, and go to state 40
    EMPOWERING  shift, and go to state 41

    $default  reduce using rule 17 (declaration)


State 63

   20 decl_list: decl_list ',' . declaration

    ENTER  shift, and go to state 7

    declaration  go to state 66


State 64

   21 struct_decl: PROCLAIM ID '<' decl_list '>' .

    $default  reduce using rule 21 (struct_decl)


State 65

   18 declaration: ENTER FIXED var_type ID TELLING expression .
   23 expression: expression . ADDING expression
   24           | expression . CONSPIRING expression
   25           | expression . DIVIDED expression
   26           | expression . REMINDING expression
   27           | expression . EMPOWERING expression

    DIVIDED     shift, and go to state 37
    REMINDING   shift, and go to state 38
    ADDING      shift, and go to state 39
    CONSPIRING  shift, and go to state 40
    EMPOWERING  shift, and go to state 41

    $default  reduce using rule 18 (declaration)


State 66

   20 decl_list: decl_list ',' declaration .

    $default  reduce using rule 20 (decl_list)
